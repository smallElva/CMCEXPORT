{"version":3,"sources":["webpack:///src/components/content/wisdom/rule/createRule.vue","webpack:///./src/components/content/wisdom/rule/createRule.vue?c406","webpack:///./src/components/content/wisdom/rule/createRule.vue?9818","webpack:///./src/components/content/wisdom/rule/createRule.vue","webpack:///./src/components/content/wisdom/rule/createRule.vue?0afd","webpack:///./src/components/content/wisdom/rule/createRule.vue?6891","webpack:///./src/components/content/wisdom/rule/createRule.vue?1c84"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkEA;;CAEA;;AACA;AACA;AACA,oBADA;AAEA;AACA;AADA,GAFA;AAKA,MALA,kBAKA;AACA;AACA,mBADA;AAEA,mKAFA;AAGA,2BAHA;AAIA,gBACA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA,OAJA,EAKA;AAAA;AAAA;AAAA,OALA,EAMA;AAAA;AAAA;AAAA,OANA,EAOA;AAAA;AAAA;AAAA,OAPA,EAQA;AAAA;AAAA;AAAA,OARA,EASA;AAAA;AAAA;AAAA,OATA,EAUA;AAAA;AAAA;AAAA,OAVA,EAWA;AAAA;AAAA;AAAA,OAXA,EAYA;AAAA;AAAA;AAAA,OAZA,EAaA;AAAA;AAAA;AAAA,OAbA,EAcA;AAAA;AAAA;AAAA,OAdA,EAeA;AAAA;AAAA;AAAA,OAfA,EAgBA;AAAA;AAAA;AAAA,OAhBA,EAiBA;AAAA;AAAA;AAAA,OAjBA,EAkBA;AAAA;AAAA;AAAA,OAlBA,EAmBA;AAAA;AAAA;AAAA,OAnBA,CAJA;AAyBA,uBAzBA;AAyBA;AACA;AACA;AACA,qBADA;AACA;AACA,uBAFA;AAEA;AACA,uBAHA;AAGA;AACA,qBAJA,CAIA;;AAJA,OADA,CA1BA;AAkCA,iBAlCA;AAkCA;AACA,iBAnCA;AAmCA;AACA,kBApCA;AAoCA;AACA,gBArCA;AAqCA;AACA;AACA;AACA,aADA;AAEA;AAFA,OADA,EAKA;AACA,aADA;AAEA;AAFA,OALA,EASA;AACA,aADA;AAEA;AAFA,OATA,EAaA;AACA,aADA;AAEA;AAFA,OAbA,EAiBA;AACA,aADA;AAEA;AAFA,OAjBA,EAqBA;AACA,aADA;AAEA;AAFA,OArBA,EAyBA;AACA,aADA;AAEA;AAFA,OAzBA,CAtCA;AAoEA,iBApEA;AAoEA;AACA,qBArEA,CAqEA;;AArEA;AAuEA,GA7EA;AA8EA,SA9EA,qBA8EA,CAEA,CAhFA;AAiFA,SAjFA,qBAiFA;AACA;AACA,GAnFA;AAoFA;AACA;AACA,aADA,mBACA,MADA,EACA,MADA,EACA;AACA;;AACA;AACA;AAAA;;AACA;AACA;AACA;;AACA;AACA,OATA;AAUA;AAVA;AADA,GApFA;AAkGA;AACA,eADA,yBACA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,sCADA,CACA;;AACA;AACA;AACA;AACA,WAHA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aALA;AAMA,WAPA;AAQA;AACA,OAvBA;AAwBA;AACA;AA3BA,GAlGA;AA+HA;AACA;AACA;AACA;AACA,eAJA,yBAIA;AAAA;;AACA;;AACA;AACA;AACA,qBADA,CACA;;AADA;AAGA,+CACA,IADA,CACA;AACA;;AACA;AACA,6CADA,CACA;;AACA,6CAFA,CAEA;;AACA;AACA;AACA;;AACA;AACA,iDADA,CACA;AACA;AACA;AACA,SAbA,WAcA;AACA;AACA,SAhBA;AAiBA;AAEA,KA7BA;;AA8BA;AACA;AACA;AACA,YAjCA,sBAiCA;AAAA;;AACA;;AACA;AACA;AACA,qBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA;;AAEA;AACA;;AACA;AACA;AACA,uBADA;AAEA,2BAFA;AAGA;AAHA;AAKA;AACA,SAPA,MAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA7BA,CA8BA;;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAtCA,CAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,qBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA;;AAEA;AACA,2BADA;AAEA,2BAFA;AAGA,mBAHA;AAGA;AACA,6BAJA;AAKA,yBALA;AAKA;AACA,iCANA;AAMA;AACA,6BAPA;AAOA;AACA;AARA;AAUA;;AACA;AAAA;AACA;AACA,wCACA,IADA,CACA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA,WANA,MAOA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,WAPA,MAQA;AACA;AACA,yBADA;AAEA,iCAFA;AAGA;AAHA;AAKA;AACA,SAxBA,WAyBA;AACA;AACA,SA3BA;AA4BA,OA9BA,MA+BA;AAAA;AACA,yCACA,IADA,CACA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;;AAKA;AACA;AADA;AAGA,WATA,MAUA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,WAPA,MAQA;AACA;AACA,yBADA;AAEA,iCAFA;AAGA;AAHA;AAKA;AACA,SA3BA,WA4BA;AACA;AACA,SA9BA;AA+BA;AACA,KA5KA;;AA6KA;AACA;AACA;AACA,SAhLA,mBAgLA;AACA;;AACA;AAAA;AACA;AACA,OAFA,MAGA;AAAA;AACA;AACA;AACA,uBADA;AACA;AACA,yBAFA;AAEA;AACA,yBAHA;AAGA;AACA,uBAJA,CAIA;;AAJA,SADA;AAQA,0BATA,CASA;;AACA,0BAVA,CAUA;;AACA,2BAXA,CAWA;;AACA,yBAZA,CAYA;;AACA,0BAbA,CAaA;;AACA,8BAdA,CAcA;AACA;AACA,KArMA;;AAsMA;AACA;AACA;AACA,iBAzMA,2BAyMA;AACA;AACA;AADA;AAGA,KA7MA;;AA8MA;AACA;AACA;AACA,iBAjNA,yBAiNA,IAjNA,EAiNA;AACA;AACA,KAnNA;;AAoNA;AACA;AACA;AACA,iBAvNA,2BAuNA,CAEA,CAzNA;;AA0NA;AACA;AACA;AACA,mBA7NA,2BA6NA,IA7NA,EA6NA;AACA;AACA,KA/NA;;AAgOA;AACA;AACA;AACA,oBAnOA,4BAmOA,IAnOA,EAmOA,KAnOA,EAmOA;AACA;AACA,KArOA;;AAsOA;AACA;AACA;AACA,iBAzOA,2BAyOA;AACA,gBACA;AACA,qBADA;AACA;AACA,uBAFA;AAEA;AACA,uBAHA;AAGA;AACA,qBAJA,CAIA;;AAJA,OADA;AAOA;AACA,KAlPA;AAmPA;AACA,eApPA,uBAoPA,IApPA,EAoPA;AACA;AACA;AACA,KAvPA;AAwPA;AACA,cAzPA,sBAyPA,IAzPA,EAyPA;AACA;AACA;AACA,KA5PA;AA6PA;AACA,YA9PA,sBA8PA;AACA;AACA;AACA,KAjQA;AAkQA;AACA,YAnQA,sBAmQA;AACA;AACA;AACA;AACA;AACA;AACA,OALA,MAMA;AACA;AACA;AACA;AA7QA;AA/HA,G;;;;;;;;;;;;ACtEA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD,eAAe,+BAA+B;AAC9C,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,8BAA8B;AACvC;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA,eAAe,gDAAgD;AAC/D;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,qBAAqB,8BAA8B;AACnD,uBAAuB,sBAAsB;AAC7C;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yCAAyC;AAC3D,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC,sBAAsB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,sBAAsB;AACzC;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9VA;AAAA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;AACc;;;AAGvE;AACsH;AACtH,gBAAgB,6HAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAA6O,CAAgB,2RAAG,EAAC,C;;;;;;;;;;;;ACAjQ;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"js/57-ee058fba.js","sourcesContent":["<template>\r\n    <div class=\"wisdom rule-content\">\r\n        <div class=\"header-create\">\r\n            <div class=\"title\"><a @click=\"routeToBefore()\" class=\"linkTitle\">智子规则列表</a> / 创建智子规则</div>\r\n        </div>\r\n        <div class=\"content\">\r\n            <div class=\"create-block\">\r\n                <div class=\"text\">规则名称：</div>\r\n                <input class=\"create-input\" placeholder=\"请输入规则名称\" v-model=\"ruleName\">\r\n            </div>\r\n            <div class=\"create-block\">\r\n                <div class=\"text\">作用域：</div>\r\n                <treeselect class=\"right\" v-model=\"scope\" :multiple=\"false\" :options=\"scopeList\" :clearable=\"false\" placeholder=\"请选择作用域类型\" @select=\"selectScopeType\"/>\r\n            </div>\r\n            <div class=\"create-block\">\r\n                <div class=\"text\">备注：</div>\r\n                <textarea class=\"create-textarea\" placeholder=\"请输入备注文字\" v-model=\"remark\"></textarea>\r\n            </div>\r\n            <div class=\"datasource\">\r\n                <div class=\"create-block block\" v-for=\"(item,index) in dataSources\" :key=\"index\">\r\n                    <div class=\"text\">数据源A{{Number(index + 1)}}：</div>\r\n                    <div class=\"right-pos\">\r\n                        <treeselect class=\"select-type\" v-model=\"item.posType\" :multiple=\"false\" :options=\"item.posTypeList\" :clearable=\"false\" placeholder=\"请选择测点类型\" @select=\"selectPosType(item)\"/>\r\n                        <treeselect class=\"select-value\" v-model=\"item.valueType\" :multiple=\"true\" :options=\"item.valueList\" :clearable=\"true\" placeholder=\"请选择特征值\"  :noOptionsText=\"noTips\" @select=\"selectValType\"/>\r\n                        <div class=\"deleteBtn\" @click=\"deleteDataSource(item,index)\">删除</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"create-block\">\r\n                    <div class=\"text\"></div>\r\n                    <div class=\"right\">\r\n                        <button class=\"create-btn pad-btn\" @click=\"addDataSource()\">+新增数据源</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"create-block\">\r\n                <div class=\"text\">智子规则：</div>\r\n                <textarea class=\"create-textarea\" placeholder=\"请输入公式\" readonly=\"true\" v-model=\"calcWay\"></textarea>\r\n            </div>\r\n            <div class=\"create-block\">\r\n                <div class=\"text\"></div>\r\n                <div class=\"right-btns\">\r\n                    <button class=\"calc-btn\" v-for=\"item in calcList1\" :key=\"item\" @click=\"addCalcItem(item)\"> {{item}}</button>\r\n                    <button class=\"calc-btn btn3\" v-for=\"item in calcList2\" :key=\"item\" @click=\"addCalcItem(item)\">{{item}} </button>\r\n                    <button class=\"calc-btn btn3\" @click=\"clearAll()\">全清</button>\r\n                    <button class=\"calc-btn btn3\" @click=\"clearOne\">退格</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"create-block\">\r\n                <div class=\"text\"></div>\r\n                <div class=\"right-vals\">\r\n                    <button class=\"val-btn\" v-for=\"item in chooseValList\" :key=\"item.text\" @click=\"addValItem(item)\"> {{item}}</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"create-block\">\r\n                    <div class=\"text\"></div>\r\n                    <div class=\"right\">\r\n                        <button class=\"create-btn\" @click=\"keepData()\">确定</button>\r\n                        <button class=\"grey-btn\" @click=\"reset()\">重置</button>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {codeObj} from \"@/utils/utils\";\r\n    // import the component\r\n    import Treeselect from '@riophae/vue-treeselect'\r\n    // import the styles\r\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\n    export default {\r\n        name: \"createRule\",\r\n        components:{\r\n            Treeselect\r\n        },\r\n        data(){\r\n            return{\r\n               noTips:'无数据',\r\n               calcList1:[\"2nd\",\"deg\",\"sin\",\"cos\",\"tan\",\"^\",\"lg\",\"ln\",\"√\",\"!\",0,1,2,3,4,\".\",\"+\",\"*\",\"e\",\"%\",5,6,7,8,9,\"=\",\"-\",\"/\",\"^(-1)\",\"π\"],\r\n               calcList2:[\"(\",\")\"],\r\n               options:[\r\n                   {id:1,label:'转速'},\r\n                   {id:2,label:'过程量'},\r\n                   {id:3,label:'振动'},\r\n                   {id:4,label:'包络'},\r\n                   {id:5,label:'数字量'},\r\n                   {id:6,label:'晃度'},\r\n                   {id:7,label:'温度'},\r\n                   {id:8,label:'振动阶次'},\r\n                   {id:9,label:'包络阶次'},\r\n                   {id:10,label:'工艺量'},\r\n                   {id:11,label:'倾覆'},\r\n                   {id:12,label:'倾角'},\r\n                   {id:13,label:'合成倾角'},\r\n                   {id:14,label:'螺栓'},\r\n                   {id:15,label:'冲击'},\r\n                   {id:16,label:'冲击阶次'},\r\n                   {id:17,label:'轨道波磨'},\r\n                   {id:18,label:'脱轨监测'},\r\n                   {id:201,label:'智子'},\r\n               ],\r\n               chooseValList:[],//选中的特征值列表\r\n               dataSource:[//数据源列表\r\n                   {\r\n                       posType:null,//选中的测点类型\r\n                       posTypeList:[],//测点类型列表\r\n                       valueType:null,//特征值类型\r\n                       valueList:[],//特征值类型列表\r\n                   }\r\n               ],\r\n               formula:[],//公式元素\r\n               calcWay:'',//计算公式\r\n               ruleName:'',//规则名称\r\n               remark:'',//备注\r\n               scopeList:[//作用域列表 全局、机组动力部件、生产输出部件、传动机构、动静结合部、非动静结合部、工况工艺\r\n                    {\r\n                        id:0,\r\n                        label:'全局'\r\n                    },\r\n                    {\r\n                        id:1,\r\n                        label:'机组动力部件'\r\n                    },\r\n                    {\r\n                        id:2,\r\n                        label:'生产输出部件'\r\n                    },\r\n                    {\r\n                        id:3,\r\n                        label:'传动机构'\r\n                    },\r\n                    {\r\n                        id:4,\r\n                        label:'动静结合部'\r\n                    },\r\n                    {\r\n                        id:5,\r\n                        label:'非动静结合部'\r\n                    },\r\n                    {\r\n                        id:6,\r\n                        label:'工况工艺'\r\n                    },\r\n               ],\r\n               scope:null,//作用域\r\n               scopeName:null,//作用域中文名\r\n            }\r\n        },\r\n        created(){\r\n            \r\n        },\r\n        mounted(){\r\n           this.getRuleInfo()\r\n        },\r\n        watch:{\r\n           dataSource:{\r\n                handler(newVal,oldVal){\r\n                    this.chooseValList = [];\r\n                    for(let i=0;i<newVal.length;i++){\r\n                       if(newVal[i].valueTypeNameList){\r\n                            this.chooseValList.push(...newVal[i].valueTypeNameList);\r\n                        } \r\n                    }\r\n                    this.$forceUpdate();\r\n                },\r\n                deep:true\r\n           }\r\n        },\r\n        computed:{\r\n            dataSources(){\r\n                this.dataSource.forEach((item,index)=>{\r\n                    item.posTypeList = this.options;\r\n                    if(item.posType){\r\n                        item.valueList = codeObj(0,3)[item.posType];\r\n                    }\r\n                    if(item.valueList && item.valueList.length){\r\n                        item.valueList.splice(0,1);//去掉时间特征值\r\n                        item.valueList.forEach(value=>{\r\n                            value.id=value.filed;\r\n                            value.label=value.name;\r\n                        })\r\n                    }\r\n                    if(item.valueType){\r\n                        item.valueTypeNameList = [];\r\n                        item.valueType.forEach(val=>{\r\n                            item.valueList.forEach(value=>{\r\n                                if(value.id == val){\r\n                                    let valName = \"A\" + Number(index + 1);\r\n                                    item.valueTypeNameList.push(valName + value.name)\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n                return this.dataSource;\r\n            },\r\n        },\r\n        methods: {\r\n            /**\r\n             * 获取某一条规则信息\r\n             */\r\n            getRuleInfo(){\r\n                let rule = this.$store.state.ruleInfo;\r\n                if(rule && rule.id !== null && rule.id !== undefined){\r\n                    let params = {\r\n                        id: rule.id,//规则id\r\n                    }\r\n                    this.$getApi.getRuleConfigByid(params)\r\n                        .then(res => {\r\n                            console.log(res)\r\n                            if(res.msg===0){\r\n                                this.ruleName = res.rules.name;//规则名称\r\n                                this.remark = res.rules.remark;//备注\r\n                                this.scope = res.rules.scope;\r\n                                this.calcWay = res.rules.content;\r\n                                this.dataSource = res.rules.dataSource;\r\n                                if(res.rules.formula != undefined){\r\n                                    this.formula = res.rules.formula;//公式元素数组\r\n                                }\r\n                            }\r\n                        })\r\n                            .catch(err=>{\r\n                                console.log('请求错误' ,err)\r\n                            })\r\n                }\r\n                \r\n            },\r\n             /**\r\n             * 点击确定\r\n             */\r\n            keepData(){\r\n                let dataSource = [];\r\n                if(this.ruleName===''){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: \"规则名称不能为空\",\r\n                        button: \"确认\",\r\n                    });\r\n                    return false;\r\n                }\r\n                \r\n                for(let i=0;i<this.dataSource.length;i++){\r\n                    let item = this.dataSource[i];\r\n                    if(item.posType===null){\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: \"数据源不能为空\",\r\n                            button: \"确认\",\r\n                        });\r\n                        return false;\r\n                    }\r\n                    else{\r\n                        let obj = {};\r\n                        obj.posType = item.posType;\r\n                        obj.dataSourceName = 'A' + Number(i + 1);\r\n                        obj.valueType = item.valueType;\r\n                        obj.valueTypeNameList = item.valueTypeNameList;\r\n                        dataSource.push(obj);\r\n                    }\r\n                }\r\n                // 判断公式中是否包含数据源\r\n                let flag = false;\r\n                for(let i=0;i<this.chooseValList.length;i++){\r\n                    for(let j=0;j<this.formula.length;j++){\r\n                        if(this.chooseValList[i] == this.formula[j]){\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                }\r\n                // this.dataSource.forEach((item,index)=>{\r\n                //     let obj = {};\r\n                //     obj.posType = item.posType;\r\n                //     obj.dataSourceName = 'A' + Number(index + 1);\r\n                //     obj.valueType = item.valueType;\r\n                //     obj.valueTypeNameList = item.valueTypeNameList;\r\n                //     dataSource.push(obj);\r\n                // })\r\n                if(this.calcWay===''){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: \"智子规则不能为空\",\r\n                        button: \"确认\",\r\n                    });\r\n                    return false;\r\n                }\r\n                if(!flag){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: \"智子规则中需包含数据源\",\r\n                        button: \"确认\",\r\n                    });\r\n                    return false;\r\n                }\r\n\r\n                let params ={\r\n                    name: this.ruleName,\r\n                    remark:this.remark,\r\n                    ruletype:1,//0表示过滤规则,1智子公式\r\n                    content:this.calcWay,\r\n                    scope:this.scope,//作用域\r\n                    scopeName:this.scopeName,//作用域名称\r\n                    formula: this.formula,//公式数组\r\n                    dataSource\r\n                }\r\n                let rule = this.$store.state.ruleInfo;\r\n                if(rule && rule.id !== null){//表示修改\r\n                    params.id = rule.id;\r\n                    this.$getApi.updateRule(params)\r\n                        .then(res => {\r\n                            if(res.msg===0){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"修改成功\",\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                            else if(res.msg===2){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"修改失败\",\r\n                                    button: \"确认\",\r\n                                });\r\n                                console.log('后台错误！')\r\n                            }\r\n                            else if(res.msg===3){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"规则名称重复，修改失败\",\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                        })\r\n                            .catch(err=>{\r\n                                console.log('请求错误' ,err)\r\n                            })\r\n                }\r\n                else{//表示新建\r\n                    this.$getApi.saveNewRule(params)\r\n                        .then(res => {\r\n                            if(res.msg===0){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"创建成功\",\r\n                                    button: \"确认\",\r\n                                });\r\n                                this.$router.push({\r\n                                    name: `rule`,\r\n                                })\r\n                            }\r\n                            else if(res.msg===2){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"创建失败\",\r\n                                    button: \"确认\",\r\n                                });\r\n                                console.log('后台错误！')\r\n                            }\r\n                            else if(res.msg===3){\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: \"规则名称重复，创建失败\",\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                        })\r\n                            .catch(err=>{\r\n                                console.log('请求错误' ,err)\r\n                            })\r\n                }\r\n            },\r\n            /**\r\n             * 点击重置\r\n             */\r\n            reset(){\r\n                let rule = this.$store.state.ruleInfo;\r\n                if(rule && rule.id !== null){//编辑的重置回到原来\r\n                    this.getRuleInfo();\r\n                }\r\n                else{//新建的重置改为初始状态\r\n                    this.dataSource=[//数据源列表\r\n                        {\r\n                            posType:null,//选中的测点类型\r\n                            posTypeList:[],//测点类型列表\r\n                            valueType:null,//特征值类型\r\n                            valueList:[],//特征值类型列表\r\n                        }\r\n                    ];\r\n                    this.formula = [];//公式元素\r\n                    this.calcWay='';//计算公式\r\n                    this.ruleName='';//规则名称\r\n                    this.remark='';//备注\r\n                    this.scope=null;//作用域\r\n                    this.scopeName=null;//作用域中文名\r\n                }\r\n            },\r\n             /**\r\n             * 跳转至过滤规则列表页\r\n             */\r\n            routeToBefore(){\r\n                this.$router.push({\r\n                    name: `rule`,\r\n                })\r\n            },\r\n             /**\r\n             * 选择测点类型\r\n             */\r\n            selectPosType(item){\r\n                item.valueType = null;\r\n            },\r\n             /**\r\n             * 选择特征值\r\n             */\r\n            selectValType(){\r\n\r\n            },\r\n            /**\r\n             * 选择作用域\r\n             */\r\n            selectScopeType(node){\r\n                this.scopeName = node.label;\r\n            },\r\n            /**\r\n             * 删除数据源\r\n             */\r\n            deleteDataSource(item,index){\r\n                this.dataSource.splice(index,1);\r\n            },\r\n            /**\r\n             * 增加数据源\r\n             */\r\n            addDataSource(){\r\n                let obj = \r\n                    {\r\n                       posType:null,//选中的测点类型\r\n                       posTypeList:[],//测点类型列表\r\n                       valueType:null,//特征值类型\r\n                       valueList:[],//特征值类型列表\r\n                   }\r\n                this.dataSource.push(obj);\r\n            },\r\n            //点击键盘\r\n            addCalcItem(item){\r\n                this.calcWay += item;\r\n                this.formula.push(item);\r\n            },\r\n            //选择特征值作为公式的变量\r\n            addValItem(item){\r\n                this.calcWay += item;\r\n                this.formula.push(item);\r\n            },\r\n            //全清\r\n            clearAll(){\r\n                this.calcWay = \"\";\r\n                this.formula = [];\r\n            },\r\n            //退格\r\n            clearOne(){\r\n                if(this.formula != undefined && this.formula.length){\r\n                    let end = this.formula[this.formula.length-1].toString();\r\n                    let endIndex = - end.length;\r\n                    this.calcWay =  this.calcWay.slice(0, endIndex); \r\n                    this.formula.splice(this.formula.length-1,1);\r\n                }\r\n                else{\r\n                    this.calcWay =  this.calcWay.slice(0, -1); \r\n                }\r\n            },\r\n        }\r\n        \r\n    }\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    @import \"~assets/css/components/wisdom.scss\";\r\n</style>\r\n","// extracted by mini-css-extract-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"wisdom rule-content\" }, [\n    _c(\"div\", { staticClass: \"header-create\" }, [\n      _c(\"div\", { staticClass: \"title\" }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"linkTitle\",\n            on: {\n              click: function($event) {\n                return _vm.routeToBefore()\n              }\n            }\n          },\n          [_vm._v(\"智子规则列表\")]\n        ),\n        _vm._v(\" / 创建智子规则\")\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }, [_vm._v(\"规则名称：\")]),\n        _vm._v(\" \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.ruleName,\n              expression: \"ruleName\"\n            }\n          ],\n          staticClass: \"create-input\",\n          attrs: { placeholder: \"请输入规则名称\" },\n          domProps: { value: _vm.ruleName },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.ruleName = $event.target.value\n            }\n          }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"create-block\" },\n        [\n          _c(\"div\", { staticClass: \"text\" }, [_vm._v(\"作用域：\")]),\n          _vm._v(\" \"),\n          _c(\"treeselect\", {\n            staticClass: \"right\",\n            attrs: {\n              multiple: false,\n              options: _vm.scopeList,\n              clearable: false,\n              placeholder: \"请选择作用域类型\"\n            },\n            on: { select: _vm.selectScopeType },\n            model: {\n              value: _vm.scope,\n              callback: function($$v) {\n                _vm.scope = $$v\n              },\n              expression: \"scope\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }, [_vm._v(\"备注：\")]),\n        _vm._v(\" \"),\n        _c(\"textarea\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.remark,\n              expression: \"remark\"\n            }\n          ],\n          staticClass: \"create-textarea\",\n          attrs: { placeholder: \"请输入备注文字\" },\n          domProps: { value: _vm.remark },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.remark = $event.target.value\n            }\n          }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"datasource\" },\n        [\n          _vm._l(_vm.dataSources, function(item, index) {\n            return _c(\n              \"div\",\n              { key: index, staticClass: \"create-block block\" },\n              [\n                _c(\"div\", { staticClass: \"text\" }, [\n                  _vm._v(\"数据源A\" + _vm._s(Number(index + 1)) + \"：\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"right-pos\" },\n                  [\n                    _c(\"treeselect\", {\n                      staticClass: \"select-type\",\n                      attrs: {\n                        multiple: false,\n                        options: item.posTypeList,\n                        clearable: false,\n                        placeholder: \"请选择测点类型\"\n                      },\n                      on: {\n                        select: function($event) {\n                          return _vm.selectPosType(item)\n                        }\n                      },\n                      model: {\n                        value: item.posType,\n                        callback: function($$v) {\n                          _vm.$set(item, \"posType\", $$v)\n                        },\n                        expression: \"item.posType\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"treeselect\", {\n                      staticClass: \"select-value\",\n                      attrs: {\n                        multiple: true,\n                        options: item.valueList,\n                        clearable: true,\n                        placeholder: \"请选择特征值\",\n                        noOptionsText: _vm.noTips\n                      },\n                      on: { select: _vm.selectValType },\n                      model: {\n                        value: item.valueType,\n                        callback: function($$v) {\n                          _vm.$set(item, \"valueType\", $$v)\n                        },\n                        expression: \"item.valueType\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"deleteBtn\",\n                        on: {\n                          click: function($event) {\n                            return _vm.deleteDataSource(item, index)\n                          }\n                        }\n                      },\n                      [_vm._v(\"删除\")]\n                    )\n                  ],\n                  1\n                )\n              ]\n            )\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"create-block\" }, [\n            _c(\"div\", { staticClass: \"text\" }),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"right\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"create-btn pad-btn\",\n                  on: {\n                    click: function($event) {\n                      return _vm.addDataSource()\n                    }\n                  }\n                },\n                [_vm._v(\"+新增数据源\")]\n              )\n            ])\n          ])\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }, [_vm._v(\"智子规则：\")]),\n        _vm._v(\" \"),\n        _c(\"textarea\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.calcWay,\n              expression: \"calcWay\"\n            }\n          ],\n          staticClass: \"create-textarea\",\n          attrs: { placeholder: \"请输入公式\", readonly: \"true\" },\n          domProps: { value: _vm.calcWay },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.calcWay = $event.target.value\n            }\n          }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"right-btns\" },\n          [\n            _vm._l(_vm.calcList1, function(item) {\n              return _c(\n                \"button\",\n                {\n                  key: item,\n                  staticClass: \"calc-btn\",\n                  on: {\n                    click: function($event) {\n                      return _vm.addCalcItem(item)\n                    }\n                  }\n                },\n                [_vm._v(\" \" + _vm._s(item))]\n              )\n            }),\n            _vm._v(\" \"),\n            _vm._l(_vm.calcList2, function(item) {\n              return _c(\n                \"button\",\n                {\n                  key: item,\n                  staticClass: \"calc-btn btn3\",\n                  on: {\n                    click: function($event) {\n                      return _vm.addCalcItem(item)\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(item) + \" \")]\n              )\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"calc-btn btn3\",\n                on: {\n                  click: function($event) {\n                    return _vm.clearAll()\n                  }\n                }\n              },\n              [_vm._v(\"全清\")]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              { staticClass: \"calc-btn btn3\", on: { click: _vm.clearOne } },\n              [_vm._v(\"退格\")]\n            )\n          ],\n          2\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"right-vals\" },\n          _vm._l(_vm.chooseValList, function(item) {\n            return _c(\n              \"button\",\n              {\n                key: item.text,\n                staticClass: \"val-btn\",\n                on: {\n                  click: function($event) {\n                    return _vm.addValItem(item)\n                  }\n                }\n              },\n              [_vm._v(\" \" + _vm._s(item))]\n            )\n          }),\n          0\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"create-block\" }, [\n        _c(\"div\", { staticClass: \"text\" }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"right\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"create-btn\",\n              on: {\n                click: function($event) {\n                  return _vm.keepData()\n                }\n              }\n            },\n            [_vm._v(\"确定\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"grey-btn\",\n              on: {\n                click: function($event) {\n                  return _vm.reset()\n                }\n              }\n            },\n            [_vm._v(\"重置\")]\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./createRule.vue?vue&type=template&id=161765a3&\"\nimport script from \"./createRule.vue?vue&type=script&lang=js&\"\nexport * from \"./createRule.vue?vue&type=script&lang=js&\"\nimport style0 from \"./createRule.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\工作\\\\CCCCCCCCCC\\\\node_modules\\\\_vue-hot-reload-api@2.3.4@vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('161765a3')) {\n      api.createRecord('161765a3', component.options)\n    } else {\n      api.reload('161765a3', component.options)\n    }\n    module.hot.accept(\"./createRule.vue?vue&type=template&id=161765a3&\", function () {\n      api.rerender('161765a3', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/content/wisdom/rule/createRule.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./createRule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./createRule.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--3-0!../../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./createRule.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./createRule.vue?vue&type=template&id=161765a3&\""],"sourceRoot":""}