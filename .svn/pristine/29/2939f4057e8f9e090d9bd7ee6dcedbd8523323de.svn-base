{"version":3,"sources":["webpack:///./src/components/content/system/position/table/js/pos_columns.js","webpack:///./src/components/content/system/position/table/js/pos_hdtable.js","webpack:///./src/components/content/system/position/table/js/pos_mixin.js"],"names":["setHeaders","type","header","label","colspan","push","selectHeader","parseInt","length","setHeaderFrequency","headers","obj0","obj1","i","setColumns","data","columns","editor","readOnly","selectOptions","row","t_sources","macName_sources","dgm_sources","baseInfo","method_sources","pos_activity_sources","capture_sources","capture_chName_sources","ch_sources","isalarm_sources","selectColumns","setColumnFrequency","col","task_id_sources","frequency_sources","spectral_sources","resampling_sources","filter_sources","order","dip_model_sources","sourceType_sources","rock1_ch_sources","datamode1_sources","rock2_ch_sources","datamode2_sources","calc_method_sources","datamode_sources","checkedTemplate","uncheckedTemplate","poshdtable","el","vm","getData","T","tableData","initChannel","vibTable","contextMenu","colHeaders","cells","afterOnCellMouseUp","afterFilter","afterCreateRow","beforeChange","afterChange","beforeRemoveRow","afterRemoveRow","hdtable","TASK_POS","NORMAL_POS","getHot","$store","key","initList","changeList","indexOf","forEach","pos","pos_chaList","dgm_id","ch_name","that","items","name","callback","options","addRows","start","prop","cellProperties","operate","ch_type","dgm_type","sourceType","capture_mode","e","coords","td","row_info","getPositionByIndex","linkObj","mac_id","mac_name","commit","console","log","condition","hot","dgm_id_list","machineList","pos_machineList","dgmList","pos_dgmList","machine_id_list","item","test","colToProp","column","conditions","args","folder_name","machine","filter_dgmId_byMachineName","machine_name_list","mac","t_name","dgmArray","dgm_name","macId","dgmName","sessionStorage","setItem","JSON","stringify","machine_id","creatIndex","index","amount","source","position","createPosition","Object","keys","pos_folderList","t_id","update_t_name","sendPosition","changePosition","addData","deleteData","deleteDataArray","beforeRemove","getApi","deletePosition","then","res","msg","swal","title","text","button","remove_remake","err","dataArr","obj","rock1","rock2","position_type","pos_type","position_id","pos_id","position_type_id","rock1_id","rock2_id","delArray","isRefresh","clear_taskId","updateTaskSource","restore_channel","refresh_channel","changeData","del_res","oldInfo","ch_id","undefined","sort","changes","change_index","change_prop","change_oldVal","change_newVal","sources","reg","RegExp","regPositiveNum","reg2","update_mac","update_dgm","update_channel","update_taskId","filter_sources_key","filter_val","filter","find_key","update_frequency_spectral_sources","frequency_sources_key","frequency_val","frequency","computed__frequency_spectral","spectral","pos_activity_sources_key","pos_activity_val","pos_activity","isalarm_sources_key","isalarm_val","isalarm","resampling_sources_key","resampling","optfreq_type_sources","optfreq_type_sources_key","optfreq_type_val","optfreq_type","datamode1_val_sources","datamode1_sources_key","datamode1_val","datamode1","datamode2_val_sources","datamode2_sources_key","datamode2_val","datamode2","rock1_ch_name_sources","update_rock_ch","rock2_ch_name_sources","sourceType_val_sources","sourceType_sources_key","update_sourceType","dip_model_val_sources","dip_model_sources_key","dip_model_val","dip_model","calc_method_val_sources","calc_method_sources_key","calc_method_val","calc_method","datamode_val_sources","datamode_sources_key","datamode_val","datamode","method_val","method_sources_key","update_capCh_byNumber","change","physicalRow","toPhysicalRow","info","update_mac_source","macName_source","mac_me","m_type","setPosId","tt_ch_id","set_rock_posId","update_dgm_source","dgmName_sources","arr","update_ch_source","chList","over_pos_loc_ch","syn_pos_loc_ch","flag","set_channel","task_idSources","taskArray","update_virtual_chaName","del_pos","task_val","task_id","task_id_choose","task_id_choose_key","set_taskId","isChange","task_id_val","splice","self_task_id_sources","frequency_object","frequencySources","values","spectralSources","update_cap_number","update_cap_channel","capture_byId","capture_chName","cap_sequenceNum","sequenceNums","vib_id","cap_chaList","tt_pos_loc_source","tt_pos_loc_source_key","tt_pos_loc","updateRock","sourceType_val","moduleList","rock_chaList","rock1_ch_name","rock2_ch_name","rock1_ch_id","rock2_ch_id","rock1_ch_type","rock2_ch_type","list1","list2","$","isEmptyObject","mac_pos_id_list","rock_pos_id_list","parse","posMixin","rock_list","scroll","destroyed","activated","wtHolder","document","getElementsByClassName","state","scrollTop","scrollLeft","mounted","getListData","methods","$getApi","queryPositionInfo","tids","result","getPositionInfo","$emit","invalidPos","filter_by_dgmName","renderTable","HotTable","getElementById","reRenderSelectOption","listenScroll","addEventListener","paload","scrollType","destroyEditor","getItem","dgm_ids"],"mappings":"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","file":"js/8-277c48ad60e55e458a30.js","sourcesContent":["\r\n\r\n/* 表头部分\r\n */\r\n\r\n//设置 列头(公共)\r\nexport function setHeaders(type) {\r\n  let header\r\n  if (type == 200) { //长采样（特殊）\r\n    header = [\r\n      [\r\n        { label: '基本设置', colspan: 8 }\r\n      ], [\r\n        '组织名称',\r\n        '机组名称',\r\n        '检测采集器',\r\n        '测点名称',\r\n        '采集方式',\r\n        '是否有效',\r\n        '序号',\r\n        '关联通道',\r\n      ]\r\n    ];\r\n    return header\r\n  }\r\n  // 除长采样之外其他测点的共同头部\r\n  header = [\r\n    [\r\n      { label: '基本设置', colspan: 6 }\r\n    ], [\r\n      '组织名称',\r\n      '机组名称',\r\n      '监测采集器',\r\n      '测点名称',\r\n      '关联通道',\r\n      '是否有效',\r\n      '是否报警',\r\n    ]\r\n  ];\r\n  header[1].push(...selectHeader(parseInt(type)))\r\n  header[0][0].colspan = header[1].length;\r\n  //是否加入频段\r\n  setHeaderFrequency(header, type)\r\n  return header\r\n\r\n}\r\n//除公共部分之外的列表头\r\nfunction selectHeader(type) {\r\n  let header = []\r\n  switch (type) {\r\n    case 3://振动\r\n      header = [\r\n        '任务标识',\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样',\r\n        '报警投票机制a',\r\n        '报警投票机制b',\r\n        '过滤阈值',\r\n        '增长百分比',\r\n        '平均值计算时间(h)',\r\n        '死区时间(h)',\r\n        '连续n包'\r\n      ]\r\n      break;\r\n\r\n    case 6: case 12: //振动，晃度，倾角\r\n      header = [\r\n        '任务标识',\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样']\r\n      break;\r\n    case 4://包络\r\n      header = [\r\n        '任务标识',\r\n        '滤波器',\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样'\r\n      ]\r\n      break;\r\n    case 15://冲击测点\r\n      header = [\r\n        '任务标识',\r\n        '滤波器',\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样'\r\n      ]\r\n      break;\r\n    case 8://振动阶次\r\n      header = [\r\n        '任务标识',\r\n        '采样周期',\r\n        '采样点数',\r\n        '过采样']\r\n      break;\r\n    case 9: case 16://包络阶次、冲击阶次\r\n      header = [\r\n        '任务标识',\r\n        '滤波器',\r\n        '采样周期',\r\n        '采样点数',\r\n        '过采样',\r\n      ]\r\n      break;\r\n    case 1://转速\r\n      header = [\r\n        '转速比',\r\n        '最小转速',\r\n        '最大转速'\r\n      ]\r\n      break;\r\n    case 11://倾覆\r\n      header = [\r\n        '任务标识',\r\n        '位移单位',\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样',\r\n        '传感器名称',\r\n        '晃度X名称',\r\n        '关联通道X',\r\n        '自振频率1',\r\n        '晃度Y名称',\r\n        '关联通道Y',\r\n        '自振频率2']\r\n      break;\r\n    case 13://合成倾角\r\n      header = [\r\n        '分析频率',\r\n        '谱线数',\r\n        '采样周期',\r\n        '谱线分辨率',\r\n        '过采样',\r\n        '传感器名称',\r\n        '传感类型',\r\n        '数据来源',\r\n        '偏置角度',\r\n        '基础直径',\r\n        '倾角X名称',\r\n        '关联通道X',\r\n        '偏移量X',\r\n        '从设备号X',\r\n        '过程量类型X',\r\n        '倾角Y名称',\r\n        '关联通道Y',\r\n        '偏移量Y',\r\n        '从设备号Y',\r\n        '过程量类型Y']\r\n      break;\r\n    case 7: case 2: //温度和过程量\r\n      header = [\r\n        'Ⅰ级报警(高)',\r\n        '预警(高)',\r\n        '预警(低)',\r\n        'Ⅰ级报警(低)',\r\n      ]\r\n      break;\r\n    case 5: //数字量\r\n      header = [\r\n        '计算方式',\r\n        '报警(高)',\r\n        '预警(高)']\r\n      break;\r\n    case 10://工艺量\r\n      header = [\r\n        '单位',\r\n        '单位精度',\r\n        '报警(高)',\r\n        '预警(高)',\r\n        '预警(低)',\r\n        '报警(低)',\r\n        '工程量输入范围高',\r\n        '工程量输入范围低',\r\n        '信号输入范围高',\r\n        '信号输入范围低',\r\n        '校正参数',\r\n        '零点偏移',\r\n        '数据地址',\r\n        '过程量类型',\r\n        '从设备号']\r\n      break;\r\n  }\r\n  return header\r\n}\r\n\r\n//频段列表头\r\nfunction setHeaderFrequency(headers, type) {\r\n  //设置频段列表头\r\n  if (type == 3|| type == 15 || type == 4 || type == 8 || type == 16 || type == 9 || type == 6 || type == 11 || type == 12 || type == 13) {\r\n    let obj0 = [], obj1 = [];\r\n    for (let i = 1; i <= 8; i++) {\r\n      obj0.push({ label: `频段${i}`, colspan: 5 })\r\n      obj1.push(...[`频段${i}选择`, `频段${i}名称`, `频段${i}类型`, `频段${i}起始值(Hz)`, `频段${i}结束值(Hz)`])\r\n    }\r\n    // obj1.push('')\r\n    headers[0].push(...obj0)\r\n    headers[1].push(...obj1)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 表数据部分\r\n */\r\n\r\n//设置columns（公共）（组织名称、机组名称、测点名称、采集器名称、测点类型、通道名称、是否有效、是否报警）\r\nexport function setColumns(type, data) {\r\n  let columns\r\n  if (type == 200) { //长采样（特殊）\r\n    columns = [\r\n      {\r\n        data: `t_name`, //组织名称\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].t_sources\r\n      },\r\n      {\r\n        data: `mac_me`, //机组名称\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].macName_sources,\r\n\r\n      },\r\n      {\r\n        data: `dgm_name`, //采集器名称\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].dgm_sources,\r\n      },\r\n      { data: `pos_name` }, //测点名称\r\n\r\n      {\r\n        data: `baseInfo.method_val`, //采集方式\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].baseInfo.method_sources\r\n      },\r\n      {\r\n        data: `pos_activity_val`, //是否有效\r\n        editor: 'select',\r\n        selectOptions: row => data[row].pos_activity_sources\r\n      },\r\n      {\r\n        data: `baseInfo.capture_byId`, //序号\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].baseInfo.capture_sources\r\n      },\r\n      {\r\n        data: `baseInfo.capture_chName`, //关联通道\r\n        editor: 'select',\r\n        readOnly: true,\r\n        selectOptions: row => data[row].baseInfo.capture_chName_sources\r\n      },\r\n\r\n    ]\r\n    return columns\r\n  }\r\n  // 除长采样之外的数据表部分\r\n  columns = [\r\n    {\r\n      data: `t_name`, //组织名称\r\n      editor: 'select',\r\n      readOnly: true,\r\n      selectOptions: row => data[row].t_sources\r\n    },\r\n    {\r\n      data: `mac_me`, //机组名称\r\n      editor: 'select',\r\n      readOnly: true,\r\n      selectOptions: row => data[row].macName_sources,\r\n\r\n    },\r\n\r\n    {\r\n      data: `dgm_name`, //采集器名称\r\n      editor: 'select',\r\n      readOnly: true,\r\n      selectOptions: row => data[row].dgm_sources,\r\n    },\r\n    { data: `pos_name` }, //测点名称\r\n    // {\r\n    //     data: `pos_type_name`, //测点类型\r\n    // },\r\n    {\r\n      data: `ch_name`, //通道名称\r\n      editor: 'select',\r\n      selectOptions: row => data[row].ch_sources\r\n    },\r\n    {\r\n      data: `pos_activity_val`, //是否有效\r\n      editor: 'select',\r\n      selectOptions: row => data[row].pos_activity_sources\r\n    },\r\n    {\r\n      data: `isalarm_val`, //是否报警\r\n      editor: 'select',\r\n      selectOptions: row => data[row].isalarm_sources\r\n    },\r\n  ]\r\n  columns.push(...selectColumns(parseInt(type), data))\r\n  //是否加入频段\r\n  setColumnFrequency(columns, type)\r\n  return columns\r\n}\r\n//列表渲染的选择\r\nfunction selectColumns(type, data) {\r\n  let col\r\n  switch (type) {\r\n    case 3://振动,\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        },\r\n        {\r\n          data: `baseInfo.alarm_smooth_a`,//报警投票机制a\r\n        },\r\n        {\r\n          data: `baseInfo.alarm_smooth_b`,//报警投票机制b\r\n        },\r\n        {\r\n          data: `baseInfo.levelRms`,//过滤阈值\r\n        },\r\n        {\r\n          data: `baseInfo.areaRatio`,//增长百分比\r\n        },\r\n        {\r\n          data: `baseInfo.sampHours`,//平均值计算时间\r\n        },\r\n        {\r\n          data: `baseInfo.death_time`,//死区时间\r\n        },\r\n        {\r\n          data: `baseInfo.packn`,//连续n包\r\n        },\r\n      ]\r\n      break;\r\n\r\n    case 6: case 12: // 晃度，倾角\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          readOnly: true,\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          readOnly: true,\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        }\r\n      ]\r\n      break;\r\n    case 4://包络\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n          data: `baseInfo.filter_val`,//滤波器\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.filter_sources\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        }\r\n      ]\r\n      break;\r\n    case 15://冲击\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n          data: `baseInfo.filter_val`,//滤波器\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.filter_sources\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        }\r\n      ]\r\n      break;\r\n    case 8://振动阶次、冲击阶次\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        }]\r\n      break;\r\n    case 9: case 16://包络阶次\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n\r\n          data: `baseInfo.filter_val`,//滤波器\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.filter_sources\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        }]\r\n      break;\r\n    case 1://转速\r\n      col = [\r\n        { data: `baseInfo.speedRate` }, //转速比\r\n        { data: `baseInfo.min_speed` },\r\n        { data: 'baseInfo.max_speed' }\r\n      ]\r\n      break;\r\n    case 11://倾覆\r\n      col = [\r\n        {\r\n          data: `task_id_val`, //任务标识\r\n          editor: 'select',\r\n          selectOptions: row => data[row].task_id_sources\r\n        },\r\n        {\r\n          data: `baseInfo.sUnitName`,//位移单位\r\n        },\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          order: true,\r\n          selectOptions: row => data[row].baseInfo.frequency_sources,\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        },\r\n        { data: `baseInfo.tt_sensor_name` }, //传感器名称\r\n        {\r\n          data: `baseInfo.rock1_pos_name`,// 晃度X名称\r\n        },\r\n        {\r\n          data: `baseInfo.rock1_ch_name`, //晃度X关联通道名称\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.self1` //晃度自振频率1\r\n        },\r\n        {\r\n          data: `baseInfo.rock2_pos_name`,\r\n        },\r\n        {\r\n          data: `baseInfo.rock2_ch_name`,\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.self2`\r\n        },\r\n      ]\r\n      break;\r\n    case 13://合成倾角\r\n      col = [\r\n        {\r\n          data: `baseInfo.frequency_val`, //分析频率\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.frequency_sources\r\n        },\r\n        {\r\n          data: `baseInfo.spectral`,//谱线数\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.spectral_sources\r\n        },\r\n        {\r\n          data: `baseInfo.order`,//采样周期\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.specOrder`,//谱线分辨率\r\n          readOnly: true,\r\n        },\r\n        {\r\n          data: `baseInfo.resampling_val`,//过采样\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.resampling_sources\r\n        },\r\n        { data: `baseInfo.tt_sensor_name` }, //传感器名称\r\n        {\r\n          data: `baseInfo.dip_model_val`,//传感器类型\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.dip_model_sources\r\n        },\r\n\r\n        {\r\n          data: `baseInfo.sourceType_val`, //数据来源\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.sourceType_sources\r\n        },\r\n        {\r\n          data: `baseInfo.offset_angle` //偏置角度\r\n        },\r\n        {\r\n          data: `baseInfo.diameter`, //基础直径\r\n        },\r\n        {\r\n          data: `baseInfo.rock1_pos_name`,// 倾角X名称\r\n        },\r\n        {\r\n          data: `baseInfo.rock1_ch_name`, //倾角X关联通道名称\r\n          editor: 'select',\r\n          readOnly: true,\r\n          selectOptions: row => data[row].baseInfo.rock1_ch_sources\r\n        },\r\n        {\r\n          data: `baseInfo.offset1`,\r\n        },\r\n        {\r\n          data: `baseInfo.slaveid1`\r\n        },\r\n        {\r\n          data: `baseInfo.datamode1_val`,\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.datamode1_sources\r\n        },\r\n        {\r\n          data: `baseInfo.rock2_pos_name`,\r\n        },\r\n        {\r\n          data: `baseInfo.rock2_ch_name`,\r\n          editor: 'select',\r\n          readOnly: true,\r\n          selectOptions: row => data[row].baseInfo.rock2_ch_sources\r\n        },\r\n        {\r\n          data: `baseInfo.offset2`,\r\n        },\r\n        {\r\n          data: `baseInfo.slaveid2`\r\n        },\r\n        {\r\n          data: `baseInfo.datamode2_val`,\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.datamode2_sources\r\n        }]\r\n      break;\r\n    case 7: case 2: //温度和过程量\r\n      col = [\r\n        { data: `baseInfo.hh_limit` },\r\n        { data: `baseInfo.h_limit` },\r\n        { data: `baseInfo.l_limit` },\r\n        { data: `baseInfo.ll_limit` }\r\n      ]\r\n      break;\r\n    case 5: //数字量\r\n      col = [\r\n        {\r\n          data: `baseInfo.calc_method_val`, //计算方式\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.calc_method_sources\r\n        },\r\n        { data: `baseInfo.hh_limit` },\r\n        { data: `baseInfo.h_limit` }\r\n      ]\r\n      break;\r\n    case 10://工艺量\r\n      col = [\r\n        { data: `baseInfo.byUnitName` },\r\n        { data: `baseInfo.unitNum` },\r\n        { data: `baseInfo.hh_limit` },\r\n        { data: `baseInfo.h_limit` },\r\n        { data: `baseInfo.l_limit` },\r\n        { data: `baseInfo.ll_limit` },\r\n        { data: `baseInfo.hi_value` },\r\n        { data: `baseInfo.low_value` },\r\n        { data: `baseInfo.ref_vol` },\r\n        { data: `baseInfo.ref_eng` },\r\n        { data: `baseInfo.corr` },\r\n        { data: `baseInfo.scale` },\r\n        { data: `baseInfo.dataaddress` },\r\n        {\r\n          data: `baseInfo.datamode_val`,\r\n          editor: 'select',\r\n          selectOptions: row => data[row].baseInfo.datamode_sources\r\n        },\r\n        { data: `baseInfo.slaveid` }\r\n      ]\r\n      break;\r\n    case 14:\r\n      col=[];\r\n      break;\r\n  }\r\n  return col\r\n}\r\n//设置频段\r\nfunction setColumnFrequency(col, type) {\r\n  if (type == 3 || type == 15 || type == 4 || type == 8 || type == 16 || type == 9 || type == 6 || type == 11 || type == 12 || type == 13) {\r\n    for (let i = 0; i <= 7; i++) {\r\n      col.push(...[{\r\n        data: `baseInfo.band${i}.dwOpt_freq_selected`,\r\n        type: 'checkbox',\r\n        checkedTemplate: '1',\r\n        uncheckedTemplate: '0',\r\n      },\r\n      { data: `baseInfo.band${i}.dwOpt_freq_name` },\r\n      {\r\n        data: `baseInfo.band${i}.optfreq_type_val`,\r\n        editor: 'select',\r\n        selectOptions: ['能量有效值', '速度值', '加速度值']\r\n      },\r\n      { data: `baseInfo.band${i}.dwOpt_freq_begin` },\r\n      { data: `baseInfo.band${i}.dwOpt_freq_end` }]\r\n      )\r\n    }\r\n  }\r\n}\r\n","import getApi from 'network/getApi'\r\nimport hdtable from 'common/hdtable.js'\r\nimport { createPosition, changePosition, over_pos_loc_ch, syn_pos_loc_ch } from './pos_info.js'\r\nimport { addRows, frequencySources, spectralSources, computed__frequency_spectral, taskId, taskArray } from './pos_methods.js'\r\nimport { setHeaders, setColumns } from './pos_columns.js'\r\nimport { find_key } from 'utils/utils'\r\n\r\n\r\nexport default function poshdtable(el, vm) {\r\n  let data = vm.getData()\r\n  //创建表格属性的实例\r\n  let T = new tableData(vm)\r\n  /* 初始化所有通道可选项 */\r\n  T.initChannel(data)\r\n  // 组装振动表格数据\r\n  let vibTable = {\r\n    // 表格右键菜单\r\n    contextMenu: T.contextMenu(),\r\n    // 表格显示的数据\r\n    data: data,\r\n    //表格的列\r\n    colHeaders: T.colHeaders(),\r\n    //表格的列头自定义\r\n    // nestedHeaders: T.nestedHeaders(),\r\n    //数据渲染renderData\r\n    columns: T.columns(),\r\n    //单元格属性设置\r\n    cells: T.cells(),\r\n    //单击单元格或行/列标题后触发。如果单击行/列标题，则坐标索引为负。\r\n    afterOnCellMouseUp: T.afterOnCellMouseUp(),\r\n    //过滤之后\r\n    afterFilter: T.afterFilter(),\r\n    //新建行\r\n    afterCreateRow: T.afterCreateRow(),\r\n    beforeChange: T.beforeChange(),\r\n    afterChange: T.afterChange(),\r\n    //移除行事件\r\n    beforeRemoveRow: T.beforeRemoveRow(),\r\n    afterRemoveRow: T.afterRemoveRow(),\r\n  }\r\n  return hdtable(el, vibTable)\r\n}\r\n\r\n\r\nconst TASK_POS = [3, 4, 8, 9, 11,15,16] //振动 包络 振动阶次 包络阶次 倾覆 冲击、冲击阶次\r\nconst NORMAL_POS = [1, 2, 7, 5] //转速、过程量、数组量、温度\r\n//表格的方法\r\nclass tableData {\r\n  constructor(vm) {\r\n    this.type = vm.type\r\n    this.getData = vm.getData\r\n    this.getHot = vm.getHot\r\n    this.$store = vm.$store\r\n    for (let key in vm.initList) {\r\n      this[key] = vm.initList[key]\r\n    }\r\n    for (let key in vm.changeList) {\r\n      this[key] = vm.changeList[key]\r\n    }\r\n  }\r\n\r\n  /* 初始化通道选项的方法 */\r\n  initChannel(data) {\r\n    /* 任务类型的测点初始化 */\r\n    /* 过程量 温度 数字量 转速通道的初始化 */\r\n    if (NORMAL_POS.indexOf(this.type) > -1) {\r\n      data.forEach(pos => {\r\n        delete this.pos_chaList[pos.dgm_id][pos.ch_name]\r\n      })\r\n    }\r\n  }\r\n  /**handsontable 初始化方法\r\n   * ******************************************\r\n   */\r\n  contextMenu() {\r\n    let that = this\r\n    if (this.type == 6 || this.type == 12) {\r\n      return\r\n    } else {\r\n      return {\r\n        items: {\r\n          \"row_above\": {\r\n            name: '上方新建',\r\n            callback(key, options) {\r\n              addRows(that.getHot(), that.getData(), options[0].start.row)\r\n            },\r\n          },\r\n          \"remove_row\": {\r\n            name: '删除这行',\r\n          },\r\n          'freeze_column':{\r\n            name: '固定列',\r\n          },\r\n          \"unfreeze_column\": {\r\n            name: '取消列固定',\r\n          },\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* 表格的数据渲染 */\r\n  colHeaders() {\r\n    return setHeaders(this.type)[1]\r\n  }\r\n  nestedHeaders() {\r\n    return setHeaders(this.type)\r\n  }\r\n  columns() {\r\n    return setColumns(this.type, this.getData())\r\n  }\r\n  /* 单元格渲染 */\r\n  cells() {\r\n    let that = this\r\n    return function (row, col, prop) {\r\n      let data = that.getData()\r\n      if (data.length == 0) return\r\n      let type = that.type\r\n      let cellProperties = this;\r\n      //0组织名称 1机组名称 2检测采集器\r\n      if (row != -1 && (col == 0 || col == 1 || col == 2)) {\r\n        if (data[row].operate == 1) {  //operate 1：新建测点  0：已建测点\r\n          cellProperties.readOnly = false;\r\n        } else if (data[row].operate == 0) {\r\n          cellProperties.readOnly = true;\r\n        }\r\n      }\r\n      /* 转速通道 */\r\n      if (type == 1) {\r\n        if (row != -1 && (col >= 8)) {//最大最小转速\r\n          if (data[row].ch_type == 13) {\r\n            cellProperties.readOnly = false;\r\n          } else {\r\n            cellProperties.readOnly = true;\r\n          }\r\n        }\r\n      }\r\n      /* 振动测点 */\r\n      if (type == 3) {\r\n        if (row != -1 && (col >= 13)) {//MHD 屏蔽频段\r\n          if (data[row].dgm_type == 4) {\r\n            cellProperties.readOnly = true;\r\n          }else{\r\n            cellProperties.readOnly = false;\r\n          }\r\n        }\r\n      }\r\n      /* 数字量 */\r\n      if (type == 5) {\r\n        /* V1数字量，计算方式报警禁止修改且置空 */\r\n        if (row != -1 && col == 7 || col == 8 || col == 9) {\r\n          if (data[row].dgm_type == 1 || data[row].dgm_type == 2) {\r\n            cellProperties.readOnly = true;\r\n          } else {\r\n            cellProperties.readOnly = false;\r\n          }\r\n        }\r\n      }\r\n      /* 晃度 和倾角测点测点 */\r\n      if (type == 6 || type == 12) {\r\n        if (row != -1 && (col == 3 || col == 4 || col == 5)) { //晃度和倾角的通道禁止编辑 是否有效 测点名称\r\n          cellProperties.readOnly = true;\r\n        }\r\n        //MHD频段禁止编辑\r\n        if (row != -1 && (col  >= 13)) {\r\n          if(data[row].dgm_type == 4){\r\n            cellProperties.readOnly = true;\r\n          }else{\r\n            cellProperties.readOnly = false\r\n          }\r\n        }\r\n      }\r\n      /* 倾覆 */\r\n      if (type == 11) {\r\n        //MHD频段禁止编辑\r\n        if (row != -1 && (col >= 21)) {\r\n          if(data[row].dgm_type == 4){\r\n            cellProperties.readOnly = true;\r\n          }else{\r\n            cellProperties.readOnly = false;\r\n          }\r\n        }\r\n      }\r\n      /* 合成倾角 */\r\n      if (type == 13) {\r\n        //18X关联通道 、23Y关联通道,13传感器类型、20X从设备号 、21过程量类型 25Y从设备号、26Y过程量类型\r\n        if(row != -1){\r\n          if (col == 18 || col == 23||col == 13 || col == 20 || col == 21 || col == 25 || col == 26) {\r\n            if(data[row].baseInfo.sourceType == 0){//振动通道\r\n              cellProperties.readOnly = true\r\n            }else{\r\n              cellProperties.readOnly = false;\r\n            }\r\n          }\r\n        }\r\n         //MHD频段禁止编辑\r\n        if (row != -1 && (col >= 27)) {\r\n          if(data[row].dgm_type == 4  ){\r\n            cellProperties.readOnly = true;\r\n          }else{\r\n            cellProperties.readOnly = false;\r\n          }\r\n        }\r\n      }\r\n      /* 长采样 */\r\n      if (type == 200) {\r\n        /* 新建测点采集方式可以更改 */\r\n        if (row != -1 && (col == 4)) { //\r\n          if (data[row].operate == 1) {\r\n            cellProperties.readOnly = false;\r\n          } else if (data[row].operate == 0) {\r\n            cellProperties.readOnly = true;\r\n          }\r\n        }\r\n        /* 定时采集 */\r\n        if (data[row].baseInfo.capture_mode == 0) {\r\n          if (col == 6) {/* 序号可以编辑 */\r\n            cellProperties.readOnly = false\r\n          }\r\n          if (col == 7) {/* 通道禁止编辑 */\r\n            cellProperties.readOnly = true\r\n          }\r\n        }\r\n        /* 手动采集 */\r\n        if (data[row].baseInfo.capture_mode == 1) {\r\n          if (col == 6) {/* 序号禁止编辑 */\r\n            cellProperties.readOnly = true\r\n          }\r\n          if (col == 7) {/* 通道可以编辑 */\r\n            cellProperties.readOnly = false\r\n          }\r\n        }\r\n      }\r\n      return cellProperties;\r\n    }\r\n  }\r\n\r\n  /* 点击单元格之后输出该行信息（共用） */\r\n  afterOnCellMouseUp() {\r\n    let that = this\r\n    return function (e, coords, td) {\r\n      if (coords.row >= 0) {\r\n        let row_info = that.getPositionByIndex(coords.row)\r\n        let linkObj = [row_info.mac_id, row_info.mac_name]\r\n        that.$store.commit('setTreePosition', linkObj);\r\n        console.log(row_info, coords.col);\r\n      }\r\n    }\r\n  }\r\n  /*过滤的方法(有待优化)（共用）*/\r\n  afterFilter() {\r\n    let that = this\r\n    return function (condition) {\r\n      let hot = that.getHot()\r\n      let dgm_id_list = []\r\n      let machineList = that.pos_machineList\r\n      let dgmList = that.pos_dgmList\r\n      let machine_id_list = []\r\n      /**\r\n       * 根据 组织、机组、采集器来过滤，最终转化为最小单位为采集器\r\n       */\r\n      condition.forEach(item => {\r\n        if (/t_name/.test(hot.colToProp(item.column))) { /* 如果过滤的是组织 */\r\n          item.conditions[0].args[0].forEach(folder_name => { //获取组织名称\r\n            let machine = machineList[folder_name]\r\n            for(let key in machine){\r\n              machine_id_list.push(machine[key].mac_id)\r\n            }\r\n          })\r\n          dgm_id_list = that.filter_dgmId_byMachineName(machine_id_list)\r\n        }\r\n        if (/mac_me/.test(hot.colToProp(item.column))) {\r\n          let machine_name_list = item.conditions[0].args[0] //获取机组名称\r\n          machine_name_list.forEach(mac=>{\r\n            for(let t_name in machineList){\r\n              for(let mac_name in machineList[t_name]){\r\n                if(mac == mac_name){\r\n                  machine_id_list.push(machineList[t_name][mac_name].mac_id)\r\n                }\r\n              }\r\n            }\r\n          })\r\n          dgm_id_list = that.filter_dgmId_byMachineName(machine_id_list)\r\n        }\r\n        if (/dgm_name/.test(hot.colToProp(item.column))) {\r\n          let dgmArray = item.conditions[0].args[0] //获取采集器名称\r\n          dgmArray.forEach(dgm_name=>{\r\n            for(let macId in dgmList){\r\n              for(let dgmName in dgmList[macId]){\r\n                if(dgm_name == dgmName){\r\n                  dgm_id_list.push(dgmList[macId][dgmName].dgm_id)\r\n                }\r\n              }\r\n            }\r\n          })\r\n        }\r\n      })\r\n      sessionStorage.setItem('dgm_id', JSON.stringify(dgm_id_list))\r\n    }\r\n  }\r\n  filter_dgmId_byMachineName(machine_id_list) {\r\n    let dgm_id_list = []\r\n    let pos_dgmList = this.pos_dgmList\r\n    machine_id_list.forEach(machine_id => {\r\n      for(let key in pos_dgmList[machine_id]){\r\n        dgm_id_list.push(pos_dgmList[machine_id][key].dgm_id)\r\n      }\r\n    })\r\n    return dgm_id_list\r\n  }\r\n  //创建测点之后的方法(共用)\r\n  afterCreateRow() {\r\n    let that = this\r\n    let type = this.type\r\n    let creatIndex = 0\r\n    return function (index, amount, source) {//添加行事件\r\n      if (type == 6 || type == 12) { //晃度和倾角禁止单独添加\r\n        return\r\n      }\r\n      let data = that.getData()\r\n      let position = createPosition(type)\r\n      // 默认第一个组织\r\n      let t_sources = Object.keys(that.pos_folderList)\r\n      let t_name = t_sources[0]\r\n      let t_id = that.pos_folderList[t_name]\r\n      position.t_id = t_id\r\n      position.t_name = t_name\r\n      position.t_sources = t_sources\r\n      position.index = creatIndex\r\n      that.update_t_name(position, t_name)\r\n      data[index] = position\r\n\r\n      /* 将测点添加到addData */\r\n      let sendPosition = changePosition(type, position)\r\n      let addData = that.addData\r\n      addData[creatIndex++] = sendPosition;\r\n    }\r\n  }\r\n  //删除测点之前的方法,将要删除的测点存到deleteVData（共用）\r\n  beforeRemoveRow() {\r\n    let that = this\r\n    return function (index, amount) {\r\n      if (index != null) {\r\n        for (let i = 0; i < amount; i++) {\r\n          let position = that.getPositionByIndex(index + i)\r\n          that.deleteData.push(position);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //删除测点方法 发送请求（共用）\r\n  afterRemoveRow() {\r\n    let that = this\r\n    return function () {\r\n      let deleteDataArray = that.beforeRemove()\r\n      if (deleteDataArray) {\r\n        getApi.deletePosition(deleteDataArray)\r\n          .then(res => {\r\n            if (res.msg == 0) {\r\n              swal({\r\n                title: \"提示\",\r\n                text: `删除测点成功`,\r\n                button: \"确认\"\r\n              })\r\n                .then(() => {\r\n                  that.remove_remake(deleteDataArray)\r\n                });\r\n            } else if (res.msg == 1) {\r\n              console.log('参数为空！')\r\n            } else if (res.msg == 2) {\r\n              console.log('后台运行错误！')\r\n            }\r\n          })\r\n            .catch(err=>{\r\n              console.log('请求错误' ,err)\r\n            })\r\n      }\r\n    }\r\n  }\r\n  /* 自定义-在删除之前组织结构 */\r\n  beforeRemove() {\r\n    if (this.deleteData.length == 0) {\r\n      return false\r\n    }\r\n    let deleteDataArray = []\r\n    let dataArr = this.deleteData\r\n\r\n    for (let i = 0; i < dataArr.length; i++) {\r\n      let obj = {}, rock1 = {}, rock2 = {}\r\n      obj.mac_id = dataArr[i].mac_id;\r\n      obj.position_type = dataArr[i].pos_type;\r\n      obj.position_id = dataArr[i].pos_id;\r\n      obj.position_type_id = dataArr[i].pos_type + \"_\" + dataArr[i].pos_id;\r\n      deleteDataArray.push(obj)\r\n      if (this.type == 11 || this.type == 13) {\r\n        rock1.mac_id = dataArr[i].mac_id;\r\n        rock1.position_id = dataArr[i].baseInfo.rock1_id;\r\n        rock1.position_type = dataArr[i].pos_type == 11 ? 6 : 12;\r\n        rock1.position_type_id = rock1.position_type + \"_\" + rock1.position_id;\r\n        deleteDataArray.push(rock1);\r\n        rock2.mac_id = dataArr[i].mac_id;\r\n        rock2.position_id = dataArr[i].baseInfo.rock2_id;\r\n        rock2.position_type = dataArr[i].pos_type == 11 ? 6 : 12;\r\n        rock2.position_type_id = rock2.position_type + \"_\" + rock2.position_id;\r\n        deleteDataArray.push(rock2);\r\n      }\r\n    }\r\n    /* 如果是倾覆或者是合成倾角测点 ，需要删除下面的子测点*/\r\n    return deleteDataArray\r\n  }\r\n  /**\r\n   * 删除测点之后要做的一些还原素组的方法\r\n   */\r\n  remove_remake() {\r\n    let delArray = this.deleteData;\r\n    let position, isRefresh = false\r\n    /* 在删除之后还原数组中的task_id (pos_id不重复就行) */\r\n    if (TASK_POS.indexOf(this.type) > -1) {\r\n      for (let i = 0; i < delArray.length; i++) {\r\n        position = delArray[i]\r\n        /* 还原任务 */\r\n        this.clear_taskId(position) && (isRefresh = true)\r\n      }\r\n      isRefresh && this.updateTaskSource();\r\n    } else if (NORMAL_POS.indexOf(this.type) > -1) {\r\n      for (let i = 0; i < delArray.length; i++) {\r\n        position = delArray[i]\r\n        /* 还原通道 */\r\n        this.restore_channel(position, true)\r\n      }\r\n      this.refresh_channel()\r\n\r\n    }\r\n    /* 删除changeData 和addData里面的数据 */\r\n    for (let i = 0; i < delArray.length; i++) {\r\n      position = delArray[i]\r\n      if (position.operate == 0) { //旧测点\r\n        delete this.changeData[position.mac_id + \"_\" + this.type + \"_\" + position.pos_id]\r\n      } else if (position.operate == 1) { //新建测点\r\n        delete this.addData[position.index]\r\n      }\r\n    }\r\n    /* 重置删除数据的数组 */\r\n    this.deleteData = []\r\n  }\r\n  /* 还原被删除的通道 */\r\n  restore_channel(position, del_res) {  //del_res：true =>删除时候的通道还原\r\n    let dgm_id = position.oldInfo['dgm_id'] ? del_res ? position.dgm_id : position.oldInfo['dgm_id'] : position.dgm_id\r\n    position.ch_name && (this.pos_chaList[dgm_id][position.ch_name] = { \"ch_id\": position.ch_id, \"ch_type\": position.ch_type })\r\n  }\r\n  /* 刷新所有的通道 */\r\n  refresh_channel() {\r\n    let data = this.getData()\r\n    //遍历data，将所有的task_id_sources都更新\r\n    data.forEach(position => { //遍历所有数据\r\n      if (position.mac_id) {\r\n        position.oldInfo = {}\r\n        let ch_sources = Object.keys(this.pos_chaList[position.dgm_id])\r\n        if (this.pos_chaList[position.dgm_id][position.ch_name] == undefined && position.ch_name) { //集合中没自己的通道\r\n          ch_sources.push(position.ch_name)\r\n        }\r\n        ch_sources.sort()\r\n        position.ch_sources = ch_sources\r\n      }\r\n    })\r\n  }\r\n  //改变数据的时候拼装数据结构（共用）\r\n  beforeChange() {\r\n    let that = this\r\n    return function (changes, source) {\r\n      let change_index\r\n      let change_prop\r\n      let change_oldVal\r\n      let change_newVal\r\n      let sources\r\n      let keys\r\n      //创建更改组织、机组、采集器、通道、任务的联动实例\r\n\r\n      for (let i = 0; i < changes.length; i++) {\r\n        change_index = changes[i][0]\r\n        change_prop = changes[i][1]\r\n        change_oldVal = changes[i][2]\r\n        change_newVal = changes[i][3]\r\n        /* 如果选定的值没有改变 返回false */\r\n        if (change_oldVal == change_newVal) {\r\n          continue\r\n        }\r\n        let reg = new RegExp(\"^[0-9]*$\");   //判断字符串是否为数字\r\n        let regPositiveNum = new RegExp(/^[1-9]+[0-9]*]*$/); // 判断正整数\r\n        let reg2=  new RegExp(/^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/);//判断正数\r\n        let position = that.getPositionByIndex(change_index)\r\n        if (change_prop == \"t_name\") {  //组织\r\n          let t_sources = position.t_sources\r\n          if (t_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该组织`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            that.update_t_name(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"mac_me\") { //机组\r\n          let macName_sources = position.macName_sources\r\n          if (macName_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该机组`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            that.update_mac(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"dgm_name\") { //采集器\r\n          let dgm_sources = position.dgm_sources\r\n          if (dgm_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该采集器`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            that.update_dgm(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"ch_name\") { //通道\r\n          let ch_sources = position.ch_sources\r\n          if (ch_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该通道`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            that.update_channel(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"task_id_val\") { //任务\r\n          let task_id_sources = position.task_id_sources\r\n          if (change_newVal === \"\") { return false } //任务未做修改的时候，保持原样\r\n          if (task_id_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该任务`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            that.update_taskId(position, change_newVal)\r\n          }\r\n\r\n        }\r\n        if (change_prop == \"baseInfo.filter_val\") { //滤波器 包络测点\r\n          let filter_sources = position.baseInfo.filter_sources\r\n          if (filter_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该滤波器`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            sources = position.baseInfo.filter_sources\r\n            keys = position.baseInfo.filter_sources_key\r\n            position.baseInfo.filter_val = change_newVal\r\n            position.baseInfo.filter = find_key(change_newVal, sources, keys)\r\n            /* 更改滤波器的时候改变分析频率 */\r\n            that.update_frequency_spectral_sources(position)\r\n\r\n          }\r\n        }\r\n\r\n        if (change_prop == \"baseInfo.frequency_val\") { // 分析频率 采样周期\r\n          let frequency_sources = position.baseInfo.frequency_sources\r\n          if (frequency_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该分析频率`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            sources = position.baseInfo.frequency_sources\r\n            keys = position.baseInfo.frequency_sources_key\r\n            position.baseInfo.frequency_val = change_newVal\r\n            position.baseInfo.frequency = find_key(change_newVal, sources, keys)\r\n            computed__frequency_spectral(position)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.spectral\") { //谱线数 采样点数\r\n          let spectral_sources = position.baseInfo.spectral_sources\r\n          if (spectral_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该谱线数`,\r\n              button: \"确认\"\r\n            })\r\n            return false\r\n          } else {\r\n            position.baseInfo.spectral = change_newVal\r\n            computed__frequency_spectral(position)\r\n          }\r\n        }\r\n        if (change_prop == \"pos_activity_val\") { //是否有效\r\n          let pos_activity_sources = position.pos_activity_sources\r\n          if (pos_activity_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该值`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.pos_activity_sources\r\n            keys = position.pos_activity_sources_key\r\n            position.pos_activity_val = change_newVal\r\n            position.pos_activity = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        if (change_prop == \"isalarm_val\") {//是否报警\r\n          let isalarm_sources = position.isalarm_sources\r\n          if (isalarm_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该值`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.isalarm_sources\r\n            keys = position.isalarm_sources_key\r\n            position.isalarm_val = change_newVal\r\n            position.isalarm = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.resampling_val\") {//过采样\r\n          let resampling_sources = position.baseInfo.resampling_sources\r\n          if (resampling_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该值`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.resampling_sources\r\n            keys = position.baseInfo.resampling_sources_key\r\n            position.baseInfo.isalarm_val = change_newVal\r\n            position.baseInfo.resampling = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        for (let i = 0; i < 8; i++) {\r\n          if (change_prop == `baseInfo.band${i}.optfreq_type_val`) { //频段\r\n            let optfreq_type_sources = position.baseInfo[`band${i}`].optfreq_type_sources\r\n            if (optfreq_type_sources.indexOf(change_newVal) == -1) {\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index + 1}行不存在该频段类型`,\r\n                button: \"确认\"\r\n              })\r\n              return false;\r\n            } else {\r\n              sources = position.baseInfo[`band${i}`].optfreq_type_sources\r\n              keys = position.baseInfo[`band${i}`].optfreq_type_sources_key\r\n              position.baseInfo[`band${i}`].optfreq_type_val = change_newVal\r\n              position.baseInfo[`band${i}`].optfreq_type = find_key(change_newVal, sources, keys)\r\n            }\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.datamode1_val\") {//过程量1 合成倾角\r\n          let datamode1_val_sources = position.baseInfo.datamode1_sources\r\n          if (datamode1_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该过程量类型`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.datamode1_sources\r\n            keys = position.baseInfo.datamode1_sources_key\r\n            position.baseInfo.datamode1_val = change_newVal\r\n            position.baseInfo.datamode1 = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.datamode2_val\") {//过程量2合成倾角\r\n          let datamode2_val_sources = position.baseInfo.datamode2_sources\r\n          if (datamode2_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该过程量类型`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.datamode2_sources\r\n            keys = position.baseInfo.datamode2_sources_key\r\n            position.baseInfo.datamode2_val = change_newVal\r\n            position.baseInfo.datamode2 = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n\r\n        if (change_prop == \"baseInfo.rock1_ch_name\") {//倾角X关联通道名称\r\n          let rock1_ch_name_sources = position.baseInfo.rock1_ch_sources\r\n          if (rock1_ch_name_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该关联通道X`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            that.update_rock_ch(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.rock2_ch_name\") {//倾角Y关联通道名称\r\n          let rock2_ch_name_sources = position.baseInfo.rock2_ch_sources\r\n          if (rock2_ch_name_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该关联通道Y`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            that.update_rock_ch(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.sourceType_val\") {//数据来源 合成倾角\r\n          let sourceType_val_sources = position.baseInfo.sourceType_sources\r\n          if (sourceType_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该传数据来源`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.sourceType_sources\r\n            keys = position.baseInfo.sourceType_sources_key\r\n            position.baseInfo.sourceType = find_key(change_newVal, sources, keys)\r\n            that.update_sourceType(position)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.dip_model_val\") {//传感器类型 合成倾角\r\n          let dip_model_val_sources = position.baseInfo.dip_model_sources\r\n          if (dip_model_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该传感器类型`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.dip_model_sources\r\n            keys = position.baseInfo.dip_model_sources_key\r\n            position.baseInfo.dip_model_val = change_newVal\r\n            position.baseInfo.dip_model = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.calc_method_val\") {//计算方式 数字量测点\r\n          let calc_method_val_sources = position.baseInfo.calc_method_sources\r\n          if (calc_method_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该计算方式`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.calc_method_sources\r\n            keys = position.baseInfo.calc_method_sources_key\r\n            position.baseInfo.calc_method_val = change_newVal\r\n            position.baseInfo.calc_method = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.datamode_val\") {//过程量类型  工艺量测点\r\n          let datamode_val_sources = position.baseInfo.datamode_sources\r\n          if (datamode_val_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该过程量类型`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.datamode_sources\r\n            keys = position.baseInfo.datamode_sources_key\r\n            position.baseInfo.datamode_val = change_newVal\r\n            position.baseInfo.datamode = find_key(change_newVal, sources, keys)\r\n          }\r\n        }\r\n        /* 长采样的序号、关联通道、 采集方式*/\r\n        if (change_prop == \"baseInfo.method_val\") {//采集方式 长采样测点\r\n          let method_val = position.baseInfo.method_sources\r\n          if (method_val.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该采集方式`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            sources = position.baseInfo.method_sources\r\n            keys = position.baseInfo.method_sources_key\r\n            position.baseInfo.method_val = change_newVal\r\n            position.baseInfo.capture_mode = find_key(change_newVal, sources, keys)\r\n            /* 方法：选择对应通道更改关联通道 */\r\n            that.capture_mode(position)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.capture_byId\") {//序号 长采样测点\r\n          let capture_sources = position.baseInfo.capture_sources\r\n          if (capture_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该序号`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            that.update_capCh_byNumber(position, change_newVal)\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.capture_chName\") {//通道名字 长采样测点\r\n          let capture_chName_sources = position.baseInfo.capture_chName_sources\r\n          if (capture_chName_sources.indexOf(change_newVal) == -1) {\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index + 1}行不存在该通道`,\r\n              button: \"确认\"\r\n            })\r\n            return false;\r\n          } else {\r\n            that.update_channel(position, change_newVal)\r\n          }\r\n        }\r\n        /* 振动测点微信报警参数 */\r\n        if (change_prop == \"baseInfo.levelRms\") {//过滤阈值：这个可以填小数\r\n            if(change_newVal===''){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行过滤阈值不能为空`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n            if(!reg.test(change_newVal)){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行请输入数字`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n        }\r\n        if (change_prop == \"baseInfo.areaRatio\") {//增长百分比：正数，填20，就是20%的意思\r\n            if(change_newVal===''){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行增长百分比不能为空`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n            if(!reg2.test(change_newVal)){\r\n                swal({\r\n                    title: \"提示\",\r\n                    text: `第${change_index+1}行请输入正数`,\r\n                    button: \"确认\",\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (change_prop == \"baseInfo.sampHours\") {//平均值计算时间：正整数，多少小时的意思\r\n            if(change_newVal===''){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行平均值计算时间不能为空`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n            if(!regPositiveNum.test(change_newVal)){\r\n                swal({\r\n                    title: \"提示\",\r\n                    text: `第${change_index+1}行请输入正整数`,\r\n                    button: \"确认\",\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (change_prop == \"baseInfo.death_time\") {//死区时间，单位小时，新增：正整数\r\n            if(change_newVal===''){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行死区时间不能为空`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n            if(!regPositiveNum.test(change_newVal)){\r\n                swal({\r\n                    title: \"提示\",\r\n                    text: `第${change_index+1}行请输入正整数`,\r\n                    button: \"确认\",\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (change_prop == \"baseInfo.packn\") {//连续n包，新增：正整数\r\n            if(change_newVal===''){\r\n              swal({\r\n                title: \"提示\",\r\n                text: `第${change_index+1}行连续n包不能为空`,\r\n                button: \"确认\",\r\n              });\r\n              return false;\r\n            }\r\n            if(!regPositiveNum.test(change_newVal)){\r\n                swal({\r\n                    title: \"提示\",\r\n                    text: `第${change_index+1}行请输入正整数`,\r\n                    button: \"确认\",\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (change_prop == \"baseInfo.alarm_smooth_a\") {//报警投票机制a，新增：正整数\r\n          if(change_newVal===''){\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index+1}行报警投票机制a不能为空`,\r\n              button: \"确认\",\r\n            });\r\n            return false;\r\n          }\r\n          if(!regPositiveNum.test(change_newVal)){\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index+1}行请输入正整数`,\r\n              button: \"确认\",\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n        if (change_prop == \"baseInfo.alarm_smooth_b\") {//报警投票机制b，新增：正整数\r\n          if(change_newVal===''){\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index+1}行报警投票机制b不能为空`,\r\n              button: \"确认\",\r\n            });\r\n            return false;\r\n          }\r\n          if(!regPositiveNum.test(change_newVal)){\r\n            swal({\r\n              title: \"提示\",\r\n              text: `第${change_index+1}行请输入正整数`,\r\n              button: \"确认\",\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //改变数据后的方法 （共用）\r\n  afterChange() {\r\n    let that = this\r\n    return function (changes, source) {//修改数据事件\r\n      let changeData = that.changeData\r\n      let addData = that.addData\r\n      if (changes) {\r\n        changes.forEach(change => {\r\n          let position = that.getPositionByIndex(change[0])\r\n          let sendPosition = changePosition(that.type, position)\r\n          if (position.operate == 0) {\r\n            changeData[position.mac_id + \"_\" + that.type + \"_\" + position.pos_id] = sendPosition;\r\n          }\r\n          else if (position.operate == 1) {\r\n            addData[position.index] = sendPosition;\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /* beforeRender: ()=>{\r\n\r\n      },\r\n      afterRender: ()=>{\r\n\r\n  },  */\r\n\r\n  /**\r\n   * 工具方法\r\n   * ************************************************\r\n   */\r\n  /* 根据索引行获取真实数据和物理行 (共用)*/\r\n  getPositionByIndex(index) {\r\n    let hot = this.getHot()\r\n    let data = this.getData()\r\n    let physicalRow = hot.toPhysicalRow(index);\r\n    let info = data[physicalRow];\r\n    return info\r\n  }\r\n  /* 改变组织 */\r\n  update_t_name(position, t_name) {\r\n    position.t_name = t_name\r\n    position.t_id = this.pos_folderList[t_name]\r\n    this.update_mac_source(position)\r\n  }\r\n  /* 更改机组源 */\r\n  update_mac_source(position) {\r\n    let pos_machineList = this.pos_machineList[position.t_name]\r\n    let macName_source = Object.keys(pos_machineList);\r\n    position.macName_sources = macName_source;//保存机组源\r\n    //选取第一个机组为默认机组\r\n    let mac_me = macName_source[0]\r\n    this.update_mac(position, mac_me)\r\n  }\r\n  /* 更改机组 */\r\n  update_mac(position, mac_me) {\r\n    position.mac_me = mac_me\r\n    position.mac_id = this.pos_machineList[position.t_name][mac_me].mac_id;\r\n    position.m_type = this.pos_machineList[position.t_name][mac_me].m_type;\r\n    //在更改机组的时候更改测点ID\r\n    position.pos_id = this.setPosId(position.mac_id)\r\n    if (this.type == 11 || this.type == 13) { //如果是倾覆和合成倾角还需要为两个晃度或倾角测点添加ID\r\n      /* tt_ch_id */\r\n      position.baseInfo.tt_ch_id = position.pos_id\r\n      position.baseInfo.rock1_id = this.set_rock_posId(position.mac_id)\r\n      position.baseInfo.rock2_id = this.set_rock_posId(position.mac_id)\r\n    }\r\n    //更改采集器源\r\n    this.update_dgm_source(position)\r\n  }\r\n  /* 更改采集器源 */\r\n  update_dgm_source(position) {\r\n    let pos_dgmList = this.pos_dgmList[position.mac_id];\r\n    let dgmName_sources = Object.keys(pos_dgmList);\r\n    position.dgm_sources = dgmName_sources;//保存采集器源\r\n    //选取第一个采集器为默认采集器\r\n    let dgm_name = dgmName_sources[0]\r\n    this.update_dgm(position, dgm_name)\r\n  }\r\n  /* 更改采集器 */\r\n  update_dgm(position, dgm_name) {\r\n    /* 记录旧采集器的信息 */\r\n    position.oldInfo['dgm_id'] = position.dgm_id\r\n    position.oldInfo['dgm_name'] = position.dgm_name\r\n\r\n    position.dgm_name = dgm_name\r\n    position.dgm_id = this.pos_dgmList[position.mac_id][dgm_name].dgm_id\r\n    position.dgm_type = this.pos_dgmList[position.mac_id][dgm_name].dgm_type\r\n    let arr = [3, 4, 6, 8, 9, 11, 12, 13, 15, 16]  //振动、 包络、 阶次、 晃度、 倾覆、 倾角 、 合成倾角,冲击\r\n    if (arr.indexOf(this.type) > -1) {\r\n      //在更改采集器的时候更改分析频率和谱线数(如果有谱线数的话)\r\n      this.update_frequency_spectral_sources(position)\r\n    }\r\n    //更改通道源\r\n    this.update_ch_source(position)\r\n  }\r\n  /* 更改采集器 -> 更改通道源并选择默认通道 */\r\n  update_ch_source(position) {\r\n    let chList = this.pos_chaList[position.dgm_id];\r\n    let ch_sources = []\r\n    let ch_name\r\n    if (this.type == 200) { //长采样测点\r\n      this.capture_mode(position)\r\n    } else {  //其他类型测点\r\n      if (this.type == 11) { //倾覆的可选通道只有塔顶和机舱\r\n        ch_sources = over_pos_loc_ch\r\n        // ch_sources = ['机舱','塔顶','塔筒1',\"塔筒2\",\"塔筒3\",\"塔筒4\",\"塔筒5\"]\r\n      } else if (this.type == 13) {\r\n        ch_sources = syn_pos_loc_ch\r\n      } else {\r\n        ch_sources = Object.keys(chList);\r\n      }\r\n      position.ch_sources = ch_sources.sort();//保存通道源\r\n      //选取第一个通道为默认通道\r\n      if (ch_sources.length == 0) {\r\n        ch_name = \"\"\r\n      } else {\r\n        ch_name = ch_sources[0]\r\n      }\r\n      this.update_channel(position, ch_name)\r\n\r\n    }\r\n  }\r\n  /* 更改通道 */\r\n  update_channel(position, ch_name) {\r\n    position.oldInfo[\"ch_id\"] = position.ch_id\r\n    position.oldInfo['ch_name'] = position.ch_name\r\n    position.oldInfo['ch_type'] = position.ch_type\r\n    /* 温度、过程量、转速、数字量测点 */\r\n    let flag = NORMAL_POS.indexOf(this.type) > -1\r\n    /* 普通类型测点，需要删除通道 */\r\n    if (flag && position.ch_id !== '') {\r\n      /* 之前的通道，先要在数组中还原之前的通道 */\r\n      this.restore_channel(position)\r\n    }\r\n\r\n    /* 所有测点-设置新的通道 */\r\n    this.set_channel(position, ch_name, flag)\r\n    /* 任务类测点 */\r\n    if (TASK_POS.indexOf(this.type) > -1) {\r\n      /* 清空任务是否更改了数组，要全部遍历 */\r\n      this.clear_taskId(position) && this.updateTaskSource(position)\r\n      /* 为这个测点设置选项 */\r\n      let source = this.task_idSources[position.dgm_id][position.ch_name]\r\n      position.task_id_sources = taskArray(source)\r\n\r\n    }\r\n    /* 倾覆和倾角测点用其他方法 */\r\n    if (this.type == 11 || this.type == 13) {\r\n      this.update_virtual_chaName(position)\r\n    }\r\n  }\r\n  /* 通道的值的设置 */\r\n  set_channel(position, ch_name, del_pos) {  //del 4种类型换通道的时候要将通道删除\r\n    if (ch_name === \"\" || ch_name === undefined) {  //采集器下面没有通道，直接返回\r\n      position.ch_id = position.ch_name = position.ch_type = \"\"\r\n      return\r\n    } else {\r\n      position.ch_name = ch_name\r\n      position.ch_id = this.pos_chaList[position.dgm_id][ch_name].ch_id\r\n      position.ch_type = this.pos_chaList[position.dgm_id][ch_name].ch_type\r\n      /* 如果是要删除通道的测点 */\r\n      if (del_pos) {\r\n        delete this.pos_chaList[position.dgm_id][ch_name]\r\n        this.refresh_channel()\r\n      }\r\n    }\r\n  }\r\n\r\n  /* 改变任务  \"\" 空为没有任务*/\r\n  update_taskId(position, task_val) {\r\n    let task_id = find_key(task_val, position.task_id_choose, position.task_id_choose_key)\r\n\r\n    /* 设置新值 */\r\n    this.set_taskId(position, task_id, task_val, this.clear_taskId(position))\r\n\r\n  }\r\n  /* 清空任务 */\r\n  clear_taskId(position) {\r\n    let isChange = false\r\n    position.oldInfo['task_id'] = position.task_id\r\n    position.task_id = position.task_id_val = ''\r\n    /* 之前存在任务，还原 */\r\n    if (position.oldInfo['task_id'] !== \"\") {\r\n      let dgm_id = position.oldInfo['dgm_id'] || position.dgm_id\r\n      let ch_name = position.oldInfo['ch_name'] || position.ch_name\r\n      this.task_idSources[dgm_id][ch_name].push(position.oldInfo['task_id'])\r\n      /* 如果是删除测点，就遍历全部测点的任务 */\r\n      isChange = true //测点修改，需要遍历\r\n    }\r\n    position.oldInfo = {}  //将信息置空\r\n    return isChange\r\n  }\r\n  set_taskId(position, task_id, task_val, isChange) {\r\n    /* 无新任务 */\r\n    if (task_id === undefined || task_id === \"\") {\r\n      if (!isChange) return; //无旧任务，直接返回\r\n    } else {\r\n      let source = this.task_idSources[position.dgm_id][position.ch_name]\r\n      source.splice(source.indexOf(task_id), 1)\r\n      position.task_id = task_id\r\n      position.task_id_val = task_val\r\n    }\r\n    /* 刷新所有测点的任务 */\r\n    this.updateTaskSource()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  /* 遍历全部测点，更新任务 */\r\n  updateTaskSource() {\r\n    let data = this.getData()\r\n    let task_idSources = this.task_idSources\r\n    /* 新建测点的时候，这个测点不在data中 */\r\n    let self_task_id_sources\r\n    //遍历data，将所有的task_id_sources都更新\r\n    data.forEach(position => { //遍历所有数据\r\n      if (position.mac_id) { //新建的测点\r\n        if (position.ch_id === \"\") return\r\n        self_task_id_sources = [...task_idSources[position.dgm_id][position.ch_name]]  //克隆这个数组\r\n        if (position.task_id !== \"\") { //如果自己的task_id为空则不添加\r\n          self_task_id_sources.push(position.task_id) //加入自己的id\r\n        }\r\n        position.task_id_sources = taskArray(self_task_id_sources)  //将任务转化为文字\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /* 更改采集器联动更改分析频率和谱线数 */\r\n  update_frequency_spectral_sources(position) {\r\n    let frequency_object = frequencySources(position, position.baseInfo.filter)\r\n    position.baseInfo.frequency = Object.keys(frequency_object)[0]; //取第一个值\r\n    position.baseInfo.frequency_val = Object.values(frequency_object)[0]\r\n    position.baseInfo.frequency_sources = Object.values(frequency_object);\r\n    position.baseInfo.frequency_sources_key = Object.keys(frequency_object)\r\n    position.baseInfo.spectral = spectralSources(position.dgm_type, position.pos_type)[0];\r\n    position.baseInfo.spectral_sources = spectralSources(position.dgm_type, position.pos_type);\r\n    computed__frequency_spectral(position)\r\n  }\r\n\r\n\r\n\r\n  /* 长采样测点 */\r\n  capture_mode(position) {\r\n    let capture_mode = position.baseInfo.capture_mode\r\n    if (capture_mode == 0) {//定时长采样\r\n      this.update_cap_number(position)\r\n    } else if (capture_mode == 1) { //手动长采样\r\n      this.update_cap_channel(position)\r\n    }\r\n  }\r\n  /* 定时采样 更改长采样的序号源 */\r\n  update_cap_number(position) {\r\n    /*  清空关联通道和通道源 */\r\n    position.baseInfo.capture_byId = \"\"\r\n    position.baseInfo.capture_sources = []\r\n    position.baseInfo.capture_chName = \"\"\r\n    let chList = this.cap_sequenceNum[position.dgm_id];\r\n    let sequenceNums = Object.keys(chList)\r\n    position.baseInfo.capture_sources = sequenceNums\r\n    //选定的一个序号\r\n    this.update_capCh_byNumber(position, sequenceNums[0])\r\n  }\r\n  /* 长采样根据序号改变关联通道 */\r\n  update_capCh_byNumber(position, capture_byId) {\r\n    if (typeof capture_byId !== \"undefined\") { //如果有选中的序号\r\n      position.baseInfo.capture_byId = capture_byId\r\n      /* 获取序号对应的振动通道ID */\r\n      let vib_id = this.cap_sequenceNum[position.dgm_id][capture_byId].vib_id\r\n      /* 获取振动通道的name */\r\n      let ch_name = this.cap_chaList[position.dgm_id][vib_id].ch_name\r\n      position.baseInfo.capture_chName = ch_name\r\n      this.update_channel(position, ch_name)\r\n    }\r\n  }\r\n  /* 手动采样 更改长采样的通道 */\r\n  update_cap_channel(position) {\r\n    /* 清空序号 */\r\n    position.baseInfo.capture_byId = \"1\"\r\n    position.baseInfo.capture_sources = []\r\n    /* 更改关联通道源 */\r\n    let ch_sources = Object.keys(this.pos_chaList[position.dgm_id]).sort()\r\n    position.baseInfo.capture_chName = ch_sources[0]\r\n    position.baseInfo.capture_chName_sources = ch_sources;//保存通道源\r\n    /* 保存选定通道的 type name id*/\r\n    this.update_channel(position, ch_sources[0])\r\n  }\r\n\r\n  /* 更改倾覆等虚拟通道 */\r\n  update_virtual_chaName(position) {\r\n    /* 改变通道ID */\r\n    let sources = position.baseInfo.tt_pos_loc_source\r\n    let keys = position.baseInfo.tt_pos_loc_source_key\r\n    position.baseInfo.tt_pos_loc = find_key(position.ch_name, sources, keys)\r\n    if (this.type == 11) { //倾覆测点\r\n      /* 判断选中的虚拟通道下面有没有 rock_ch，没有则置空 */\r\n      this.updateRock(position)\r\n    } else if (this.type == 13) {//合成倾角\r\n      position.baseInfo.sourceType = 5 //改变数据源默认为串口\r\n      this.update_sourceType(position)\r\n    }\r\n  }\r\n\r\n  /* 合成倾角测点 */\r\n  /* 更改合成倾角的数据来源 */\r\n  update_sourceType(position) {\r\n    /* 串口 */\r\n    let ch_name\r\n    let sourceType = position.baseInfo.sourceType\r\n    if (sourceType == 5) {\r\n      position.baseInfo.sourceType_val = \"串口\"\r\n      /* 选择串口通道 */\r\n      let moduleList = this.rock_chaList[position.dgm_id]['module_name']\r\n\r\n      let source = Object.keys(moduleList)\r\n      /* 更改通道源 */\r\n      position.baseInfo.rock1_ch_sources = position.baseInfo.rock2_ch_sources = source\r\n      /* 选择第一个通道为默认通道 */\r\n      ch_name = source[0]\r\n      this.update_rock_ch(position, ch_name)\r\n    }\r\n    /* 振动 */\r\n    if (sourceType == 0) {\r\n      this.updateRock(position)\r\n    }\r\n    /* 串口和振动的分析频率不同 */\r\n    this.update_frequency_spectral_sources(position)\r\n\r\n  }\r\n  /* 串口的条件下更改rock_ch */\r\n  update_rock_ch(position, ch_name) {\r\n    let moduleList = this.rock_chaList[position.dgm_id]['module_name']\r\n    position.baseInfo.rock1_ch_name = position.baseInfo.rock2_ch_name = ch_name\r\n    position.baseInfo.rock1_ch_id = position.baseInfo.rock2_ch_id = moduleList[ch_name].ch_id\r\n    position.baseInfo.rock1_ch_type = position.baseInfo.rock2_ch_type = moduleList[ch_name].ch_type\r\n  }\r\n\r\n  /* 倾覆测点 */\r\n  /* 根据倾覆的通道自动计算出 晃度xy的通道 */\r\n  updateRock(position) {\r\n    let list1 = this.rock_chaList[position.dgm_id][position.ch_name + \"X\"]\r\n    let list2 = this.rock_chaList[position.dgm_id][position.ch_name + \"Y\"]\r\n    if ($.isEmptyObject(list1)) {//如果是空对象，把rock_ch通道置空\r\n      position.baseInfo.rock1_ch_name = ''\r\n      position.baseInfo.rock1_ch_id = ''\r\n      position.baseInfo.rock1_ch_type = ''\r\n\r\n      position.baseInfo.rock2_ch_name = ''\r\n      position.baseInfo.rock2_ch_id = ''\r\n      position.baseInfo.rock2_ch_type = ''\r\n    } else {\r\n      position.baseInfo.rock1_ch_name = list1.ch_name\r\n      position.baseInfo.rock1_ch_id = list1.ch_id\r\n      position.baseInfo.rock1_ch_type = list1.ch_type\r\n\r\n      position.baseInfo.rock2_ch_name = list2.ch_name\r\n      position.baseInfo.rock2_ch_id = list2.ch_id\r\n      position.baseInfo.rock2_ch_type = list2.ch_type\r\n    }\r\n  }\r\n\r\n  /* 设置测点ID */\r\n  setPosId(macId) {\r\n    let arr = this.mac_pos_id_list[macId]\r\n    let pos_id\r\n    //遍历数组，undefined的就进去站位\r\n    if (arr.length > 0) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] == undefined) {\r\n          pos_id = i;\r\n          arr[i] = pos_id\r\n          break\r\n        }\r\n      }\r\n    }\r\n    //如果数组是满的，就在数组后面加1就是pos_id\r\n    if (!pos_id) {\r\n      pos_id = arr.length;\r\n      arr[pos_id] = pos_id\r\n    }\r\n    return pos_id\r\n  }\r\n  /* 设置rock 测点ID */\r\n  set_rock_posId(macId) {\r\n    let arr = this.rock_pos_id_list[macId]\r\n    let pos_id\r\n    //遍历数组，undefined的就进去站位\r\n    if (arr.length > 0) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] == undefined) {\r\n          pos_id = i;\r\n          arr[i] = pos_id\r\n          break\r\n        }\r\n      }\r\n    }\r\n    //如果数组是满的，就在数组后面加1就是pos_id\r\n    if (!pos_id) {\r\n      pos_id = arr.length;\r\n      arr[pos_id] = pos_id\r\n    }\r\n    return pos_id\r\n  }\r\n  deepClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj))\r\n  }\r\n}\r\n","import poshdtable from './pos_hdtable.js';\r\nimport { getPositionInfo } from './pos_info.js'\r\nimport { reRenderSelectOption, posType_name } from './pos_methods'\r\nexport const posMixin = {\r\n  data() {\r\n    return {\r\n      hot: {},//hottable对象\r\n      data: [],//hottable的data数据\r\n      initList: {\r\n        pos_folderList: {},//所有的组织列表\r\n        pos_machineList: {},//所有的机组列表\r\n        pos_dgmList: {},//所有的采集器列表\r\n        pos_chaList: {},//所有的通道列表，根据name来查询\r\n        cap_chaList: {},//长采样序号对应振动的通道列表，根据ID来查询\r\n        cap_sequenceNum: {},//长采样序号列表\r\n        rock_chaList: {},//晃度通道对应列表\r\n        mac_pos_id_list: [],//机组对应测点表{机组：[]}\r\n        rock_pos_id_list: [],//存晃度和倾角的pos_id列表\r\n        rock_list:{},//存放倾覆或合成倾角带的晃度或者倾角测点\r\n        task_idSources: {}//任务的统计列表 {dgm_id:{ch_id:{[task_id_sources],[indexs]}}}\r\n      },\r\n      changeList: {\r\n        changeData: {},//修改的数据\r\n        deleteData: [],//删除的数据\r\n        addData: {},//新增的数据\r\n      },\r\n\r\n      scroll: 0,//滚动距离\r\n    }\r\n  },\r\n  //销毁的时候清除位置\r\n  destroyed() {\r\n    this.$store.commit('clearSroll', 'position')\r\n  },\r\n  //进入的时候恢复scoll位置\r\n  activated() {\r\n    let wtHolder = document.getElementsByClassName('wtHolder')[0]\r\n    if (wtHolder) {\r\n      let state = this.$store.state.scroll['position'][this.type]\r\n      wtHolder.scrollTop = state === undefined ? 0 : state.scrollTop\r\n      wtHolder.scrollLeft = state === undefined ? 0 : state.scrollLeft\r\n    }\r\n  },\r\n  //离开的时候提示修改数据\r\n  // deactivated() {\r\n  //   if (!$.isEmptyObject(this.changeList.changeData) || !$.isEmptyObject(this.changeList.addData)) {\r\n  //     swal({\r\n  //       title: \"提示\",\r\n  //       text: `${posType_name(this.type)}数据修改未保存`,\r\n  //       button: \"确认\"\r\n  //     })\r\n  //   }\r\n  // },\r\n  mounted() {\r\n    this.getListData(this.type)\r\n  },\r\n  methods: {\r\n    getListData(type) {\r\n      this.$getApi.queryPositionInfo(type, this.$store.state.tids)\r\n        .then(res => {\r\n          let result = getPositionInfo(res, type)   //有点问题\r\n          console.log(result)\r\n          if (!result) {\r\n            this.$emit(\"child-msg\", this.type, false) //没有机组显示提示\r\n          } else {\r\n            let { data, invalidPos,...initList } = { ...result }\r\n            if(invalidPos.length){\r\n              //如果有失效测点则 发送父组件处理\r\n              this.$emit(\"invalidPosM\", invalidPos)\r\n            }\r\n            this.data = data\r\n            this.initList = initList\r\n            //渲染表格\r\n            this.$emit(\"child-msg\", this.type, true)\r\n            this.filter_by_dgmName()\r\n            this.renderTable()\r\n            /* 将默认的第一个机组发送个树状图 */\r\n            if (this.data.length > 0) {\r\n              let linkObj = [this.data[0].mac_id]\r\n              this.$store.commit('setTreePosition', linkObj);\r\n            }\r\n\r\n          }\r\n        })\r\n          .catch(err=>{\r\n            console.log('请求错误' ,err)\r\n          })\r\n    },\r\n    /* 渲染表格 */\r\n    renderTable() {\r\n      let HotTable = document.getElementById('HotTable');\r\n      //创建table\r\n      this.hot = new poshdtable(HotTable, this);\r\n      /* 添加行之后选项框错位 */\r\n      reRenderSelectOption(this.hot, this.data)\r\n      /* 监听滚动事件 */\r\n      this.listenScroll()\r\n\r\n\r\n    },\r\n    /* 切换测点的时候机组 */\r\n    listenScroll() {\r\n      let wtHolder = document.getElementsByClassName('wtHolder')[0]\r\n      wtHolder.addEventListener('scroll', (e) => {\r\n        let scrollTop = wtHolder.scrollTop;\r\n        let scrollLeft = wtHolder.scrollLeft;\r\n        let paload = {\r\n          scrollType: 'position',\r\n          type: this.type,\r\n          scrollTop: scrollTop,\r\n          scrollLeft: scrollLeft\r\n        }\r\n        this.$store.commit('setScroll', paload);\r\n        this.hot.destroyEditor()//处理当选择下拉框后拖动滚动条框框会跟着跑的问题\r\n      });\r\n    },\r\n    /* 加载的时候根据dgm_name 来过滤数据 */\r\n    filter_by_dgmName() {\r\n      let data = []\r\n      if (!sessionStorage.getItem('dgm_id')) return; /* 没有这一选项返回  */\r\n      let dgm_ids = JSON.parse(sessionStorage.getItem('dgm_id'))\r\n      if (dgm_ids.length == 0) return /* 选项为空，返回 */\r\n      dgm_ids.forEach(dgm_id => {\r\n        this.data.forEach(position => {\r\n          if (position.dgm_id == dgm_id) {\r\n            data.push(position)\r\n          }\r\n        })\r\n      })\r\n      this.data = data\r\n    },\r\n    //获取data\r\n    getData() {\r\n      return this.data\r\n    },\r\n    /* 获取hot实例 */\r\n    getHot() {\r\n      return this.hot\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}