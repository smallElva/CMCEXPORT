{"version":3,"sources":["webpack:///src/components/common/MyContentTitle.vue","webpack:///src/components/content/system/dgmBind/DgmBind.vue","webpack:///./src/components/content/system/dgmBind/DgmBind.vue?83c9","webpack:///./src/components/common/MyContentTitle.vue?ebfc","webpack:///./src/components/common/MyContentTitle.vue?3a9d","webpack:///./src/components/content/system/dgmBind/DgmBind.vue?ca3c","webpack:///./src/components/common/MyContentTitle.vue","webpack:///./src/components/common/MyContentTitle.vue?7b5a","webpack:///./src/components/common/MyContentTitle.vue?8da9","webpack:///./src/components/common/MyContentTitle.vue?950d","webpack:///./src/components/content/system/dgmBind/DgmBind.vue","webpack:///./src/components/content/system/dgmBind/DgmBind.vue?ec4d","webpack:///./src/components/content/system/dgmBind/DgmBind.vue?259f","webpack:///./src/components/content/system/dgmBind/DgmBind.vue?b4ff"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAOA;AACA,wBADA;AAEA,kBAFA;AAGA,MAHA,kBAGA;AACA;AACA;AADA;AAGA,GAPA;AAQA;AACA,YADA,sBACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,sDADA,CACA;AACA,SAFA,MAGA;AACA,sDADA,CACA;AACA;;AACA,uCATA,CASA;;AACA;AACA,OAXA,MAWA;AACA;AACA;AACA;AACA,sCAJA,CAIA;;AACA;AACA,sDADA,CACA;AACA,SAFA,MAGA;AACA,uDADA,CACA;AACA;;AACA,uCAXA,CAWA;;AACA;AACA;AACA;AAhCA;AARA,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuPA;AACA;AACA;AACA,iBADA;AAEA,WAFA;AAGA;AACA;AACA,oBADA;AAEA,oBAFA;AAEA;AACA,iBAHA;AAGA;AACA,wBAJA;AAIA;AACA,kBALA;AAKA;AACA,qBANA;AAMA;AACA,wBAPA;AAOA;AACA,uBARA;AAQA;AACA,wBATA;AASA;AACA,mBAVA;AAUA;AACA,sBAXA;AAWA;AACA,uBAZA;AAYA;AACA,8BAbA;AAaA;AACA;AACA,iBADA;AAEA;AAFA,OAdA;AAiBA;AACA,2BAlBA;AAkBA;AACA,yBAnBA;AAmBA;AACA,wBApBA;AAoBA;AACA,uBArBA;AAqBA;AACA,mBAtBA;AAuBA,uBAvBA;AAuBA;AACA,gFAxBA;AAwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA,SADA,EAEA;AAAA;AAAA;AAAA;AAAA,SAFA,EAGA;AAAA;AAAA;AAAA;AAAA,SAHA,EAIA;AAAA;AAAA;AAAA;AAAA,SAJA,EAKA;AAAA;AAAA;AAAA;AAAA,SALA,EAMA;AAAA;AAAA;AAAA;AAAA,SANA,EAOA;AAAA;AAAA;AAAA;AAAA,SAPA,EAQA;AAAA;AAAA;AAAA;AAAA,SARA,EASA;AAAA;AAAA;AAAA;AAAA,SATA,EAUA;AAAA;AAAA;AAAA;AAAA,SAVA,EAWA;AAAA;AAAA;AAAA;AAAA,SAXA;AAAA,OALA,CAzBA;AA4CA,sBA5CA;AA4CA;AACA,4BA7CA;AA6CA;AACA,oBA9CA;AA8CA;AACA,gCA/CA;AA+CA;AACA,uBAhDA;AAgDA;AACA,oBACA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA,OAJA,EAKA;AAAA;AAAA;AAAA,OALA,EAMA;AAAA;AAAA;AAAA,OANA,EAOA;AAAA;AAAA;AAAA,OAPA,EAQA;AAAA;AAAA;AAAA,OARA,EASA;AAAA;AAAA;AAAA,OATA,EAUA;AAAA;AAAA;AAAA,OAVA,EAWA;AAAA;AAAA;AAAA,OAXA,EAYA;AAAA;AAAA;AAAA,OAZA,CAjDA;AA8DA;AACA,0BA/DA;AA+DA;AACA,kBAhEA;AAgEA;AACA,kBAjEA;AAiEA;AACA,2BAlEA;AAkEA;AACA,4BAnEA;AAmEA;AACA,uBApEA;AAoEA;AACA;AACA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA,OAJA,CArEA;AA2EA,wBA3EA;AA2EA;AACA;AACA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA,OAFA,CA5EA;AAgFA,2BAhFA;AAgFA;AACA;AACA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA,OAJA,CAjFA;AAuFA,4BAvFA;AAuFA;AACA,mBAxFA;AAwFA;AACA,kBAzFA,CAyFA;;AAzFA;AA4FA,GAhGA;AAiGA;AACA;AADA,GAjGA;AAoGA,SApGA,qBAoGA;AACA;AACA;AACA,GAvGA;AAwGA;AACA;AACA;AACA,GA3GA;AA4GA;AACA;AACA;AACA,KAHA;AAIA;AACA;AACA;AANA,GA5GA;AAoHA;AACA;AACA,aAFA,qBAEA,IAFA,EAEA,SAFA,EAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA,KApBA;AAqBA;AACA,iBAtBA,yBAsBA,IAtBA,EAsBA,UAtBA,EAsBA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA,OAVA,MAUA;AACA;AACA;AACA;AACA;AACA;AACA,OANA,MAMA;AACA;AACA;AACA;AACA;AACA;AACA,OANA,MAMA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA/DA;AAgEA;AACA,aAjEA,uBAiEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KAzEA;AA0EA;AACA,gBA3EA,0BA2EA;AACA;AACA,KA7EA;AA8EA;AACA,iBA/EA,2BA+EA;AACA;AACA,KAjFA;AAkFA;AACA,qBAnFA,+BAmFA;AACA;AACA,KArFA;AAsFA;AACA,cAvFA,wBAuFA;AACA;AACA;AACA;;AACA;AACA;AACA,qBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,OAPA,MAQA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA;AACA,OARA,MASA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA;AACA,OARA,MAQA;AACA;AACA;AACA,+BADA;AAEA,+BAFA;AAGA,yCAHA;AAIA,0CAJA;AAKA,gDALA;AAMA;AANA;AAQA,oDACA,IADA,CACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,WAHA,MAGA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,WARA,MAQA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,WARA,MAQA;AACA;AACA,yBADA;AAEA,iCAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA,SAjCA,WAkCA;AACA;AACA,SApCA;AAqCA;AACA,KApKA;AAsKA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA;AACA;AAEA,KAnLA;AAoLA;AACA,eArLA,uBAqLA,IArLA,EAqLA;AACA;;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA;AACA;;AACA;AACA,KAjMA;AAkMA;AACA,iBAnMA,2BAmMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA,iDACA,IADA,CACA;AACA;AACA;AAAA;AACA;;AACA;AACA;AACA;AACA;AACA,OATA,WAUA;AACA;AACA,OAZA;AAaA,KAvNA;AAwNA;AACA,cAzNA,wBAyNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KA3OA;AA4OA;AACA,aA7OA,qBA6OA,WA7OA,EA6OA;AACA;;AACA;AACA;AACA;AACA,KAlPA;AAmPA;AACA,eApPA,yBAoPA;AACA;AACA,KAtPA;AAuPA;AACA,sBAxPA,gCAwPA;AACA;AACA,KA1PA;AA2PA;AACA,cA5PA,wBA4PA;AACA;AACA;AACA;AACA,kDADA;AAEA,8CAFA;AAGA,oCAHA;AAIA,2CAJA;AAKA,yCALA;AAMA,mCANA;AAOA;AAPA;;AASA;AACA;AACA,qBADA;AAEA,4BAFA;AAGA;AAHA;AAKA,OANA,MAMA;AACA;AACA,qBADA;AAEA,yBAFA;AAGA;AAHA;AAKA,OANA,MAMA;AACA,gDACA,IADA,CACA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA,WANA,MAMA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA,WAPA,MAOA;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,SAvBA,WAwBA;AACA;AACA,SA1BA;AA2BA;AAEA,KAlTA;AAmTA;AACA,YApTA,oBAoTA,IApTA,EAoTA;AACA;AACA;AACA;AACA,wBADA;AAEA;AAFA;AAIA;AACA,KA5TA;AA6TA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA,SAjBA,MAkBA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA;AAKA,WANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA;AAKA,WAPA;AASA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA,WANA;AAQA;AAGA,OAhDA,MAgDA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aALA;AAMA,WAPA;AAQA;AACA;AACA,KA5XA;AA6XA;AAAA;;AAAA;AACA;AACA;;AACA;AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA,uCADA;AAEA,iCAFA;AAGA,qCAHA;AAIA,qCAJA;AAKA,uCALA;AAMA;AANA;AAQA,aAVA,MAUA;AACA;AACA;AACA,uCADA;AAEA,iCAFA;AAGA,qCAHA;AAIA,qCAJA;AAKA,uCALA;AAMA;AANA;AAQA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,WAjCA;AAkCA;;AACA;AACA;AACA;;AACA;AACA,OA1CA,MA2CA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACA,SADA;AAAA,YACA,UADA;AAAA,YACA,UADA;AAAA,YACA,UADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;;AACA;AACA,yCADA,CACA;AACA,eAFA,MAEA,CACA;AACA;AACA,aA3BA,MA2BA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA,gDArBA,CAsBA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA,iDArBA,CAsBA;AACA,aAvBA,MAuBA;AACA;;AACA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA,eATA,MASA;AACA;AACA,+CADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,6CAJA;AAKA,+CALA;AAMA;AANA;AAQA;;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA,yBADA,CAEA;;AACA,4HAHA,CAGA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,aALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,KAxwBA;AAywBA;AAAA;AACA;AACA,KA3wBA;AA4wBA;AAAA;;AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CADA;AAEA;AAFA;AAIA,aAVA,MAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CADA;AAEA,kDAFA;AAGA;AAHA;AAKA;AACA;AACA;;AAAA;AACA,OA5BA,MA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEADA;AAEA;AAFA;AAIA,aAVA,MAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEADA;AAEA,oEAFA;AAGA;AAHA;AAKA;AACA;AACA;;AAAA;AACA;;AACA;;AACA;AACA,8DACA,IADA,CACA;AACA;;AACA;AACA;AACA,yBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAdA,MAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,WAlCA,MAkCA;AACA;AACA;AACA,SAxCA,WAyCA;AACA;AACA,SA3CA;AA4CA;AACA,KAt3BA;;AAu3BA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,KAv4BA;AAw4BA,UAx4BA,kBAw4BA,KAx4BA,EAw4BA;AACA,qCADA,CACA;AACA,KA14BA;AA24BA;AACA;AACA;AACA;AACA,qBADA;AAEA;AAFA;AAIA,6CACA,IADA,CACA;AACA;AACA;AACA,uBADA;AAEA,wBAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA,qBADA;AAEA;AAFA,YARA,CAWA;;AACA;AACA;AACA,SAdA,MAcA;AACA;AACA;AACA,OAnBA,WAoBA;AACA;AACA,OAtBA;AAuBA,KAz6BA;AA06BA;AACA;AACA;AACA;;AACA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,WAcA;AACA;AACA,uBADA;AAEA,kCAFA;AAGA;AAHA;AAKA,SANA,MAMA;AACA;AACA,yBADA;AAEA,4CAFA;AAGA,uCAHA;AAGA;AACA,mCAJA;AAIA;AACA,mCALA;AAKA;AACA,+BANA;AAMA;AACA,2CAPA;AAOA;AACA;AARA;AAUA,+CACA,IADA,CACA;AACA;AACA;AACA,2BADA;AAEA,+BAFA;AAGA;AAHA;AAKA;AACA;AACA,aARA,MAQA;AACA;AACA;AACA,2BADA;AAEA,+BAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAzBA,WA0BA;AACA;AACA,WA5BA;AA6BA;AACA,KA3+BA;AA4+BA;AACA,aA7+BA,qBA6+BA,KA7+BA,EA6+BA,OA7+BA,EA6+BA,IA7+BA,EA6+BA;AACA;;AACA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA,OANA,MAMA;AACA;AACA;AACA,6CACA,IADA,CACA;AACA;AACA;AACA,yBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA,WAPA,MAOA;AACA;AACA;AACA,yBADA;AAEA,6BAFA;AAGA;AAHA;AAKA,WAPA,MAQA;AACA;AACA;AACA,yBADA;AAEA,6BAFA;AAGA;AAHA;AAKA,WAPA,MAQA;AACA;AACA,yBADA;AAEA,oCAFA;AAGA;AAHA;AAKA;AACA,SAhCA,WAiCA;AACA;AACA,SAnCA;AAoCA;AAEA,KA9hCA;AA+hCA;AAAA;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA,oDACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA,iBAFA,MAEA;AACA;AACA;AACA;;AACA;AACA;AACA,WAZA,MAYA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAhBA,MAgBA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA,OA3DA,WA4DA;AACA;AACA,OA9DA;AA+DA,KArmCA;AAsmCA;AACA,iBAvmCA,yBAumCA,QAvmCA,EAumCA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AApCA;;AAsCA;AACA,KAhpCA;AAipCA;AAAA;;AACA;AACA;AACA,iDADA;AAEA;AAFA;AAIA;AACA;AACA;AACA,0DACA,IADA,CACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA,iBAFA,MAEA;AACA;AACA;AACA;AACA;;AACA;AACA,WAZA,MAYA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAhBA,MAgBA;AAEA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA,SApDA,MAoDA;AACA;AACA;AACA,OAzDA,WA0DA;AACA;AACA,OA5DA;AA6DA,KAvtCA;AAwtCA;AACA;AACA,KA1tCA;AA2tCA;AACA;AACA;AACA,KA9tCA;AA+tCA;AAAA;;AACA;AACA;AACA;AACA;AACA,gDACA,IADA,CACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAVA,WAWA;AACA;AACA,OAbA;AAcA,KAlvCA;AAmvCA;AACA;AACA;;AACA;AACA;AACA,gCAFA,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAXA,MAWA;AACA;AACA;AACA,KApwCA;AAqwCA;AACA;AACA;;AACA;AACA;AACA,0BAFA,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAXA,MAWA;AACA;AACA;AACA,KAtxCA;AAuxCA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA,SAHA,MAGA;AACA;AACA;AACA;;AACA;AAEA,OAXA,MAWA;AACA;AACA,wBADA;AAEA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARA,MAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA7zCA;AApHA,G;;;;;;;;;;;;AChQA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wCAAwC,yBAAyB,EAAE;AACxE,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iCAAiC;AACtC;AACA,8BAA8B,SAAS,mBAAmB,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,wCAAwC;AAC7D,uBAAuB,0BAA0B;AACjD,yBAAyB,4BAA4B;AACrD,2BAA2B,uCAAuC;AAClE,8BAA8B,6BAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yCAAyC,SAAS,qBAAqB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,qBAAqB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,sBAAsB,EAAE;AAC1E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB;AACzE;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,oDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB,YAAY,uCAAuC,EAAE;AAC9E;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,+BAA+B,SAAS,oBAAoB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B,wBAAwB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA,6BAA6B,6BAA6B;AAC1D,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yCAAyC,6BAA6B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yCAAyC,6BAA6B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,mCAAmC,SAAS,0BAA0B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA,6BAA6B,2BAA2B;AACxD,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yCAAyC,SAAS,iBAAiB,EAAE;AACrE;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD,yBAAyB,4BAA4B;AACrD,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA,6BAA6B,2BAA2B;AACxD,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;AACA,+BAA+B,2BAA2B;AAC1D,iCAAiC,4BAA4B;AAC7D,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iCAAiC,4BAA4B;AAC7D,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iCAAiC,4BAA4B;AAC7D,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,+BAA+B,YAAY,wBAAwB,EAAE;AACrE;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC,YAAY,wBAAwB,EAAE;AACvE;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC,YAAY,wBAAwB,EAAE;AACvE;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC,YAAY,wBAAwB,EAAE;AACvE;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7rDA;AAAA;AAAA;AAAA;AAAA;AAAyG;AACvC;AACL;AACqC;;;AAGlG;AACgH;AAChH,gBAAgB,6HAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,qGAAM;AACR,EAAE,8GAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAAqO,CAAgB,+RAAG,EAAC,C;;;;;;;;;;;;ACAzP;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AAC3B;AACL;AACc;;;AAGpE;AACsH;AACtH,gBAAgB,6HAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAA0O,CAAgB,wRAAG,EAAC,C;;;;;;;;;;;;ACA9P;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"js/38-5cf7a894.js","sourcesContent":["<template>\r\n  <div class=\"my-content-header\" @dblclick=\"dblclick\">\r\n    <span class=\"page-title\">{{title}}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MyContentTitle\",\r\n  props: [\"title\"],\r\n  data() {\r\n    return {\r\n      flag: true\r\n    };\r\n  },\r\n  methods: {\r\n    dblclick() {\r\n      //放大\r\n      let homeHeader = document.getElementById(\"homeHeader\");\r\n      let aside = document.getElementById(\"aside\");\r\n      let content = document.getElementById(\"content\");\r\n      let wHeight = document.documentElement.clientHeight;\r\n      if (this.flag) {\r\n        homeHeader.style.display = \"none\";\r\n        aside.style.display = \"none\";\r\n        if(wHeight < 800){\r\n          content.style.height = \"calc(100vh - 20px)\"; //中间内容加大\r\n        }\r\n        else{\r\n          content.style.height = \"calc(100vh - 40px)\"; //中间内容加大\r\n        }\r\n        this.$bus.$emit(\"reloadtable\"); //主动渲染table\r\n        this.flag = !this.flag;\r\n      } else {\r\n        //缩小\r\n        homeHeader.style.display = \"block\";\r\n        aside.style.display = \"block\";\r\n        content.style.width = \"100px\"; //改变宽让宽自动渲染\r\n        if(wHeight < 800){\r\n          content.style.height = \"calc(100vh - 90px)\"; //中间内容加大\r\n        }\r\n        else{\r\n          content.style.height = \"calc(100vh - 120px)\"; //中间内容加大\r\n        }\r\n        this.$bus.$emit(\"reloadtable\"); //主动渲染table\r\n        this.flag = !this.flag;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-content-header {\r\n  /* width: 100%-15px;\r\n   */\r\n  box-sizing: border-box;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  background: #343c45;\r\n  font-size: 20px;\r\n  color: #fff;\r\n  padding-left: 15px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"dgmBind-content\">\r\n    <my-content-title :title='title'></my-content-title>\r\n      <div id=\"myTree\" class=\"myTree\" @click.stop>\r\n          <div class=\"dgm-content clearfloat\">\r\n              <div class=\"dgm-left\">\r\n                  <div class=\"dgm-header\">\r\n                      <div class=\"dgm-folder clearfloat\">\r\n                          <span class=\"folder-span\">组织名称</span>\r\n                          <select class=\"folder-choice\" v-model=\"folderSelected\" @change=\"getFolderSelected\">\r\n                              <option :value=\"folder.folderId + '_'+ folder.t_root\" v-for=\"folder in sortFolderList\" >{{folder.folderName}}</option>\r\n                          </select>\r\n                          <div class=\"dgm-search\">\r\n                              <input class=\"dgm-input\" type=\"text\" v-model=\"searchDgmVal\"  placeholder=\"关键字\" @keyup.enter=\"searchDgm()\">\r\n                              <span class=\"search-icon\" @click=\"searchDgm()\"><i class=\"iconfont icon-zhongzi-sousuo\"></i></span>\r\n                          </div>\r\n                          <span class=\"dgm-span\">已绑定采集器</span>\r\n                      </div>\r\n                  </div>\r\n                  <!--    机组列表  -->\r\n                  <table class=\"dgm-table\" v-if=\"folderSelected.split('_')[1]==0 || folderSelected.split('_')[1]==null || folderSelected.split('_')[1]==3\">\r\n                      <thead>\r\n                      <tr>\r\n                          <th>机组名称</th>\r\n                          <th>ID</th>\r\n                          <th>IP</th>\r\n                          <th>类型</th>\r\n                          <th>操作</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr v-for=\"(dgm,index) in resultDgmList\" :key=\"index\" @click=\"chooseMachine(folderSelected.split('_')[1],dgm.machine_id,index,dgm.m_type)\" :class=\"activeClass.index.includes(index) || (activeClass.flag && activeClass.index.includes(index)) ? 'active':''\">\r\n                          <td>{{dgm.machine_name}}</td>\r\n                          <td>{{dgm.dgm!='' ? dgm.dgm.dgm_id : ''}}</td>\r\n                          <td>{{dgm.dgm!='' ? dgm.dgm.dgm_ip : ''}}</td>\r\n                          <td>{{dgm.dgm!='' ? dgm.dgm.dgm_type_name : ''}}</td>\r\n                          <td><button :class=\"['move-btn', { 'disable_btn': dgm.dgm==''}]\" @click=\"unbindDgm(dgm.dgm.dgm_id,dgm.machine_id);\" :disabled=\"dgm.dgm==''\">解绑</button></td>\r\n                      </tr>\r\n                      </tbody>\r\n                  </table>\r\n                  <!-- 子级列表 （水泥的机泵、tms的车厢）-->\r\n                  <div class=\"bindingServer\" v-if=\"folderSelected.split('_')[1]!=0 && folderSelected.split('_')[1]!=3\">\r\n                      <ul class='tableTitle'>\r\n                          <li v-for=\"title in pumpHeaderList\">{{title}}</li>\r\n                      </ul>\r\n                      <ul class='tableBody'>\r\n                          <li class='tableRow' ref='tableRow' v-for=\"(dgm,index) in resultDgmList\" :key=\"index\" @click=\"chooseMachine(folderSelected.split('_')[1],dgm.machine_id,index,dgm.m_type)\" :class=\"activeClass.index.includes(index) || (activeClass.flag && activeClass.index.includes(index)) ? 'active':''\">\r\n                              <div class='machineName' :style='setStyle(dgm)' :title=\"dgm.pump_name\">{{dgm.pump_name}}</div>\r\n                              <div class='machineName' :style='setStyle(dgm)' :title=\"dgm.machine_name\">{{dgm.machine_name}}</div>\r\n                              <div class='machineBindServer'>\r\n                                  <ul class='bindServer' v-if=\"dgm.dgmList==''\">\r\n                                      <li></li><li></li><li></li><li></li>\r\n                                  </ul>\r\n                                  <ul class='bindServer' v-for=\"item in dgm.dgmList\" :key=\"item.dgm_id\">\r\n                                      <li :title=\"item.dgm_id\">{{item.dgm_id}}</li>\r\n                                      <li :title=\"item.dgm_ip\">{{item.dgm_ip}}</li>\r\n                                      <li :title=\"item.dgm_type_name\">{{item.dgm_type_name}}</li>\r\n                                      <li :title=\"item.ch_used\">{{item.ch_used}}</li>\r\n                                  </ul>\r\n                              </div>\r\n                              <div class=\"fixWidth\">\r\n                                  <ul>\r\n                                      <li class='untying' v-if=\"dgm.dgmList==''\">\r\n                                          <button :class=\"['move-btn', { 'disable_btn': dgm.dgmList==''}]\" @click=\"editDgm(item.ch_list,dgm.machine_id,item.dgm_id,dgm.ch_class,item.dgm_type);\" :disabled=\"dgm.dgmList==''\">选择</button>\r\n                                      </li>\r\n                                      <li class='untying' v-for=\"item in dgm.dgmList\">\r\n                                          <button :class=\"['move-btn', { 'disable_btn': item=='' || item.ch_list.length==0}]\" @click=\"editDgm(item.ch_list,dgm.machine_id,item.dgm_id,dgm.ch_class,item.dgm_type);\" :disabled=\"item==''|| item.ch_list.length==0\">选择</button>\r\n                                      </li>\r\n                                  </ul>\r\n                              </div>\r\n                              <div class=\"fixWidth\">\r\n                                  <ul>\r\n                                      <li class='untying untyingLast' v-if=\"dgm.dgmList==''\">\r\n                                          <button :class=\"['move-btn', { 'disable_btn': dgm.dgmList==''}]\" @click=\"unbindDgm(item.dgm_id,dgm.machine_id);\" :disabled=\"dgm.dgmList==''\">解绑</button>\r\n                                      </li>\r\n                                      <li  class='untying untyingLast' v-for=\"item in dgm.dgmList\">\r\n                                          <button :class=\"['move-btn', { 'disable_btn': item==''}]\" @click=\"unbindDgm(item.dgm_id,dgm.machine_id);\" :disabled=\"item==''\">解绑</button>\r\n                                      </li>\r\n                                  </ul>\r\n                              </div>\r\n                          </li>\r\n                      </ul>\r\n                  </div>\r\n                  <!-- 同步操作-->\r\n                  <div class=\"synchronize\">\r\n                      <div class=\"syncDiv\">\r\n                          <button class=\"sync-btn\" @click=\"isAlertSync\" :disabled=\"force_type\">选择同步类型</button>\r\n                      </div>\r\n                      <div class=\"syncDiv\">\r\n                          <span class=\"syncLable\">基准对象</span>\r\n                          <select class=\"typeSelect\" v-model=\"selectedObj\" @change=\"getSycObj(selectedObj)\">\r\n                              <option v-for=\"mac in allMacList\" :value=\"mac.mac_id+'_'+mac.m_type\">{{mac.mac_me}}</option>\r\n                          </select>\r\n                      </div>\r\n                      <div class=\"syncDiv\">\r\n                          <input type=\"checkbox\" class=\"checkbox\" v-model=\"force_type\" id=\"force_type\">\r\n                          <label for=\"force_type\">强制导出</label>\r\n                      </div>\r\n                      <button class=\"edit-btn\" @click=\"sycMachine\">同步</button>\r\n                  </div>\r\n                  <!--  编辑弹窗 /-->\r\n                  <div class=\"edit-block\" id=\"edit-block\" v-show=\"editStatus\">\r\n                      <div class=\"edit-header\">\r\n                          <span class=\"edit-name\">绑定子级</span>\r\n                          <i class=\"iconfont icon-zhongzi-guanbi close-icon\" @click=\"closeEdit()\"></i>\r\n                      </div>\r\n                      <div class=\"edit-list\">\r\n                          <ul>\r\n                              <li class=\"channel-item\" v-for=\"item in ch_lists\" v-show=\"Number(chooseTreeRoot)===1 || Number(chooseTreeRoot)===-1\">\r\n                                  <div class=\"channel-div\">\r\n                                      <input :id=\"item.ch_type + '_' + item.ch_type_name\" @click=\"checkAll(item)\" v-model=\"item.status\" :value=\"item.ch_type\" type=\"checkbox\">\r\n                                      <label :for=\"item.ch_type + '_' + item.ch_type_name\">{{item.ch_type_name}}</label>\r\n                                  </div>\r\n                                  <ul>\r\n                                      <li v-for=\"chItem in item.ch_type_list\">\r\n                                          <div class=\"channel-div2\">\r\n                                              <input :id=\"chItem.ch_id + '_' + chItem.ch_name\" v-model=\"chItem.status\" :value=\"chItem.ch_type\" @click=\"checkMe(chItem.ch_type,chItem.status,chItem.ch_id,item,chItem.same_pre,ch_lists)\" type=\"checkbox\">\r\n                                              <label :for=\"chItem.ch_id + '_' + chItem.ch_name\">{{chItem.ch_name}}</label>\r\n                                          </div>\r\n                                      </li>\r\n                                  </ul>\r\n                              </li>\r\n                              <li class=\"channel-item\" v-for=\"(value, key, index) in tms_ch_list\" v-show=\"Number(chooseTreeRoot)===2\">\r\n                                  <div class=\"channel-div\">\r\n                                      <input :id=\"value.ch_type_name\" @click=\"checkAllTms(value)\"  v-model=\"value.status\" type=\"checkbox\">\r\n                                      <label :for=\"value.ch_type_name\">{{value.ch_type_name}}</label>\r\n                                  </div>\r\n                                  <ul>\r\n                                      <li v-for=\"chItem in value.ch_type_list\">\r\n                                          <div class=\"channel-div2\">\r\n                                              <input :id=\"chItem.ch_id + '_' + chItem.ch_name\" v-model=\"chItem.status\"  type=\"checkbox\" disabled=\"disabled\">\r\n                                              <label :for=\"chItem.ch_id + '_' + chItem.ch_name\">{{chItem.ch_name}}</label>\r\n                                          </div>\r\n                                      </li>\r\n                                  </ul>\r\n                              </li>\r\n                          </ul>\r\n                      </div>\r\n                      <div class=\"edit-controls\">\r\n                          <button class=\"fail-btn\" @click=\"closeEdit()\">取消</button>\r\n                          <button class=\"ok-btn\" @click=\"bindChannel()\">确定</button>\r\n                      </div>\r\n                  </div>\r\n                  <!--  同步类型选择弹窗-->\r\n                  <div v-show=\"isAlertSyncType\" id='alertBox3'>\r\n                      <div class='alertUser'>\r\n                          <div class='alertUserTitle'>\r\n                              同步类型选择\r\n                              <i @click='closeAlertSyncType' class='iconfont icon-zhongzi-guanbi closeAlertUser'></i>\r\n                          </div>\r\n                          <div class=\"alertCont\">\r\n                              <div class=\"group\" v-for=\"item in sycTypeObj\">\r\n                                  <input :id=\"item.type\" v-model=\"item.status\" :value=\"item.value\" type=\"checkbox\" v-on:change.stop=\"checkItemType(item,sycTypeObj)\" :disabled=\"item.readOnly\">\r\n                                  <label :for=\"item.type\">{{item.text}}</label>\r\n                                  <div class=\"group\" v-for=\"childItem in item.child\">\r\n                                      <input :id=\"childItem.type+'_'+item.type\" v-model=\"childItem.status\" :value=\"childItem.value\" type=\"checkbox\" v-on:change.stop=\"checkType(item,childItem)\">\r\n                                      <label :for=\"childItem.type+'_'+item.type\">{{childItem.text}}</label>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <div class=\"alertFoot\">\r\n                              <button class=\"sure-btn\" @click=\"getSycType\">确定</button>\r\n                              <button class=\"quit-btn\" @click='closeAlertSyncType'>取消</button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"dgm-right\">\r\n                  <div class=\"dgm-header\">\r\n                      <div class=\"dgm-folder clearfloat\">\r\n                          <button class=\"addDgm-btn\" @click=\"openAlertDgm\">创建采集器</button>\r\n                          <button class=\"addDgm-btn\" @click=\"refreshDgm\">刷新</button>\r\n                          <div class=\"dgm-search\">\r\n                              <input class=\"dgm-input\" type=\"text\" v-model=\"searchVal\"  placeholder=\"关键字\" @keyup.enter=\"searchUnbindDgm()\">\r\n                              <span class=\"search-icon\" @click=\"searchUnbindDgm()\"><i class=\"iconfont icon-zhongzi-sousuo\"></i></span>\r\n                          </div>\r\n                          <span class=\"dgm-span\">可绑定采集器</span>\r\n                      </div>\r\n                  </div>\r\n                  <table class=\"dgm-table\">\r\n                      <thead>\r\n                      <tr>\r\n                          <th>ID</th>\r\n                          <th>IP</th>\r\n                          <th class=\"th_dgmType\">类型</th>\r\n                          <th>操作</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr v-for=\"(item,index) in unbindDgmList\" :key=\"index\" @click=\"active(index)\" :class=\"unbindActiveClass == index ? 'active':''\">\r\n                          <td>{{item.dgm_id}}</td>\r\n                          <td>{{item.dgm_ip}}</td>\r\n                          <td>{{item.dgm_type_name}}</td>\r\n                          <td>\r\n                              <button class=\"move-btn\" @click=\"bindDgm(item.dgm_id,item.dgm_type,item);\">绑定</button>\r\n                              <button class=\"move-btn deleteBtn\" @click=\"deleteDgm(item.dgm_id,item.dgm_type,item);\">删除</button>\r\n                          </td>\r\n                      </tr>\r\n                      </tbody>\r\n                  </table>\r\n                  <!-- 新增采集器弹窗-->\r\n                  <div v-show='isAlertDgm' id='alertBox'>\r\n                      <div class='alertUser'>\r\n                          <div class='alertUserTitle'>\r\n                              创建采集器\r\n                              <i @click='closeAlertDgm' class='iconfont icon-zhongzi-guanbi closeAlertUser'></i>\r\n                          </div>\r\n                          <div class=\"alertCont\">\r\n                              <div class=\"inputGroup\">\r\n                                  <span class=\"dgmLable\">ID:</span>\r\n                                  <input class=\"dgmInput\" id=\"addDgmId\" type=\"number\" v-model=\"addDgmId\" @input=\"changeNum\" ref=\"addDgmId\">\r\n                              </div>\r\n                              <div class=\"inputGroup\">\r\n                                  <span class=\"dgmLable\">IP:</span>\r\n                                  <input class=\"dgmInput\" id=\"addDgmIp\" type=\"text\" v-model=\"addDgmIp\">\r\n                              </div>\r\n                              <div class=\"inputGroup\">\r\n                                  <span class=\"dgmLable\">类型:</span>\r\n                                  <select class=\"dgmSelect\" id=\"addDgmType\" v-model=\"selectDgmTypeVal\">\r\n                                      <option v-for=\"itemType in dgmTypeList\" :value=\"itemType.value\">{{itemType.text}}</option>\r\n                                  </select>\r\n                              </div>\r\n                              <div class=\"inputGroup\" v-show=\"selectDgmTypeVal===3\">\r\n                                  <span class=\"dgmLable\">通道类型:</span>\r\n                                  <select class=\"dgmSelect\" id=\"addChType\" v-model=\"selectChTypeVal\">\r\n                                      <option v-for=\"itemType in chTypeList\" :value=\"itemType.value\">{{itemType.text}}</option>\r\n                                  </select>\r\n                              </div>\r\n                              <div class=\"inputGroup\" v-show=\"selectDgmTypeVal===3\">\r\n                                  <span class=\"dgmLable\">量程类型:</span>\r\n                                  <select class=\"dgmSelect\" id=\"addRangeType\" v-model=\"selectRangeTypeVal\">\r\n                                      <option v-for=\"itemType in rangeTypeList\" :value=\"itemType.value\">{{itemType.text}}</option>\r\n                                  </select>\r\n                              </div>\r\n                              <div class=\"inputGroup\" v-show=\"selectDgmTypeVal===2\">\r\n                                  <span class=\"dgmLable\">量程类型:</span>\r\n                                  <select class=\"dgmSelect\" id=\"addOptionType\" v-model=\"selectOptionTypeVal\">\r\n                                      <option v-for=\"itemType in optionTypeList\" :value=\"itemType.value\">{{itemType.text}}</option>\r\n                                  </select>\r\n                              </div>\r\n                          </div>\r\n                          <div class=\"alertFoot\">\r\n                              <button class=\"sure-btn\" @click=\"addDgmInfo\">确定</button>\r\n                              <button class=\"quit-btn\" @click='closeAlertDgm'>取消</button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import MyContentTitle from 'components/common/MyContentTitle';\r\n    import {compareName, cloneObj} from \"@/utils/utils\";\r\n    export default {\r\n        name: \"DgmBind\",\r\n        props:[],\r\n        data:function(){\r\n            return {\r\n                title:'采集器绑定',\r\n                folderList: [],//组织列表\r\n                dgmList: [],//机组采集器列表\r\n                origionDgmList: [],//原始的机组采集器列表\r\n                ch_lists: [],//通道列表\r\n                tms_ch_list:{},//tms的通道列表\r\n                folderSelected: '',//选中的组织\r\n                editStatus: false,//编辑弹窗状态\r\n                checkStatus: false,//查看弹窗状态\r\n                searchVal: \"\",//搜索框中的值\r\n                searchDgmVal: \"\",//机组采集器列表搜索值\r\n                unbindDgmList: [],//渲染的未绑定传感器\r\n                origionUnbindDgmList: [],//原始的未绑定采集器\r\n                activeClass: {\r\n                    index: [],\r\n                    flag: false,\r\n                },//已绑定采集器选中的tr绑定active\r\n                unbindActiveClass: -1,//可绑定采集器选中的tr绑定active\r\n                chooseMachineId: \"\",//选中的机组id\r\n                chooseTreeRoot: '',//选中的机组所在系统：0风电，1水泥\r\n                chooseDgmType: [],//选中机组下绑定的采集器类型\r\n                checkList: [],\r\n                changeChaList: {},//编辑通道\r\n                pumpHeaderList: [\"子级名称\", \"机组名称\", \"ID\", \"IP\", \"类型\", \"已绑子级通道\", \"绑定子级\", \"操作\"],//子级采集器绑定的表头\r\n                sycTypeObj: [//同步类型选择对象列表\r\n                    {type:1,text:\"机组设置\",status:true,readOnly:false,child:[]},\r\n                    {type:5,text:\"线路设置\",status:true,readOnly:false,child:[]},\r\n                    {type:2,text:\"测点设置\",status:true,readOnly:false,child:[]},\r\n                    {type:3,text:\"报警设置\",status:true,readOnly:false,child:[]},\r\n                    {type:4,text:\"采集器设置\",status:true,readOnly:false,child:[\r\n                            {type: 1, text: \"DGU2000V1\",status:true},\r\n                            {type: 2, text: \"DGU2200\",status:true},\r\n                            {type: 3, text: \"DGU2000V2\",status:true},\r\n                            {type: 4, text: \"MHD\",status:true},\r\n                            {type: 5, text: \"DGU2600\",status:true},\r\n                            {type: 6, text: \"E821\",status:true},\r\n                            {type: 7, text: \"TMU2000\",status:true},\r\n                            {type: 8, text: \"WHD\",status:true},\r\n                            {type: 9, text: \"DGU2000E\",status:true},\r\n                            {type: 10, text: \"WL9100\",status:true},\r\n                            {type: 13, text: \"KJ5000\",status:true},\r\n                        ]},\r\n                ],\r\n                selectedType:[],//所选择的同步类型列表\r\n                selectedSycMacList:[],//所选择的需要同步的机组列表\r\n                allMacList:[],//所有可选的\r\n                selectedObj:\"\"+'_'+\"\",//所选择的基准对象\r\n                isAlertDgm: false,//创建采集器弹窗\r\n                dgmTypeList:[\r\n                    {value: -1, text: \"--请选择--\"},\r\n                    {value: 1, text: \"DGU2000V1\"},\r\n                    {value: 2, text: \"DGU2200\"},\r\n                    {value: 3, text: \"DGU2000V2\"},\r\n                    {value: 4, text: \"MHD\"},\r\n                    {value: 5, text: \"DGU2600\"},\r\n                    {value: 6, text: \"E821\"},\r\n                    {value: 7, text: \"TMU2000\"},\r\n                    {value: 8, text: \"WHD\"},\r\n                    {value: 9, text: \"DGU2000E\"},\r\n                    {value: 10, text: \"WL9100\"},\r\n                    {value: 13, text: \"KJ5000\"},\r\n                ],//采集器列表\r\n                selectDgmTypeVal:'',//所选择的采集器类型\r\n                addDgmId:\"\",//创建的采集器ID\r\n                addDgmIp:\"\",//创建的采集器IP\r\n                chooseDgmTypeList:[],//过滤之后的采集器类型列表\r\n                isAlertSyncType:false,//同步类型选择弹窗\r\n                seDgmTypeList:[],//所选择的需要同步的采集器列表\r\n                chTypeList:[//通道类型下拉选项\r\n                    {value:0,text:'全16通道'},\r\n                    {value:1,text:'全8通道'},\r\n                    {value:2,text:'后8通道'},\r\n                    {value:3,text:'9通道'},\r\n                ],\r\n                selectChTypeVal:0,//通道类型默认选中全16通道\r\n                rangeTypeList:[//量程类型下拉选项\r\n                    {value:0,text:'普通4量程'},\r\n                    {value:1,text:'高精度多量程'},\r\n                ],\r\n                selectRangeTypeVal:1,//量程类型默认选中高精度多量程\r\n                optionTypeList:[//叶轮类型下拉选项  '0': '温度(WiFi模式)','1':'过程量(WiFi模式)','2':'温度(zigbee模式)','3':'过程量(zigbee模式)'\r\n                    {value:0,text:'温度(WiFi模式)'},\r\n                    {value:1,text:'过程量(WiFi模式)'},\r\n                    {value:2,text:'温度(zigbee模式)'},\r\n                    {value:3,text:'过程量(zigbee模式)'},\r\n                ],\r\n                selectOptionTypeVal:1,//叶轮类型默认选中高精度多量程\r\n                force_type:1,//是否强制导出，1是，0否\r\n                line_type:1,//是否选择线路设置，1是，0否\r\n            }\r\n\r\n        },\r\n        components:{\r\n            MyContentTitle\r\n        },\r\n        created(){\r\n            this.getAllUnbindDgm();\r\n            this.selectDgmTypeVal = this.dgmTypeList[0].value;\r\n        },\r\n        mounted: function(){\r\n            this.getFirstDgmData();\r\n            this.getAllMachine();\r\n        },\r\n        computed: {\r\n            resultDgmList: function () {\r\n                return this.dgmList.sort(compareName('machine_name'));\r\n            },\r\n            sortFolderList: function () {\r\n                return this.folderList.sort(compareName('folderName'));\r\n            }\r\n        },\r\n        methods: {\r\n            //选择同步类型子类勾选框点击事件\r\n            checkType(item, childItem) {\r\n                let flag = 0;\r\n                let trueFlag = 0;\r\n                for (let i = 0; i < item.child.length; i++) {\r\n                    if (!item.child[i].status) {\r\n                        flag++;\r\n                    }\r\n                    if (item.child[i].status) {\r\n                        trueFlag++;\r\n                    }\r\n                }\r\n                if (flag == item.child.length) {\r\n                    item.status = false;\r\n                }\r\n                if (trueFlag > 0) {\r\n                    item.status = true;\r\n                }\r\n\r\n            },\r\n            //选择同步类型父类勾选框点击事件\r\n            checkItemType(item, sycTypeObj) {\r\n                if (item.type == 2) {\r\n                    for (let i = 0; i < sycTypeObj.length; i++) {\r\n                        if (item.status && sycTypeObj[i].type === 1) {\r\n                            sycTypeObj[i].status = true;\r\n                        } else if (item.status && sycTypeObj[i].type === 3 && parseInt(this.selectedObj.split('_')[1]) > 0) {\r\n                            sycTypeObj[i].status = true;\r\n                        } else if (!item.status && sycTypeObj[i].type === 3) {\r\n                            sycTypeObj[i].status = false;\r\n                        }\r\n                    }\r\n                } else if (item.type == 3 && item.status) {\r\n                    for (let i = 0; i < sycTypeObj.length; i++) {\r\n                        if (sycTypeObj[i].type === 1 || sycTypeObj[i].type === 2) {\r\n                            sycTypeObj[i].status = true;\r\n                        }\r\n                    }\r\n                } else if (item.type === 1 && !item.status) {\r\n                    for (let i = 0; i < sycTypeObj.length; i++) {\r\n                        if (sycTypeObj[i].type === 2 || sycTypeObj[i].type === 3 || sycTypeObj[i].type === 5) {\r\n                            sycTypeObj[i].status = false;\r\n                        }\r\n                    }\r\n                } else if (item.type === 4 && item.status) {\r\n                    for (let i = 0; i < item.child.length; i++) {\r\n                        item.child[i].status = true;\r\n                    }\r\n                } else if (item.type === 4 && !item.status) {\r\n                    for (let i = 0; i < item.child.length; i++) {\r\n                        item.child[i].status = false;\r\n                    }\r\n                } else if(item.type === 5) {\r\n                    this.line_type = item.status?1:0;\r\n                    if(item.status){\r\n                        for (let i = 0; i < sycTypeObj.length; i++) {\r\n                            if (sycTypeObj[i].type === 1) {\r\n                                sycTypeObj[i].status = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            //限定采集器最多8位\r\n            changeNum() {\r\n                //限制长度\r\n                if (this.addDgmId.length > 8) {\r\n                    this.addDgmId = this.addDgmId.slice(0, 8)\r\n                }\r\n                if (this.addDgmId.length == 8) {\r\n                    this.$refs.addDgmId.classList.remove(\"errInput\");\r\n                }\r\n            },\r\n            //创建采集器弹窗\r\n            openAlertDgm() {\r\n                this.isAlertDgm = true;\r\n            },\r\n            //关闭弹窗\r\n            closeAlertDgm() {\r\n                this.isAlertDgm = false;\r\n            },\r\n            //关闭过滤采集器弹窗\r\n            closeAlertDgmType() {\r\n                this.isAlertDgmType = false;\r\n            },\r\n            //创建采集器提交\r\n            addDgmInfo() {\r\n                let that = this;\r\n                var token = sessionStorage.getItem('token');\r\n                let paramObj = null;\r\n                if (that.addDgmId == '' || that.addDgmIp == '' || that.selectDgmTypeVal == -1) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '请将信息填写完整',\r\n                        button: \"确认\",\r\n                    });\r\n                    return false;\r\n                }\r\n                else if(that.addDgmId=='00000000'){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '采集器ID不能为8个0',\r\n                        button: \"确认\",\r\n                    });\r\n                    that.$refs.addDgmId.classList.add(\"errInput\");\r\n                    return false;\r\n                }\r\n                else if (that.addDgmId.length < 8) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '采集器ID需为8位数字',\r\n                        button: \"确认\",\r\n                    });\r\n                    that.$refs.addDgmId.classList.add(\"errInput\");\r\n                    return false;\r\n                } else {\r\n                    that.$refs.addDgmId.classList.remove(\"errInput\");\r\n                    paramObj = {\r\n                        dgm_id: that.addDgmId,\r\n                        dgm_ip: that.addDgmIp,\r\n                        dgm_type: that.selectDgmTypeVal,\r\n                        hw_ch_type: that.selectChTypeVal,\r\n                        hw_range_type: that.selectRangeTypeVal,\r\n                        hw_options: that.selectOptionTypeVal,\r\n                    };\r\n                    this.$axios.post('createFakeDgm', paramObj)\r\n                        .then(res => {\r\n                            that.addDgmId = \"\";\r\n                            that.addDgmIp = \"\";\r\n                            that.selectDgmTypeVal = -1;\r\n                            if (res.msg == 0) {\r\n                                that.getAllUnbindDgm();\r\n                                that.isAlertDgm = false;\r\n                            } else if (res.msg == 1) {\r\n                                console.log(\"参数为空\");\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '创建失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                                that.isAlertDgm = false;\r\n                            } else if (res.msg == 2) {\r\n                                console.log(\"后台运行错误\");\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '创建失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                                that.isAlertDgm = false;\r\n                            } else if (res.msg == 3) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '该ID号的采集器已存在',\r\n                                    button: \"确认\",\r\n                                });\r\n                                return false;\r\n                            }\r\n                            ;\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log('请求错误',err)\r\n                        })\r\n                }\r\n            },\r\n\r\n            //全选\r\n            checkAll: function (item) {\r\n                item.status = !item.status;\r\n                if (item.status) {\r\n                    for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                        item.ch_type_list[i].status = true;\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                        item.ch_type_list[i].status = false;\r\n                    }\r\n                }\r\n\r\n            },\r\n            //tms通道全选\r\n            checkAllTms(item){\r\n                item.status = !item.status;\r\n                if (item.status) {\r\n                    for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                        item.ch_type_list[i].status = true;\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                        item.ch_type_list[i].status = false;\r\n                    }\r\n                }\r\n                this.$forceUpdate();\r\n            },\r\n            //获取所有的机组列表\r\n            getAllMachine() {\r\n                let that = this;\r\n                var token = sessionStorage.getItem('token');\r\n                let paramObj = null;\r\n                paramObj = {\r\n                    t_ids: this.$store.state.tids\r\n                };\r\n                this.$axios.post('queryMachine', paramObj)\r\n                    .then(res => {\r\n                        if (res != undefined && res.length > 0) {\r\n                            that.allMacList = res.sort(compareName('mac_me'));;\r\n                            that.selectedObj = that.allMacList[0].mac_id + '_' + that.allMacList[0].m_type;\r\n                            if (parseInt(that.allMacList[0].m_type) > 0) {\r\n                                that.sycTypeObj[2].readOnly = true;\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误',err)\r\n                    })\r\n            },\r\n            //选择同步类型\r\n            getSycType() {\r\n                this.seDgmTypeList.length = 0;\r\n                this.selectedType.length = 0;\r\n                this.isAlertSyncType = false;\r\n\r\n                for (let j = 0; j < this.sycTypeObj.length; j++) {\r\n                    if (this.sycTypeObj[j].status && this.sycTypeObj[j].type!=5) {\r\n                        this.selectedType.push(this.sycTypeObj[j].type);\r\n                    }\r\n                    if(this.sycTypeObj[j].type==5){\r\n                        this.line_type = this.sycTypeObj[j].status?1:0;\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.sycTypeObj[4].child.length; i++) {\r\n                    if (this.sycTypeObj[4].child[i].status) {\r\n                        this.seDgmTypeList.push(this.sycTypeObj[4].child[i].type);\r\n                    }\r\n                }\r\n            },\r\n            //选择同步对象\r\n            getSycObj(selectedObj) {\r\n                this.selectedObj = selectedObj;\r\n                if (parseInt(this.selectedObj.split('_')[1]) > 0) {\r\n                    this.sycTypeObj[3].readOnly = true;\r\n                }\r\n            },\r\n            //同步弹窗按钮\r\n            isAlertSync() {\r\n                this.isAlertSyncType = true;\r\n            },\r\n            //关闭同步类型弹窗\r\n            closeAlertSyncType() {\r\n                this.isAlertSyncType = false;\r\n            },\r\n            //点击同步按钮，同步机组数据\r\n            sycMachine() {\r\n                this.getSycType();\r\n                this.force_type?this.force_type=1:this.force_type=0;\r\n                let sycObj = {\r\n                    machine_id: this.selectedObj.split('_')[0],\r\n                    m_type: this.selectedObj.split('_')[1],\r\n                    type_list: this.selectedType,\r\n                    param_list: this.selectedSycMacList,\r\n                    dgm_type_list: this.seDgmTypeList,\r\n                    force_type: this.force_type,\r\n                    line_type: this.line_type,\r\n                };\r\n                if (sycObj.param_list.length == 0) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '请选择需要同步的机组',\r\n                        button: \"确认\",\r\n                    });\r\n                } else if (sycObj.type_list.length == 0) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '请选择同步类型',\r\n                        button: \"确认\",\r\n                    });\r\n                } else {\r\n                    this.$axios.post('copyMachine', sycObj)\r\n                        .then(res => {\r\n                            if (res.msg == 0) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '同步成功',\r\n                                    button: \"确认\",\r\n                                });\r\n                            } else if (res.msg == 1) {\r\n                                console.log('参数为空！');\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '同步失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                            } else if (res.msg == 2) {\r\n                                console.log('后台运行错误!');\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '同步失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log('请求错误',err)\r\n                        })\r\n                }\r\n\r\n            },\r\n            // 设置列表高度\r\n            setStyle(item) {\r\n                let l = item.rowspan;\r\n                let h = 42 * l;\r\n                let style = {\r\n                    height: h + 'px',\r\n                    'line-height': h + 'px'\r\n                };\r\n                return style;\r\n            },\r\n            checkMe: function (ch_type, status, ch_id, item,same_pre,ch_lists) {\r\n                status = !status;\r\n                if (status) {\r\n                    var flag = 0;\r\n                    if(same_pre === '-1'){\r\n                        for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                            if (item.ch_type_list[i].ch_id == ch_id) {\r\n                                item.ch_type_list[i].status = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        for (let i = 0; i < item.ch_type_list.length; i++) {\r\n                            if (item.ch_type_list[i].status) {\r\n                                flag++;\r\n                            }\r\n                        }\r\n                        if (flag == item.ch_type_list.length) {\r\n                            item.status = true;\r\n                        } else {\r\n                            item.status = false;\r\n                        }\r\n                    }\r\n                    else{\r\n                        ch_lists.forEach(chTypeItem =>{\r\n                            chTypeItem.ch_type_list.forEach(chTypeList =>{\r\n                                if(chTypeList.same_pre == same_pre){\r\n                                    chTypeList.status = true;\r\n                                }\r\n                            })\r\n                        });\r\n                        ch_lists.forEach(chTypeItem =>{\r\n                            chTypeItem.flag=0;\r\n                            chTypeItem.ch_type_list.forEach(chTypeList =>{\r\n                                if (chTypeList.status) {\r\n                                    chTypeItem.flag++;\r\n                                }\r\n                            })\r\n                        });\r\n\r\n                        ch_lists.forEach(chTypeItem =>{\r\n                            if (chTypeItem.flag == chTypeItem.ch_type_list.length) {\r\n                                chTypeItem.status = true;\r\n                            } else {\r\n                                chTypeItem.status = false;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n                    item.status = false;\r\n                    if(same_pre !=='-1'){\r\n                        ch_lists.forEach(chTypeItem =>{\r\n                            chTypeItem.ch_type_list.forEach(chTypeList =>{\r\n                                if(chTypeList.same_pre == same_pre){\r\n                                    chTypeList.status = false;\r\n                                    chTypeItem.status = false;\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            },\r\n            editDgm: function (ch_list, mac_id, dgm_id, ch_class, dgm_type) {//编辑采集器\r\n                this.editStatus = true;\r\n                this.ch_lists = [];\r\n                if(Number(dgm_type) === 7){//tms采集器按前置处理器进行选择\r\n                    this.tms_ch_list = {};\r\n                    if (ch_list.length > 0) {\r\n                        ch_list.forEach(item =>{\r\n                            if(this.tms_ch_list[item.pre_id]===undefined){\r\n                                this.tms_ch_list[item.pre_id] = {};\r\n                                this.tms_ch_list[item.pre_id].ch_type_list = [];\r\n                            }\r\n                            let obj = {};\r\n                            if (item.ch_class != 0) {\r\n                                this.tms_ch_list[item.pre_id].status= true;\r\n                                obj = {\r\n                                    ch_class: item.ch_class,\r\n                                    ch_id: item.ch_id,\r\n                                    ch_name: item.ch_name,\r\n                                    ch_type: item.ch_type,\r\n                                    same_pre: item.same_pre,\r\n                                    status: true\r\n                                }\r\n                            } else {\r\n                                this.tms_ch_list[item.pre_id].status= false;\r\n                                obj = {\r\n                                    ch_class: item.ch_class,\r\n                                    ch_id: item.ch_id,\r\n                                    ch_name: item.ch_name,\r\n                                    ch_type: item.ch_type,\r\n                                    same_pre: item.same_pre,\r\n                                    status: false\r\n                                }\r\n                            }\r\n                            this.tms_ch_list[item.pre_id].ch_class= ch_class;\r\n                            this.tms_ch_list[item.pre_id].ch_type= item.ch_type;\r\n                            this.tms_ch_list[item.pre_id].dgm_id= dgm_id;\r\n                            this.tms_ch_list[item.pre_id].mac_id= mac_id;\r\n                            this.tms_ch_list[item.pre_id].ch_type_name = '前置' + item.pre_id;\r\n                            this.tms_ch_list[item.pre_id].ch_type_list.push(obj);\r\n                        });\r\n                    }\r\n                    for(let key in this.tms_ch_list){\r\n                        this.tms_ch_list[key].ch_type_list.sort(compareName('ch_name'));\r\n                    }\r\n                    return this.tms_ch_list;\r\n                }\r\n                else{\r\n                    let obj0 = {}, obj1 = {}, obj2 = {}, obj3 = {}, obj4 = {}, obj5 = {}, obj6 = {}, obj7 = {}, obj8 = {},\r\n                        obj9 = {}, obj10 = {}, obj11 = {}, obj12 = {};\r\n                    obj0.ch_type_list = [];\r\n                    obj1.ch_type_list = [];\r\n                    obj2.ch_type_list = [];\r\n                    obj3.ch_type_list = [];\r\n                    obj4.ch_type_list = [];\r\n                    obj5.ch_type_list = [];\r\n                    obj6.ch_type_list = [];\r\n                    obj7.ch_type_list = [];\r\n                    obj8.ch_type_list = [];\r\n                    obj9.ch_type_list = [];\r\n                    obj10.ch_type_list = [];\r\n                    obj11.ch_type_list = [];\r\n                    obj12.ch_type_list = [];\r\n                    if (ch_list.length > 0) {\r\n                        for (let i = 0; i < ch_list.length; i++) {\r\n                            if (ch_list[i].ch_type == 0) {\r\n                                obj0.ch_type_name = \"振动\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj0.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj0.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj0.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj0);\r\n                            } else if (ch_list[i].ch_type == 1) {\r\n                                obj1.ch_type_name = \"过程量\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj1.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj1.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj1.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj1);\r\n                            } else if (ch_list[i].ch_type == 2) {\r\n                                obj2.ch_type_name = \"转速\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj2.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj2.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj2.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj2);\r\n                            } else if (ch_list[i].ch_type == 3) {\r\n                                obj3.ch_type_name = \"数字量\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj3.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj3.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj3.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj3);\r\n                            } else if (ch_list[i].ch_type == 4) {\r\n                                obj4.ch_type_name = \"温度\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj4.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj4.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj4.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj4);\r\n                            } else if (ch_list[i].ch_type == 5) {\r\n                                obj5.ch_type_name = \"外部集成设置\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj5.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj5.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj5.ch_type = ch_list[i].ch_type;\r\n                                if (dgm_type == 4 || dgm_type == 1) {\r\n                                    this.ch_lists.push(obj5);//mhd采集器、v1采集器需要显示外部集成通道\r\n                                } else {\r\n                                    // this.ch_lists.push(obj5);//暂时屏蔽外部集成通道\r\n                                }\r\n                            } else if (ch_list[i].ch_type == 6) {\r\n                                obj6.ch_type_name = \"倾覆\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj6.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj6.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj6.ch_type = ch_list[i].ch_type;\r\n                                // this.ch_lists.push(obj6);//暂时屏蔽倾覆通道\r\n                            } else if (ch_list[i].ch_type == 7) {\r\n                                obj7.ch_type_name = \"工艺量\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj7.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj7.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj7.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj7);\r\n                            } else if (ch_list[i].ch_type == 8) {\r\n                                obj8.ch_type_name = \"螺栓\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj8.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj8.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj8.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj8);\r\n                            } else if (ch_list[i].ch_type == 9) {\r\n                                obj9.ch_type_name = \"法兰\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj9.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj9.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj9.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj9);\r\n                            } else if (ch_list[i].ch_type == 10) {\r\n                                obj10.ch_type_name = \"预处理器\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj10.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj10.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj10.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj10);\r\n                            } else if (ch_list[i].ch_type == 11) {\r\n                                obj11.ch_type_name = \"长采样\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj11.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj11.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj11.ch_type = ch_list[i].ch_type;\r\n                                // this.ch_lists.push(obj11);//暂时将长采样的通道屏蔽\r\n                            } else if (ch_list[i].ch_type == 12) {\r\n                                obj12.ch_type_name = \"mhd\";\r\n                                if (ch_list[i].ch_class != 0) {\r\n                                    obj12.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: true\r\n                                    })\r\n                                } else {\r\n                                    obj12.ch_type_list.push({\r\n                                        ch_class: ch_list[i].ch_class,\r\n                                        ch_id: ch_list[i].ch_id,\r\n                                        ch_name: ch_list[i].ch_name,\r\n                                        ch_type: ch_list[i].ch_type,\r\n                                        same_pre: ch_list[i].same_pre,\r\n                                        status: false\r\n                                    })\r\n                                }\r\n                                obj12.ch_type = ch_list[i].ch_type;\r\n                                this.ch_lists.push(obj12);\r\n                            }\r\n                        }\r\n                        this.ch_lists = this.unique(this.ch_lists);\r\n\r\n                        for (let j = 0; j < this.ch_lists.length; j++) {\r\n                            var flag = 0;\r\n                            // this.ch_lists[j].ch_type_list.sort((a,b)=>{ return a.ch_id-b.ch_id});//将通道id升序排列\r\n                            this.ch_lists[j].ch_type_list.sort(compareName('ch_name'));//将通道名升序排列\r\n                            for (let m = 0; m < this.ch_lists[j].ch_type_list.length; m++) {\r\n                                if (this.ch_lists[j].ch_type_list[m].status) {\r\n                                    flag++;\r\n                                }\r\n                            }\r\n                            if (flag == this.ch_lists[j].ch_type_list.length) {\r\n                                this.ch_lists[j].status = true;\r\n                                this.ch_lists[j].mac_id = mac_id;\r\n                                this.ch_lists[j].dgm_id = dgm_id;\r\n                                this.ch_lists[j].ch_class = ch_class;\r\n                            } else {\r\n                                this.ch_lists[j].status = false;\r\n                                this.ch_lists[j].mac_id = mac_id;\r\n                                this.ch_lists[j].dgm_id = dgm_id;\r\n                                this.ch_lists[j].ch_class = ch_class;\r\n                            }\r\n                        }\r\n                    }\r\n                    return this.ch_lists;\r\n                }\r\n            },\r\n            closeEdit: function () {//关闭采集器弹窗\r\n                this.editStatus = false;\r\n            },\r\n            bindChannel: function () {//绑定通道\r\n                this.changeChaList.ch_list = [];\r\n                if(this.chooseTreeRoot==2){\r\n                    for (let key in  this.tms_ch_list) {\r\n                        let ch_type_list = this.tms_ch_list[key].ch_type_list;\r\n                        for (let j = 0; j < ch_type_list.length; j++) {\r\n                            if (ch_type_list[j].status && ch_type_list[j].ch_class == 0) {\r\n                                this.changeChaList.t_id = this.folderSelected.split('_')[0];\r\n                                this.changeChaList.t_root = this.folderSelected.split('_')[1];\r\n                                this.changeChaList.mac_id = this.tms_ch_list[key].mac_id;\r\n                                this.changeChaList.dgm_id = this.tms_ch_list[key].dgm_id;\r\n                                this.changeChaList.ch_class = this.tms_ch_list[key].ch_class;\r\n                                this.changeChaList.ch_list.push({\r\n                                    \"ch_id\": ch_type_list[j].ch_id,\r\n                                    \"ch_type\": ch_type_list[j].ch_type\r\n                                });\r\n                            } else if (!ch_type_list[j].status && ch_type_list[j].ch_class != 0) {\r\n                                this.changeChaList.t_id = this.folderSelected.split('_')[0];\r\n                                this.changeChaList.t_root = this.folderSelected.split('_')[1];\r\n                                this.changeChaList.mac_id = this.tms_ch_list[key].mac_id;\r\n                                this.changeChaList.dgm_id = this.tms_ch_list[key].dgm_id;\r\n                                this.changeChaList.ch_class = this.tms_ch_list[key].ch_class;\r\n                                this.changeChaList.ch_list.push({\r\n                                    \"ch_id\": ch_type_list[j].ch_id,\r\n                                    \"ch_type\": ch_type_list[j].ch_type,\r\n                                    \"channel_class\": \"0\"\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                else{\r\n                    for (let i = 0; i < this.ch_lists.length; i++) {\r\n                        for (let j = 0; j < this.ch_lists[i].ch_type_list.length; j++) {\r\n                            if (this.ch_lists[i].ch_type_list[j].status && this.ch_lists[i].ch_type_list[j].ch_class == 0) {\r\n                                this.changeChaList.t_id = this.folderSelected.split('_')[0];\r\n                                this.changeChaList.t_root = this.folderSelected.split('_')[1];\r\n                                this.changeChaList.mac_id = this.ch_lists[i].mac_id;\r\n                                this.changeChaList.dgm_id = this.ch_lists[i].dgm_id;\r\n                                this.changeChaList.ch_class = this.ch_lists[i].ch_class;\r\n                                this.changeChaList.ch_list.push({\r\n                                    \"ch_id\": this.ch_lists[i].ch_type_list[j].ch_id,\r\n                                    \"ch_type\": this.ch_lists[i].ch_type_list[j].ch_type\r\n                                });\r\n                            } else if (!this.ch_lists[i].ch_type_list[j].status && this.ch_lists[i].ch_type_list[j].ch_class != 0) {\r\n                                this.changeChaList.t_id = this.folderSelected.split('_')[0];\r\n                                this.changeChaList.t_root = this.folderSelected.split('_')[1];\r\n                                this.changeChaList.mac_id = this.ch_lists[i].mac_id;\r\n                                this.changeChaList.dgm_id = this.ch_lists[i].dgm_id;\r\n                                this.changeChaList.ch_class = this.ch_lists[i].ch_class;\r\n                                this.changeChaList.ch_list.push({\r\n                                    \"ch_id\": this.ch_lists[i].ch_type_list[j].ch_id,\r\n                                    \"ch_type\": this.ch_lists[i].ch_type_list[j].ch_type,\r\n                                    \"channel_class\": \"0\"\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                let that = this;\r\n                if (!$.isEmptyObject(that.changeChaList)) {\r\n                    this.$axios.post('editPumpToDgm', that.changeChaList)\r\n                        .then(res => {\r\n                            that.editStatus = false;\r\n                            if (res.msg == 0) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '编辑成功',\r\n                                    button: \"确认\",\r\n                                });\r\n                                that.dgmList = [];\r\n                                let dgmListOrigion = res.folderInfo.pump_list;\r\n                                var noBgmObj = {};\r\n                                for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                    if (dgmListOrigion[i].dgmList) {\r\n                                        for (let j = 0; j < dgmListOrigion[i].dgmList.length; j++) {\r\n                                            var obj = {};\r\n                                            dgmListOrigion[i].dgmList[j].dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgmList[j].dgm_type);\r\n\r\n                                        }\r\n                                        obj.pump_name = dgmListOrigion[i].pump_name;\r\n                                        obj.pump_id = dgmListOrigion[i].pump_id;\r\n                                        obj.ch_class = dgmListOrigion[i].ch_class;\r\n                                        obj.machine_id = dgmListOrigion[i].machine_id;\r\n                                        obj.machine_name = dgmListOrigion[i].machine_name;\r\n                                        obj.m_type = dgmListOrigion[i].m_type;\r\n                                        obj.dgmList = dgmListOrigion[i].dgmList;\r\n                                        that.dgmList.push(obj);\r\n                                    } else {\r\n                                        noBgmObj.machine_id = dgmListOrigion[i].machine_id;\r\n                                        noBgmObj.machine_name = dgmListOrigion[i].machine_name;\r\n                                        noBgmObj.m_type = dgmListOrigion[i].m_type;\r\n                                        noBgmObj.dgmList = \"\";\r\n                                        that.dgmList.push(noBgmObj);\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } else if (res.msg == 1) {\r\n                                console.log('参数为空！');\r\n                            }\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log('请求错误',err)\r\n                        })\r\n                }\r\n            },\r\n            /*数组去重*/\r\n            unique: function (arr) {\r\n                var res = [arr[0]];\r\n                for (var i = 1; i < arr.length; i++) {\r\n                    var repeat = false;\r\n                    for (var j = 0; j < res.length; j++) {\r\n                        if (arr[i].ch_type == res[j].ch_type) {\r\n                            repeat = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!repeat) {\r\n                        res.push(arr[i]);\r\n                    }\r\n                }\r\n                return res;\r\n            },\r\n            active(index) {\r\n                this.unbindActiveClass = index;  // 把当前点击元素的index，赋值给activeClass\r\n            },\r\n            unbindDgm: function (dgmId, machineId) {\r\n                var that = this;\r\n                var token = sessionStorage.getItem('token');\r\n                var dgmData = {\r\n                    dgm_id: dgmId,\r\n                    machine_id: machineId,\r\n                };\r\n                this.$axios.post('unbindDgm', dgmData)\r\n                    .then(res => {\r\n                        if (res.msg == 0) {\r\n                            swal({\r\n                                title: \"提示\",\r\n                                text: '解绑成功',\r\n                                button: \"确认\",\r\n                            });\r\n                            that.chooseMachineId = '';\r\n                            that.chooseTreeRoot = '';\r\n                            that.activeClass = {\r\n                                index: [],\r\n                                flag: false\r\n                            };//已绑定采集器选中的tr绑定active\r\n                            that.getFolderSelected();\r\n                            that.getAllUnbindDgm();\r\n                        } else if (res.msg == 1) {\r\n                            console.log('参数为空！');\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误',err)\r\n                    })\r\n            },\r\n            //绑定采集器\r\n            bindDgm: function (dgmId, dgmType, item) {\r\n                var that = this;\r\n                var token = sessionStorage.getItem('token');\r\n                if (!that.chooseMachineId) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '请先选择需要绑定的机组',\r\n                        button: \"确认\",\r\n                    });\r\n                }\r\n                /*else if (this.chooseDgmType.indexOf(dgmType) > -1) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '该机组下已经绑定了该类型采集器',\r\n                        button: \"确认\",\r\n                    });\r\n                } */\r\n                else if (parseInt(this.chooseTreeRoot) === 1 && dgmType == 2) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '水泥机组不能绑定该类型采集器',\r\n                        button: \"确认\",\r\n                    });\r\n                } else {\r\n                    var dgmData = {\r\n                        dgm_id: dgmId,\r\n                        machine_id: that.chooseMachineId,\r\n                        updateTime: item.updateTime,//更新时间\r\n                        dgm_name: item.dgm_name,//采集站名称\r\n                        dgm_type: item.dgm_type,// 采集器型号 1:振动采集器V1 DGU2000V1 2.叶轮采集器 DGU2200 3.振动采集器V2 DGU2000V2 4.MHD采集器 MHD 5.螺栓采集器 DGU2600\r\n                        dgm_ip: item.dgm_ip,// 采集器ip\r\n                        dgm_activity: item.dgm_activity,//采集器有效性 0:以绑定 1:未绑定\r\n                        baseInfo: item.baseInfo\r\n                    };\r\n                    this.$axios.post('bindDgm', dgmData)\r\n                        .then(res => {\r\n                            if (res.msg == 0) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '采集器绑定成功',\r\n                                    button: \"确认\",\r\n                                });\r\n                                that.getFolderSelected();\r\n                                that.getAllUnbindDgm();\r\n                            } else if (res.msg == 1) {\r\n                                console.log('参数为空！');\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '采集器绑定失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                            /*else if (res.msg == 3) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '该机组下已经绑定了该类型采集器',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }*/\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log('请求错误',err)\r\n                        })\r\n                }\r\n            },\r\n            //删除采集器\r\n            deleteDgm(dgmId, dgmType, item) {\r\n                let that = this;\r\n                if (item.deleteType === 1) {\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '未注册的采集器不可删除',\r\n                        button: \"确认\",\r\n                    });\r\n                } else {\r\n                    let params = 'dgm_id=' + dgmId;\r\n                    params = JSON.stringify(params);\r\n                    this.$axios.post('deleteDgm', dgmId)\r\n                        .then(res => {\r\n                            if (res.msg == 0) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '采集器删除成功',\r\n                                    button: \"确认\",\r\n                                });\r\n                                that.getAllUnbindDgm();\r\n                            } else if (res.msg == 1) {\r\n                                console.log('参数为空！');\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '采集器删除失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                            else if (res.msg == 2) {\r\n                                console.log('后台错误！');\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '采集器删除失败',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                            else if (res.msg == 3) {\r\n                                swal({\r\n                                    title: \"提示\",\r\n                                    text: '该采集器已绑定机组，不可删除',\r\n                                    button: \"确认\",\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log('请求错误',err)\r\n                        })\r\n                }\r\n\r\n            },\r\n            getFirstDgmData: function () {\r\n                var that = this;\r\n                var token = sessionStorage.getItem('token');\r\n                let paramObj = null;\r\n                paramObj = {\r\n                    t_ids: that.$store.state.tids\r\n                };\r\n                this.$axios.post('queryAllDgmInfo', paramObj)\r\n                    .then(res => {\r\n                        if (res.msg == 0) {\r\n                            if (res.folderInfo.folderList) {\r\n                                that.folderList = res.folderInfo.folderList;\r\n                                that.folderSelected = that.folderList[0].folderId + \"_\" + that.folderList[0].t_root;\r\n                            }\r\n\r\n                            if (that.folderSelected.split('_')[1] == 0 || that.folderSelected.split('_')[1] == null) {\r\n                                let dgmListOrigion = res.folderInfo.dgmList;\r\n                                if (dgmListOrigion != undefined && dgmListOrigion.length > 0) {\r\n                                    for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                        if (dgmListOrigion[i][\"dgm\"]) {\r\n                                            dgmListOrigion[i].dgm.dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgm.dgm_type);\r\n                                        } else {\r\n                                            dgmListOrigion[i].dgm = \"\";\r\n                                        }\r\n                                    }\r\n                                    that.dgmList = dgmListOrigion;\r\n                                }\r\n                            } else if (that.folderSelected.split('_')[1] == 1 || that.folderSelected.split('_')[1] == 2 || that.folderSelected.split('_')[1] == -1) {\r\n                                let dgmListOrigion = res.folderInfo.pump_list;\r\n                                if (dgmListOrigion != undefined && dgmListOrigion.length > 0) {\r\n                                    for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                        if (dgmListOrigion[i].dgmList.length > 0) {\r\n                                            for (let j = 0; j < dgmListOrigion[i].dgmList.length; j++) {\r\n                                                var obj = {};\r\n                                                dgmListOrigion[i].dgmList[j].dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgmList[j].dgm_type);\r\n                                            }\r\n                                            if ('pump_name' in dgmListOrigion[i]) {\r\n                                                obj.pump_name = dgmListOrigion[i].pump_name;\r\n                                                obj.pump_id = dgmListOrigion[i].pump_id;\r\n                                            }\r\n                                            obj.ch_class = dgmListOrigion[i].ch_class;\r\n                                            obj.machine_id = dgmListOrigion[i].machine_id;\r\n                                            obj.machine_name = dgmListOrigion[i].machine_name;\r\n                                            obj.dgmList = dgmListOrigion[i].dgmList;\r\n                                            obj.m_type = dgmListOrigion[i].m_type;\r\n                                            obj.rowspan = dgmListOrigion[i].dgmList.length;\r\n                                            that.dgmList.push(obj);\r\n                                        } else {\r\n                                            var noBgmObj = {};\r\n                                            if ('pump_name' in dgmListOrigion[i]) {\r\n                                                noBgmObj.pump_name = dgmListOrigion[i].pump_name;\r\n                                                noBgmObj.pump_id = dgmListOrigion[i].pump_id;\r\n                                            }\r\n                                            noBgmObj.machine_id = dgmListOrigion[i].machine_id;\r\n                                            noBgmObj.machine_name = dgmListOrigion[i].machine_name;\r\n                                            noBgmObj.m_type = dgmListOrigion[i].m_type;\r\n                                            noBgmObj.rowspan = 1;\r\n                                            noBgmObj.dgmList = \"\";\r\n                                            that.dgmList.push(noBgmObj);\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                            that.originDgmList = cloneObj(that.dgmList, true);\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误',err)\r\n                    })\r\n            },\r\n            //采集器类型与采集器名称的对应关系\r\n            typeTodgmName(dgm_type){\r\n                let dgm_type_name = '';\r\n                switch (parseInt(dgm_type)) {\r\n                    case 1:\r\n                        dgm_type_name = \"DGU2000V1\";\r\n                        break;\r\n                    case 2:\r\n                        dgm_type_name = \"DGU2200\";\r\n                        break;\r\n                    case 3:\r\n                        dgm_type_name = \"DGU2000V2\";\r\n                        break;\r\n                    case 4:\r\n                        dgm_type_name = \"MHD\";\r\n                        break;\r\n                    case 5:\r\n                        dgm_type_name = \"DGU2600\";\r\n                        break;\r\n                    case 6:\r\n                        dgm_type_name = \"E821\";\r\n                        break;\r\n                    case 7:\r\n                        dgm_type_name = \"TMU2000\";\r\n                        break;\r\n                    case 8:\r\n                        dgm_type_name = \"WHD\";\r\n                        break;\r\n                    case 9:\r\n                        dgm_type_name = \"DGU2000E\";\r\n                        break;\r\n                    case 10:\r\n                        dgm_type_name = \"WL9100\";\r\n                        break;\r\n                    case 13:\r\n                        dgm_type_name = \"KJ5000\";\r\n                        break;\r\n                    default:\r\n                        dgm_type_name = \"DGU2000V1\";\r\n                        break;\r\n                }\r\n                return dgm_type_name;\r\n            },\r\n            getFolderSelected: function () {\r\n                //获取选中的优惠券\r\n                var folderSelectedObj = {\r\n                    \"t_id\": this.folderSelected.split('_')[0],\r\n                    \"t_root\": this.folderSelected.split('_')[1]\r\n                };\r\n                var that = this;\r\n                that.dgmList = [];\r\n                var token = sessionStorage.getItem('token');\r\n                this.$axios.post('queryDgmInfo', folderSelectedObj)\r\n                    .then(res => {\r\n                        if (res.msg == 0) {\r\n                            let dgmListOrigion;\r\n\r\n                            if (\"dgmList\" in res.folderInfo) {\r\n                                dgmListOrigion = res.folderInfo.dgmList;\r\n                                if (dgmListOrigion.length > 0) {\r\n                                    for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                        if (dgmListOrigion[i][\"dgm\"]) {\r\n                                            dgmListOrigion[i].dgm.dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgm.dgm_type);\r\n                                        } else {\r\n                                            dgmListOrigion[i].dgm = \"\";\r\n                                        }\r\n                                    }\r\n                                }\r\n                                that.dgmList = dgmListOrigion;\r\n                            } else if (\"pump_list\" in res.folderInfo) {\r\n                                dgmListOrigion = res.folderInfo.pump_list;\r\n                                for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                    if (dgmListOrigion[i].dgmList.length > 0) {\r\n                                        for (let j = 0; j < dgmListOrigion[i].dgmList.length; j++) {\r\n                                            var obj = {};\r\n                                            dgmListOrigion[i].dgmList[j].dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgmList[j].dgm_type);\r\n                                        }\r\n                                        if (\"pump_name\" in dgmListOrigion[i]) {\r\n                                            obj.pump_name = dgmListOrigion[i].pump_name;\r\n                                            obj.pump_id = dgmListOrigion[i].pump_id;\r\n                                        }\r\n                                        obj.ch_class = dgmListOrigion[i].ch_class;\r\n                                        obj.machine_id = dgmListOrigion[i].machine_id;\r\n                                        obj.machine_name = dgmListOrigion[i].machine_name;\r\n                                        obj.dgmList = dgmListOrigion[i].dgmList;\r\n                                        obj.m_type = dgmListOrigion[i].m_type;\r\n                                        obj.rowspan = dgmListOrigion[i].dgmList.length;\r\n                                        that.dgmList.push(obj)\r\n                                    } else {\r\n\r\n                                        var noBgmObj = {};\r\n                                        if (\"pump_name\" in dgmListOrigion[i]) {\r\n                                            noBgmObj.pump_name = dgmListOrigion[i].pump_name;\r\n                                            noBgmObj.pump_id = dgmListOrigion[i].pump_id;\r\n                                        }\r\n                                        noBgmObj.machine_id = dgmListOrigion[i].machine_id;\r\n                                        noBgmObj.machine_name = dgmListOrigion[i].machine_name;\r\n                                        noBgmObj.m_type = dgmListOrigion[i].m_type;\r\n                                        noBgmObj.rowspan = 1;\r\n                                        noBgmObj.dgmList = \"\";\r\n                                        that.dgmList.push(noBgmObj)\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            that.originDgmList = cloneObj(that.dgmList, true);\r\n                        } else if (res.msg == 1) {\r\n                            console.log('参数为空！')\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误',err)\r\n                    })\r\n            },\r\n            checkChannel: function () {\r\n                this.checkStatus = true;\r\n            },\r\n            //刷新未绑定采集器列表\r\n            refreshDgm: function () {\r\n                this.getAllUnbindDgm();\r\n            },\r\n            getAllUnbindDgm: function () {\r\n                var that = this;\r\n                that.origionUnbindDgmList = [];\r\n                that.unbindDgmList = [];\r\n                var token = sessionStorage.getItem('token');\r\n                this.$axios.post('queryAllUnbindDgmInfo')\r\n                    .then(res => {\r\n                        let dgmListOrigion = res;\r\n                        if (dgmListOrigion != undefined && dgmListOrigion.length > 0) {\r\n                            for (let i = 0; i < dgmListOrigion.length; i++) {\r\n                                dgmListOrigion[i].dgm_type_name = this.typeTodgmName(dgmListOrigion[i].dgm_type);\r\n                            }\r\n                            that.origionUnbindDgmList = dgmListOrigion.concat();\r\n                            that.unbindDgmList = that.origionUnbindDgmList.concat();\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误',err)\r\n                    })\r\n            },\r\n            // 搜索未绑定采集器\r\n            searchUnbindDgm: function () {\r\n                var that = this;\r\n                if (that.searchVal.length > 0) {\r\n                    var reg = RegExp(this.searchVal);\r\n                    that.unbindDgmList = [];\r\n                    // 过滤需要的数据\r\n                    if (that.origionUnbindDgmList.length > 0) {\r\n                        for (let i = 0; i < that.origionUnbindDgmList.length; i++) {\r\n                            if (reg.test(that.origionUnbindDgmList[i].dgm_id) || reg.test(that.origionUnbindDgmList[i].dgm_ip) || reg.test(that.origionUnbindDgmList[i].dgm_type_name)) {\r\n                                that.unbindDgmList.push(that.origionUnbindDgmList[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    that.unbindDgmList = that.origionUnbindDgmList.concat();\r\n                }\r\n            },\r\n            // 搜索机组采集器列表\r\n            searchDgm: function () {\r\n                var that = this;\r\n                if (that.searchDgmVal.length > 0) {\r\n                    var reg = RegExp(this.searchDgmVal);\r\n                    that.dgmList = [];\r\n                    // 过滤需要的数据\r\n                    if (that.originDgmList.length > 0) {\r\n                        for (let i = 0; i < that.originDgmList.length; i++) {\r\n                            if (reg.test(that.originDgmList[i].pump_name) || reg.test(that.originDgmList[i].machine_name) || reg.test(that.originDgmList[i].dgm.dgm_id) || reg.test(that.originDgmList[i].dgm.dgm_ip) || reg.test(that.originDgmList[i].dgm.dgm_type_name)) {\r\n                                that.dgmList.push(that.originDgmList[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    that.dgmList = cloneObj(that.originDgmList, true);\r\n                }\r\n            },\r\n            chooseMachine: function (t_root, machine_id, index, m_type) {\r\n                this.chooseMachineId = machine_id;\r\n                this.chooseTreeRoot = t_root;\r\n                if (window.event.ctrlKey) {\r\n                    const idx = this.activeClass.index.indexOf(index);\r\n                    if (idx === -1) {\r\n                        this.activeClass.index.push(index);\r\n                        this.selectedSycMacList.push({\"machine_id\": machine_id, \"m_type\": m_type});\r\n                    } else {\r\n                        this.activeClass.index.splice(idx, 1);\r\n                        this.selectedSycMacList.splice(idx, 1);\r\n                    }\r\n                    this.activeClass.flag = true;\r\n\r\n                } else {\r\n                    this.activeClass = {\r\n                        index: [index],\r\n                        flag: false\r\n                    };\r\n                    this.selectedSycMacList = [{\"machine_id\": machine_id, \"m_type\": m_type}];\r\n                }\r\n                this.chooseDgmType = [];\r\n                if (t_root == 1 || t_root == 2  || t_root == -1) {\r\n                    for (let i = 0; i < this.dgmList.length; i++) {\r\n                        for (let j = 0; j < this.dgmList[i].dgmList.length; j++) {\r\n                            if (this.dgmList[i].machine_id == this.chooseMachineId) {\r\n                                this.chooseDgmType.push(this.dgmList[i].dgmList[j].dgm_type);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < this.dgmList.length; i++) {\r\n                        if (this.dgmList[i].machine_id == this.chooseMachineId) {\r\n                            this.chooseDgmType.push(this.dgmList[i].dgm.dgm_type);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n   @import \"~assets/css/components/dgmBind.scss\";\r\n  .dgms-content{\r\n    position: relative;\r\n  }\r\n</style>\r\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"my-content-header\", on: { dblclick: _vm.dblclick } },\n    [_c(\"span\", { staticClass: \"page-title\" }, [_vm._v(_vm._s(_vm.title))])]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"dgmBind-content\" },\n    [\n      _c(\"my-content-title\", { attrs: { title: _vm.title } }),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          staticClass: \"myTree\",\n          attrs: { id: \"myTree\" },\n          on: {\n            click: function($event) {\n              $event.stopPropagation()\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"dgm-content clearfloat\" }, [\n            _c(\"div\", { staticClass: \"dgm-left\" }, [\n              _c(\"div\", { staticClass: \"dgm-header\" }, [\n                _c(\"div\", { staticClass: \"dgm-folder clearfloat\" }, [\n                  _c(\"span\", { staticClass: \"folder-span\" }, [\n                    _vm._v(\"组织名称\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.folderSelected,\n                          expression: \"folderSelected\"\n                        }\n                      ],\n                      staticClass: \"folder-choice\",\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.folderSelected = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          },\n                          _vm.getFolderSelected\n                        ]\n                      }\n                    },\n                    _vm._l(_vm.sortFolderList, function(folder) {\n                      return _c(\n                        \"option\",\n                        {\n                          domProps: {\n                            value: folder.folderId + \"_\" + folder.t_root\n                          }\n                        },\n                        [_vm._v(_vm._s(folder.folderName))]\n                      )\n                    }),\n                    0\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"dgm-search\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.searchDgmVal,\n                          expression: \"searchDgmVal\"\n                        }\n                      ],\n                      staticClass: \"dgm-input\",\n                      attrs: { type: \"text\", placeholder: \"关键字\" },\n                      domProps: { value: _vm.searchDgmVal },\n                      on: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.searchDgm()\n                        },\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.searchDgmVal = $event.target.value\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"search-icon\",\n                        on: {\n                          click: function($event) {\n                            return _vm.searchDgm()\n                          }\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"iconfont icon-zhongzi-sousuo\" })]\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"dgm-span\" }, [\n                    _vm._v(\"已绑定采集器\")\n                  ])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _vm.folderSelected.split(\"_\")[1] == 0 ||\n              _vm.folderSelected.split(\"_\")[1] == null ||\n              _vm.folderSelected.split(\"_\")[1] == 3\n                ? _c(\"table\", { staticClass: \"dgm-table\" }, [\n                    _vm._m(0),\n                    _vm._v(\" \"),\n                    _c(\n                      \"tbody\",\n                      _vm._l(_vm.resultDgmList, function(dgm, index) {\n                        return _c(\n                          \"tr\",\n                          {\n                            key: index,\n                            class:\n                              _vm.activeClass.index.includes(index) ||\n                              (_vm.activeClass.flag &&\n                                _vm.activeClass.index.includes(index))\n                                ? \"active\"\n                                : \"\",\n                            on: {\n                              click: function($event) {\n                                _vm.chooseMachine(\n                                  _vm.folderSelected.split(\"_\")[1],\n                                  dgm.machine_id,\n                                  index,\n                                  dgm.m_type\n                                )\n                              }\n                            }\n                          },\n                          [\n                            _c(\"td\", [_vm._v(_vm._s(dgm.machine_name))]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(dgm.dgm != \"\" ? dgm.dgm.dgm_id : \"\")\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(dgm.dgm != \"\" ? dgm.dgm.dgm_ip : \"\")\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(\n                                  dgm.dgm != \"\" ? dgm.dgm.dgm_type_name : \"\"\n                                )\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _c(\n                                \"button\",\n                                {\n                                  class: [\n                                    \"move-btn\",\n                                    { disable_btn: dgm.dgm == \"\" }\n                                  ],\n                                  attrs: { disabled: dgm.dgm == \"\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.unbindDgm(\n                                        dgm.dgm.dgm_id,\n                                        dgm.machine_id\n                                      )\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"解绑\")]\n                              )\n                            ])\n                          ]\n                        )\n                      }),\n                      0\n                    )\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.folderSelected.split(\"_\")[1] != 0 &&\n              _vm.folderSelected.split(\"_\")[1] != 3\n                ? _c(\"div\", { staticClass: \"bindingServer\" }, [\n                    _c(\n                      \"ul\",\n                      { staticClass: \"tableTitle\" },\n                      _vm._l(_vm.pumpHeaderList, function(title) {\n                        return _c(\"li\", [_vm._v(_vm._s(title))])\n                      }),\n                      0\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      { staticClass: \"tableBody\" },\n                      _vm._l(_vm.resultDgmList, function(dgm, index) {\n                        return _c(\n                          \"li\",\n                          {\n                            key: index,\n                            ref: \"tableRow\",\n                            refInFor: true,\n                            staticClass: \"tableRow\",\n                            class:\n                              _vm.activeClass.index.includes(index) ||\n                              (_vm.activeClass.flag &&\n                                _vm.activeClass.index.includes(index))\n                                ? \"active\"\n                                : \"\",\n                            on: {\n                              click: function($event) {\n                                _vm.chooseMachine(\n                                  _vm.folderSelected.split(\"_\")[1],\n                                  dgm.machine_id,\n                                  index,\n                                  dgm.m_type\n                                )\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"machineName\",\n                                style: _vm.setStyle(dgm),\n                                attrs: { title: dgm.pump_name }\n                              },\n                              [_vm._v(_vm._s(dgm.pump_name))]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"machineName\",\n                                style: _vm.setStyle(dgm),\n                                attrs: { title: dgm.machine_name }\n                              },\n                              [_vm._v(_vm._s(dgm.machine_name))]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              { staticClass: \"machineBindServer\" },\n                              [\n                                dgm.dgmList == \"\"\n                                  ? _c(\"ul\", { staticClass: \"bindServer\" }, [\n                                      _c(\"li\"),\n                                      _c(\"li\"),\n                                      _c(\"li\"),\n                                      _c(\"li\")\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm._l(dgm.dgmList, function(item) {\n                                  return _c(\n                                    \"ul\",\n                                    {\n                                      key: item.dgm_id,\n                                      staticClass: \"bindServer\"\n                                    },\n                                    [\n                                      _c(\n                                        \"li\",\n                                        { attrs: { title: item.dgm_id } },\n                                        [_vm._v(_vm._s(item.dgm_id))]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"li\",\n                                        { attrs: { title: item.dgm_ip } },\n                                        [_vm._v(_vm._s(item.dgm_ip))]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"li\",\n                                        {\n                                          attrs: { title: item.dgm_type_name }\n                                        },\n                                        [_vm._v(_vm._s(item.dgm_type_name))]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"li\",\n                                        { attrs: { title: item.ch_used } },\n                                        [_vm._v(_vm._s(item.ch_used))]\n                                      )\n                                    ]\n                                  )\n                                })\n                              ],\n                              2\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"fixWidth\" }, [\n                              _c(\n                                \"ul\",\n                                [\n                                  dgm.dgmList == \"\"\n                                    ? _c(\"li\", { staticClass: \"untying\" }, [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            class: [\n                                              \"move-btn\",\n                                              { disable_btn: dgm.dgmList == \"\" }\n                                            ],\n                                            attrs: {\n                                              disabled: dgm.dgmList == \"\"\n                                            },\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.editDgm(\n                                                  _vm.item.ch_list,\n                                                  dgm.machine_id,\n                                                  _vm.item.dgm_id,\n                                                  dgm.ch_class,\n                                                  _vm.item.dgm_type\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [_vm._v(\"选择\")]\n                                        )\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm._l(dgm.dgmList, function(item) {\n                                    return _c(\n                                      \"li\",\n                                      { staticClass: \"untying\" },\n                                      [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            class: [\n                                              \"move-btn\",\n                                              {\n                                                disable_btn:\n                                                  item == \"\" ||\n                                                  item.ch_list.length == 0\n                                              }\n                                            ],\n                                            attrs: {\n                                              disabled:\n                                                item == \"\" ||\n                                                item.ch_list.length == 0\n                                            },\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.editDgm(\n                                                  item.ch_list,\n                                                  dgm.machine_id,\n                                                  item.dgm_id,\n                                                  dgm.ch_class,\n                                                  item.dgm_type\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [_vm._v(\"选择\")]\n                                        )\n                                      ]\n                                    )\n                                  })\n                                ],\n                                2\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"fixWidth\" }, [\n                              _c(\n                                \"ul\",\n                                [\n                                  dgm.dgmList == \"\"\n                                    ? _c(\n                                        \"li\",\n                                        { staticClass: \"untying untyingLast\" },\n                                        [\n                                          _c(\n                                            \"button\",\n                                            {\n                                              class: [\n                                                \"move-btn\",\n                                                {\n                                                  disable_btn: dgm.dgmList == \"\"\n                                                }\n                                              ],\n                                              attrs: {\n                                                disabled: dgm.dgmList == \"\"\n                                              },\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.unbindDgm(\n                                                    _vm.item.dgm_id,\n                                                    dgm.machine_id\n                                                  )\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"解绑\")]\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm._l(dgm.dgmList, function(item) {\n                                    return _c(\n                                      \"li\",\n                                      { staticClass: \"untying untyingLast\" },\n                                      [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            class: [\n                                              \"move-btn\",\n                                              { disable_btn: item == \"\" }\n                                            ],\n                                            attrs: { disabled: item == \"\" },\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.unbindDgm(\n                                                  item.dgm_id,\n                                                  dgm.machine_id\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [_vm._v(\"解绑\")]\n                                        )\n                                      ]\n                                    )\n                                  })\n                                ],\n                                2\n                              )\n                            ])\n                          ]\n                        )\n                      }),\n                      0\n                    )\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"synchronize\" }, [\n                _c(\"div\", { staticClass: \"syncDiv\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"sync-btn\",\n                      attrs: { disabled: _vm.force_type },\n                      on: { click: _vm.isAlertSync }\n                    },\n                    [_vm._v(\"选择同步类型\")]\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"syncDiv\" }, [\n                  _c(\"span\", { staticClass: \"syncLable\" }, [\n                    _vm._v(\"基准对象\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.selectedObj,\n                          expression: \"selectedObj\"\n                        }\n                      ],\n                      staticClass: \"typeSelect\",\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.selectedObj = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          },\n                          function($event) {\n                            return _vm.getSycObj(_vm.selectedObj)\n                          }\n                        ]\n                      }\n                    },\n                    _vm._l(_vm.allMacList, function(mac) {\n                      return _c(\n                        \"option\",\n                        { domProps: { value: mac.mac_id + \"_\" + mac.m_type } },\n                        [_vm._v(_vm._s(mac.mac_me))]\n                      )\n                    }),\n                    0\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"syncDiv\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.force_type,\n                        expression: \"force_type\"\n                      }\n                    ],\n                    staticClass: \"checkbox\",\n                    attrs: { type: \"checkbox\", id: \"force_type\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.force_type)\n                        ? _vm._i(_vm.force_type, null) > -1\n                        : _vm.force_type\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = _vm.force_type,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.force_type = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.force_type = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.force_type = $$c\n                        }\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"force_type\" } }, [\n                    _vm._v(\"强制导出\")\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  { staticClass: \"edit-btn\", on: { click: _vm.sycMachine } },\n                  [_vm._v(\"同步\")]\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.editStatus,\n                      expression: \"editStatus\"\n                    }\n                  ],\n                  staticClass: \"edit-block\",\n                  attrs: { id: \"edit-block\" }\n                },\n                [\n                  _c(\"div\", { staticClass: \"edit-header\" }, [\n                    _c(\"span\", { staticClass: \"edit-name\" }, [\n                      _vm._v(\"绑定子级\")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"i\", {\n                      staticClass: \"iconfont icon-zhongzi-guanbi close-icon\",\n                      on: {\n                        click: function($event) {\n                          return _vm.closeEdit()\n                        }\n                      }\n                    })\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"edit-list\" }, [\n                    _c(\n                      \"ul\",\n                      [\n                        _vm._l(_vm.ch_lists, function(item) {\n                          return _c(\n                            \"li\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value:\n                                    Number(_vm.chooseTreeRoot) === 1 ||\n                                    Number(_vm.chooseTreeRoot) === -1,\n                                  expression:\n                                    \"Number(chooseTreeRoot)===1 || Number(chooseTreeRoot)===-1\"\n                                }\n                              ],\n                              staticClass: \"channel-item\"\n                            },\n                            [\n                              _c(\"div\", { staticClass: \"channel-div\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: item.status,\n                                      expression: \"item.status\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    id: item.ch_type + \"_\" + item.ch_type_name,\n                                    type: \"checkbox\"\n                                  },\n                                  domProps: {\n                                    value: item.ch_type,\n                                    checked: Array.isArray(item.status)\n                                      ? _vm._i(item.status, item.ch_type) > -1\n                                      : item.status\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.checkAll(item)\n                                    },\n                                    change: function($event) {\n                                      var $$a = item.status,\n                                        $$el = $event.target,\n                                        $$c = $$el.checked ? true : false\n                                      if (Array.isArray($$a)) {\n                                        var $$v = item.ch_type,\n                                          $$i = _vm._i($$a, $$v)\n                                        if ($$el.checked) {\n                                          $$i < 0 &&\n                                            _vm.$set(\n                                              item,\n                                              \"status\",\n                                              $$a.concat([$$v])\n                                            )\n                                        } else {\n                                          $$i > -1 &&\n                                            _vm.$set(\n                                              item,\n                                              \"status\",\n                                              $$a\n                                                .slice(0, $$i)\n                                                .concat($$a.slice($$i + 1))\n                                            )\n                                        }\n                                      } else {\n                                        _vm.$set(item, \"status\", $$c)\n                                      }\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"label\",\n                                  {\n                                    attrs: {\n                                      for:\n                                        item.ch_type + \"_\" + item.ch_type_name\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(item.ch_type_name))]\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"ul\",\n                                _vm._l(item.ch_type_list, function(chItem) {\n                                  return _c(\"li\", [\n                                    _c(\"div\", { staticClass: \"channel-div2\" }, [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: chItem.status,\n                                            expression: \"chItem.status\"\n                                          }\n                                        ],\n                                        attrs: {\n                                          id:\n                                            chItem.ch_id + \"_\" + chItem.ch_name,\n                                          type: \"checkbox\"\n                                        },\n                                        domProps: {\n                                          value: chItem.ch_type,\n                                          checked: Array.isArray(chItem.status)\n                                            ? _vm._i(\n                                                chItem.status,\n                                                chItem.ch_type\n                                              ) > -1\n                                            : chItem.status\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.checkMe(\n                                              chItem.ch_type,\n                                              chItem.status,\n                                              chItem.ch_id,\n                                              item,\n                                              chItem.same_pre,\n                                              _vm.ch_lists\n                                            )\n                                          },\n                                          change: function($event) {\n                                            var $$a = chItem.status,\n                                              $$el = $event.target,\n                                              $$c = $$el.checked ? true : false\n                                            if (Array.isArray($$a)) {\n                                              var $$v = chItem.ch_type,\n                                                $$i = _vm._i($$a, $$v)\n                                              if ($$el.checked) {\n                                                $$i < 0 &&\n                                                  _vm.$set(\n                                                    chItem,\n                                                    \"status\",\n                                                    $$a.concat([$$v])\n                                                  )\n                                              } else {\n                                                $$i > -1 &&\n                                                  _vm.$set(\n                                                    chItem,\n                                                    \"status\",\n                                                    $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      )\n                                                  )\n                                              }\n                                            } else {\n                                              _vm.$set(chItem, \"status\", $$c)\n                                            }\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"label\",\n                                        {\n                                          attrs: {\n                                            for:\n                                              chItem.ch_id +\n                                              \"_\" +\n                                              chItem.ch_name\n                                          }\n                                        },\n                                        [_vm._v(_vm._s(chItem.ch_name))]\n                                      )\n                                    ])\n                                  ])\n                                }),\n                                0\n                              )\n                            ]\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.tms_ch_list, function(value, key, index) {\n                          return _c(\n                            \"li\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: Number(_vm.chooseTreeRoot) === 2,\n                                  expression: \"Number(chooseTreeRoot)===2\"\n                                }\n                              ],\n                              staticClass: \"channel-item\"\n                            },\n                            [\n                              _c(\"div\", { staticClass: \"channel-div\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: value.status,\n                                      expression: \"value.status\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    id: value.ch_type_name,\n                                    type: \"checkbox\"\n                                  },\n                                  domProps: {\n                                    checked: Array.isArray(value.status)\n                                      ? _vm._i(value.status, null) > -1\n                                      : value.status\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.checkAllTms(value)\n                                    },\n                                    change: function($event) {\n                                      var $$a = value.status,\n                                        $$el = $event.target,\n                                        $$c = $$el.checked ? true : false\n                                      if (Array.isArray($$a)) {\n                                        var $$v = null,\n                                          $$i = _vm._i($$a, $$v)\n                                        if ($$el.checked) {\n                                          $$i < 0 &&\n                                            _vm.$set(\n                                              value,\n                                              \"status\",\n                                              $$a.concat([$$v])\n                                            )\n                                        } else {\n                                          $$i > -1 &&\n                                            _vm.$set(\n                                              value,\n                                              \"status\",\n                                              $$a\n                                                .slice(0, $$i)\n                                                .concat($$a.slice($$i + 1))\n                                            )\n                                        }\n                                      } else {\n                                        _vm.$set(value, \"status\", $$c)\n                                      }\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"label\",\n                                  { attrs: { for: value.ch_type_name } },\n                                  [_vm._v(_vm._s(value.ch_type_name))]\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"ul\",\n                                _vm._l(value.ch_type_list, function(chItem) {\n                                  return _c(\"li\", [\n                                    _c(\"div\", { staticClass: \"channel-div2\" }, [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: chItem.status,\n                                            expression: \"chItem.status\"\n                                          }\n                                        ],\n                                        attrs: {\n                                          id:\n                                            chItem.ch_id + \"_\" + chItem.ch_name,\n                                          type: \"checkbox\",\n                                          disabled: \"disabled\"\n                                        },\n                                        domProps: {\n                                          checked: Array.isArray(chItem.status)\n                                            ? _vm._i(chItem.status, null) > -1\n                                            : chItem.status\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            var $$a = chItem.status,\n                                              $$el = $event.target,\n                                              $$c = $$el.checked ? true : false\n                                            if (Array.isArray($$a)) {\n                                              var $$v = null,\n                                                $$i = _vm._i($$a, $$v)\n                                              if ($$el.checked) {\n                                                $$i < 0 &&\n                                                  _vm.$set(\n                                                    chItem,\n                                                    \"status\",\n                                                    $$a.concat([$$v])\n                                                  )\n                                              } else {\n                                                $$i > -1 &&\n                                                  _vm.$set(\n                                                    chItem,\n                                                    \"status\",\n                                                    $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      )\n                                                  )\n                                              }\n                                            } else {\n                                              _vm.$set(chItem, \"status\", $$c)\n                                            }\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"label\",\n                                        {\n                                          attrs: {\n                                            for:\n                                              chItem.ch_id +\n                                              \"_\" +\n                                              chItem.ch_name\n                                          }\n                                        },\n                                        [_vm._v(_vm._s(chItem.ch_name))]\n                                      )\n                                    ])\n                                  ])\n                                }),\n                                0\n                              )\n                            ]\n                          )\n                        })\n                      ],\n                      2\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"edit-controls\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"fail-btn\",\n                        on: {\n                          click: function($event) {\n                            return _vm.closeEdit()\n                          }\n                        }\n                      },\n                      [_vm._v(\"取消\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"ok-btn\",\n                        on: {\n                          click: function($event) {\n                            return _vm.bindChannel()\n                          }\n                        }\n                      },\n                      [_vm._v(\"确定\")]\n                    )\n                  ])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isAlertSyncType,\n                      expression: \"isAlertSyncType\"\n                    }\n                  ],\n                  attrs: { id: \"alertBox3\" }\n                },\n                [\n                  _c(\"div\", { staticClass: \"alertUser\" }, [\n                    _c(\"div\", { staticClass: \"alertUserTitle\" }, [\n                      _vm._v(\n                        \"\\n                            同步类型选择\\n                            \"\n                      ),\n                      _c(\"i\", {\n                        staticClass:\n                          \"iconfont icon-zhongzi-guanbi closeAlertUser\",\n                        on: { click: _vm.closeAlertSyncType }\n                      })\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"alertCont\" },\n                      _vm._l(_vm.sycTypeObj, function(item) {\n                        return _c(\n                          \"div\",\n                          { staticClass: \"group\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: item.status,\n                                  expression: \"item.status\"\n                                }\n                              ],\n                              attrs: {\n                                id: item.type,\n                                type: \"checkbox\",\n                                disabled: item.readOnly\n                              },\n                              domProps: {\n                                value: item.value,\n                                checked: Array.isArray(item.status)\n                                  ? _vm._i(item.status, item.value) > -1\n                                  : item.status\n                              },\n                              on: {\n                                change: [\n                                  function($event) {\n                                    var $$a = item.status,\n                                      $$el = $event.target,\n                                      $$c = $$el.checked ? true : false\n                                    if (Array.isArray($$a)) {\n                                      var $$v = item.value,\n                                        $$i = _vm._i($$a, $$v)\n                                      if ($$el.checked) {\n                                        $$i < 0 &&\n                                          _vm.$set(\n                                            item,\n                                            \"status\",\n                                            $$a.concat([$$v])\n                                          )\n                                      } else {\n                                        $$i > -1 &&\n                                          _vm.$set(\n                                            item,\n                                            \"status\",\n                                            $$a\n                                              .slice(0, $$i)\n                                              .concat($$a.slice($$i + 1))\n                                          )\n                                      }\n                                    } else {\n                                      _vm.$set(item, \"status\", $$c)\n                                    }\n                                  },\n                                  function($event) {\n                                    $event.stopPropagation()\n                                    return _vm.checkItemType(\n                                      item,\n                                      _vm.sycTypeObj\n                                    )\n                                  }\n                                ]\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"label\", { attrs: { for: item.type } }, [\n                              _vm._v(_vm._s(item.text))\n                            ]),\n                            _vm._v(\" \"),\n                            _vm._l(item.child, function(childItem) {\n                              return _c(\"div\", { staticClass: \"group\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: childItem.status,\n                                      expression: \"childItem.status\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    id: childItem.type + \"_\" + item.type,\n                                    type: \"checkbox\"\n                                  },\n                                  domProps: {\n                                    value: childItem.value,\n                                    checked: Array.isArray(childItem.status)\n                                      ? _vm._i(\n                                          childItem.status,\n                                          childItem.value\n                                        ) > -1\n                                      : childItem.status\n                                  },\n                                  on: {\n                                    change: [\n                                      function($event) {\n                                        var $$a = childItem.status,\n                                          $$el = $event.target,\n                                          $$c = $$el.checked ? true : false\n                                        if (Array.isArray($$a)) {\n                                          var $$v = childItem.value,\n                                            $$i = _vm._i($$a, $$v)\n                                          if ($$el.checked) {\n                                            $$i < 0 &&\n                                              _vm.$set(\n                                                childItem,\n                                                \"status\",\n                                                $$a.concat([$$v])\n                                              )\n                                          } else {\n                                            $$i > -1 &&\n                                              _vm.$set(\n                                                childItem,\n                                                \"status\",\n                                                $$a\n                                                  .slice(0, $$i)\n                                                  .concat($$a.slice($$i + 1))\n                                              )\n                                          }\n                                        } else {\n                                          _vm.$set(childItem, \"status\", $$c)\n                                        }\n                                      },\n                                      function($event) {\n                                        $event.stopPropagation()\n                                        return _vm.checkType(item, childItem)\n                                      }\n                                    ]\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"label\",\n                                  {\n                                    attrs: {\n                                      for: childItem.type + \"_\" + item.type\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(childItem.text))]\n                                )\n                              ])\n                            })\n                          ],\n                          2\n                        )\n                      }),\n                      0\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"alertFoot\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"sure-btn\",\n                          on: { click: _vm.getSycType }\n                        },\n                        [_vm._v(\"确定\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"quit-btn\",\n                          on: { click: _vm.closeAlertSyncType }\n                        },\n                        [_vm._v(\"取消\")]\n                      )\n                    ])\n                  ])\n                ]\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"dgm-right\" }, [\n              _c(\"div\", { staticClass: \"dgm-header\" }, [\n                _c(\"div\", { staticClass: \"dgm-folder clearfloat\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"addDgm-btn\",\n                      on: { click: _vm.openAlertDgm }\n                    },\n                    [_vm._v(\"创建采集器\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"addDgm-btn\",\n                      on: { click: _vm.refreshDgm }\n                    },\n                    [_vm._v(\"刷新\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"dgm-search\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.searchVal,\n                          expression: \"searchVal\"\n                        }\n                      ],\n                      staticClass: \"dgm-input\",\n                      attrs: { type: \"text\", placeholder: \"关键字\" },\n                      domProps: { value: _vm.searchVal },\n                      on: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.searchUnbindDgm()\n                        },\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.searchVal = $event.target.value\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"search-icon\",\n                        on: {\n                          click: function($event) {\n                            return _vm.searchUnbindDgm()\n                          }\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"iconfont icon-zhongzi-sousuo\" })]\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"dgm-span\" }, [\n                    _vm._v(\"可绑定采集器\")\n                  ])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"table\", { staticClass: \"dgm-table\" }, [\n                _vm._m(1),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  _vm._l(_vm.unbindDgmList, function(item, index) {\n                    return _c(\n                      \"tr\",\n                      {\n                        key: index,\n                        class: _vm.unbindActiveClass == index ? \"active\" : \"\",\n                        on: {\n                          click: function($event) {\n                            return _vm.active(index)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"td\", [_vm._v(_vm._s(item.dgm_id))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(item.dgm_ip))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(item.dgm_type_name))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"move-btn\",\n                              on: {\n                                click: function($event) {\n                                  return _vm.bindDgm(\n                                    item.dgm_id,\n                                    item.dgm_type,\n                                    item\n                                  )\n                                }\n                              }\n                            },\n                            [_vm._v(\"绑定\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"move-btn deleteBtn\",\n                              on: {\n                                click: function($event) {\n                                  return _vm.deleteDgm(\n                                    item.dgm_id,\n                                    item.dgm_type,\n                                    item\n                                  )\n                                }\n                              }\n                            },\n                            [_vm._v(\"删除\")]\n                          )\n                        ])\n                      ]\n                    )\n                  }),\n                  0\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isAlertDgm,\n                      expression: \"isAlertDgm\"\n                    }\n                  ],\n                  attrs: { id: \"alertBox\" }\n                },\n                [\n                  _c(\"div\", { staticClass: \"alertUser\" }, [\n                    _c(\"div\", { staticClass: \"alertUserTitle\" }, [\n                      _vm._v(\n                        \"\\n                            创建采集器\\n                            \"\n                      ),\n                      _c(\"i\", {\n                        staticClass:\n                          \"iconfont icon-zhongzi-guanbi closeAlertUser\",\n                        on: { click: _vm.closeAlertDgm }\n                      })\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"alertCont\" }, [\n                      _c(\"div\", { staticClass: \"inputGroup\" }, [\n                        _c(\"span\", { staticClass: \"dgmLable\" }, [\n                          _vm._v(\"ID:\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.addDgmId,\n                              expression: \"addDgmId\"\n                            }\n                          ],\n                          ref: \"addDgmId\",\n                          staticClass: \"dgmInput\",\n                          attrs: { id: \"addDgmId\", type: \"number\" },\n                          domProps: { value: _vm.addDgmId },\n                          on: {\n                            input: [\n                              function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.addDgmId = $event.target.value\n                              },\n                              _vm.changeNum\n                            ]\n                          }\n                        })\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"inputGroup\" }, [\n                        _c(\"span\", { staticClass: \"dgmLable\" }, [\n                          _vm._v(\"IP:\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.addDgmIp,\n                              expression: \"addDgmIp\"\n                            }\n                          ],\n                          staticClass: \"dgmInput\",\n                          attrs: { id: \"addDgmIp\", type: \"text\" },\n                          domProps: { value: _vm.addDgmIp },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.addDgmIp = $event.target.value\n                            }\n                          }\n                        })\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"inputGroup\" }, [\n                        _c(\"span\", { staticClass: \"dgmLable\" }, [\n                          _vm._v(\"类型:\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"select\",\n                          {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.selectDgmTypeVal,\n                                expression: \"selectDgmTypeVal\"\n                              }\n                            ],\n                            staticClass: \"dgmSelect\",\n                            attrs: { id: \"addDgmType\" },\n                            on: {\n                              change: function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.selectDgmTypeVal = $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              }\n                            }\n                          },\n                          _vm._l(_vm.dgmTypeList, function(itemType) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: itemType.value } },\n                              [_vm._v(_vm._s(itemType.text))]\n                            )\n                          }),\n                          0\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.selectDgmTypeVal === 3,\n                              expression: \"selectDgmTypeVal===3\"\n                            }\n                          ],\n                          staticClass: \"inputGroup\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"dgmLable\" }, [\n                            _vm._v(\"通道类型:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.selectChTypeVal,\n                                  expression: \"selectChTypeVal\"\n                                }\n                              ],\n                              staticClass: \"dgmSelect\",\n                              attrs: { id: \"addChType\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.selectChTypeVal = $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                }\n                              }\n                            },\n                            _vm._l(_vm.chTypeList, function(itemType) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: itemType.value } },\n                                [_vm._v(_vm._s(itemType.text))]\n                              )\n                            }),\n                            0\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.selectDgmTypeVal === 3,\n                              expression: \"selectDgmTypeVal===3\"\n                            }\n                          ],\n                          staticClass: \"inputGroup\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"dgmLable\" }, [\n                            _vm._v(\"量程类型:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.selectRangeTypeVal,\n                                  expression: \"selectRangeTypeVal\"\n                                }\n                              ],\n                              staticClass: \"dgmSelect\",\n                              attrs: { id: \"addRangeType\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.selectRangeTypeVal = $event.target\n                                    .multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                }\n                              }\n                            },\n                            _vm._l(_vm.rangeTypeList, function(itemType) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: itemType.value } },\n                                [_vm._v(_vm._s(itemType.text))]\n                              )\n                            }),\n                            0\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.selectDgmTypeVal === 2,\n                              expression: \"selectDgmTypeVal===2\"\n                            }\n                          ],\n                          staticClass: \"inputGroup\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"dgmLable\" }, [\n                            _vm._v(\"量程类型:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.selectOptionTypeVal,\n                                  expression: \"selectOptionTypeVal\"\n                                }\n                              ],\n                              staticClass: \"dgmSelect\",\n                              attrs: { id: \"addOptionType\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.selectOptionTypeVal = $event.target\n                                    .multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                }\n                              }\n                            },\n                            _vm._l(_vm.optionTypeList, function(itemType) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: itemType.value } },\n                                [_vm._v(_vm._s(itemType.text))]\n                              )\n                            }),\n                            0\n                          )\n                        ]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"alertFoot\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"sure-btn\",\n                          on: { click: _vm.addDgmInfo }\n                        },\n                        [_vm._v(\"确定\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"quit-btn\",\n                          on: { click: _vm.closeAlertDgm }\n                        },\n                        [_vm._v(\"取消\")]\n                      )\n                    ])\n                  ])\n                ]\n              )\n            ])\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"机组名称\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"ID\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"IP\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"类型\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"操作\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"ID\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"IP\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { staticClass: \"th_dgmType\" }, [_vm._v(\"类型\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"操作\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&\"\nimport script from \"./MyContentTitle.vue?vue&type=script&lang=js&\"\nexport * from \"./MyContentTitle.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e68802e2\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\工作\\\\CCCCCCCCCC\\\\node_modules\\\\_vue-hot-reload-api@2.3.4@vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e68802e2')) {\n      api.createRecord('e68802e2', component.options)\n    } else {\n      api.reload('e68802e2', component.options)\n    }\n    module.hot.accept(\"./MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&\", function () {\n      api.rerender('e68802e2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/common/MyContentTitle.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./MyContentTitle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./MyContentTitle.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--2-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&\"","export * from \"-!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&\"","import { render, staticRenderFns } from \"./DgmBind.vue?vue&type=template&id=0ac5f9b6&\"\nimport script from \"./DgmBind.vue?vue&type=script&lang=js&\"\nexport * from \"./DgmBind.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DgmBind.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\工作\\\\CCCCCCCCCC\\\\node_modules\\\\_vue-hot-reload-api@2.3.4@vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0ac5f9b6')) {\n      api.createRecord('0ac5f9b6', component.options)\n    } else {\n      api.reload('0ac5f9b6', component.options)\n    }\n    module.hot.accept(\"./DgmBind.vue?vue&type=template&id=0ac5f9b6&\", function () {\n      api.rerender('0ac5f9b6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/content/system/dgmBind/DgmBind.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./DgmBind.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./DgmBind.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--3-0!../../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./DgmBind.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./DgmBind.vue?vue&type=template&id=0ac5f9b6&\""],"sourceRoot":""}