(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[30],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/MyContentTitle.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "MyContentTitle",
  props: ["title"],
  data: function data() {
    return {
      flag: true
    };
  },
  methods: {
    dblclick: function dblclick() {
      //放大
      var homeHeader = document.getElementById("homeHeader");
      var aside = document.getElementById("aside");
      var content = document.getElementById("content");
      var wHeight = document.documentElement.clientHeight;

      if (this.flag) {
        homeHeader.style.display = "none";
        aside.style.display = "none";

        if (wHeight < 800) {
          content.style.height = "calc(100vh - 20px)"; //中间内容加大
        } else {
          content.style.height = "calc(100vh - 40px)"; //中间内容加大
        }

        this.$bus.$emit("reloadtable"); //主动渲染table

        this.flag = !this.flag;
      } else {
        //缩小
        homeHeader.style.display = "block";
        aside.style.display = "block";
        content.style.width = "100px"; //改变宽让宽自动渲染

        if (wHeight < 800) {
          content.style.height = "calc(100vh - 90px)"; //中间内容加大
        } else {
          content.style.height = "calc(100vh - 120px)"; //中间内容加大
        }

        this.$bus.$emit("reloadtable"); //主动渲染table

        this.flag = !this.flag;
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($, swal) {/* harmony import */ var components_common_MyContentTitle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! components/common/MyContentTitle */ "./src/components/common/MyContentTitle.vue");
/* harmony import */ var _js_auto_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/auto_mixin.js */ "./src/components/content/autoExport/js/auto_mixin.js");
/* harmony import */ var network_getApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! network/getApi */ "./src/network/getApi.js");
/* harmony import */ var utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! utils/utils */ "./src/utils/utils.js");
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
  name: "AutoExport",
  props: ['parentToChild'],
  mixins: [_js_auto_mixin_js__WEBPACK_IMPORTED_MODULE_1__["macMixin"]],
  data: function data() {
    return {
      title: '报告自动导出',
      name: 'AutoExport',
      isShow: false
    };
  },
  mounted: function mounted() {
    var _this = this;

    // 在点击标题的时候放大并重新渲染表格
    this.$bus.$on('reloadtable', function () {
      _this.hot.render();
    });
  },
  methods: {
    addRows: function addRows() {
      //新增行
      return Object(utils_utils__WEBPACK_IMPORTED_MODULE_3__["addRows"])(this.hot, this.data, -1);
    },
    save: function save() {
      var _this2 = this;

      /* 保存按钮 */
      var changeData = this.changeList.changeData;
      var addData = this.check(this.changeList.addData);

      if ($.isEmptyObject(changeData) && $.isEmptyObject(addData)) {
        swal({
          title: "提示",
          text: '保存成功',
          button: "确认"
        });
      } //修改信息


      if (!$.isEmptyObject(changeData)) {
        var flag = this.checkEmpty(changeData);

        if (flag) {
          network_getApi__WEBPACK_IMPORTED_MODULE_2__["default"].updateExport(changeData).then(function (res) {
            if (res.msg == 0) {
              swal({
                title: "提示",
                text: '保存成功',
                button: "确认"
              }).then(function (value) {
                _this2.$router.go(0);
              });
            } else if (res.msg == 1) {
              console.log('参数为空！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            } else if (res.msg == 2) {
              console.log('后台运行错误！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            } else if (res.msg == 3) {
              console.log('获取json数据时为空！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            }
          });
        }
      } //新建信息


      if (!$.isEmptyObject(addData)) {
        var _flag = this.checkEmpty(addData);

        if (_flag) {
          network_getApi__WEBPACK_IMPORTED_MODULE_2__["default"].saveExport(addData).then(function (res) {
            if (res.msg == 0) {
              swal({
                title: "提示",
                text: '保存成功',
                button: "确认"
              }).then(function (value) {
                _this2.$router.go(0);
              });
            } else if (res.msg == 1) {
              console.log('参数为空！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            } else if (res.msg == 2) {
              console.log('后台运行错误！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            } else if (res.msg == 3) {
              console.log('获取json数据时为空！');
              swal({
                title: "提示",
                text: '保存失败',
                button: "确认"
              });
            }
          });
        }
      }
    },
    check: function check(add_list) {
      for (var key in add_list) {
        if (add_list[key].operate) {
          delete add_list[key].operate;
        }
      }

      return add_list;
    },
    checkEmpty: function checkEmpty(data) {
      for (var key in data) {
        if (data[key].file_location === "") {
          swal({
            title: "提示",
            text: '请将表格数据填写完整',
            button: "确认"
          });
          return false;
        }
      }

      return true;
    }
  },
  components: {
    MyContentTitle: components_common_MyContentTitle__WEBPACK_IMPORTED_MODULE_0__["default"]
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! sweetalert */ "./node_modules/sweetalert/dist/sweetalert.min.js")))

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--2-0!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "my-content-header", on: { dblclick: _vm.dblclick } },
    [_c("span", { staticClass: "page-title" }, [_vm._v(_vm._s(_vm.title))])]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e& ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "datas-content" },
    [
      _c("my-content-title", { attrs: { title: _vm.title } }),
      _vm._v(" "),
      _c("div", { attrs: { id: "myContentCenter" } }, [
        _c("div", { staticClass: "myTable" }, [
          _c(
            "button",
            {
              staticClass: "my-btn btn-active btn6",
              on: {
                click: function($event) {
                  return _vm.addRows()
                }
              }
            },
            [_vm._v("新建")]
          ),
          _vm._v(" "),
          _c(
            "button",
            {
              staticClass: "my-btn btn-active btn3",
              on: {
                click: function($event) {
                  return _vm.save()
                }
              }
            },
            [_vm._v("保存设置")]
          ),
          _vm._v(" "),
          _c("div", { attrs: { id: "HotTable" } }),
          _vm._v(" "),
          _vm.isShow
            ? _c("div", { staticClass: "noData" }, [
                _vm._v("系统中还没有建组织!")
              ])
            : _vm._e()
        ])
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./src/components/common/MyContentTitle.vue":
/*!**************************************************!*\
  !*** ./src/components/common/MyContentTitle.vue ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true& */ "./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&");
/* harmony import */ var _MyContentTitle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MyContentTitle.vue?vue&type=script&lang=js& */ "./src/components/common/MyContentTitle.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css& */ "./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _MyContentTitle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"],
  _MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  "e68802e2",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/common/MyContentTitle.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/components/common/MyContentTitle.vue?vue&type=script&lang=js&":
/*!***************************************************************************!*\
  !*** ./src/components/common/MyContentTitle.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--1-0!../../../node_modules/vue-loader/lib??vue-loader-options!./MyContentTitle.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&":
/*!***********************************************************************************************************!*\
  !*** ./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css& ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--2-0!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib??vue-loader-options!./MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css& */ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=style&index=0&id=e68802e2&scoped=true&lang=css&");
/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_2_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_style_index_0_id_e68802e2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&":
/*!*********************************************************************************************!*\
  !*** ./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/common/MyContentTitle.vue?vue&type=template&id=e68802e2&scoped=true&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MyContentTitle_vue_vue_type_template_id_e68802e2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/components/content/autoExport/AutoExport.vue":
/*!**********************************************************!*\
  !*** ./src/components/content/autoExport/AutoExport.vue ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AutoExport.vue?vue&type=template&id=5ec6478e& */ "./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e&");
/* harmony import */ var _AutoExport_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AutoExport.vue?vue&type=script&lang=js& */ "./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AutoExport.vue?vue&type=style&index=0&lang=scss& */ "./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _AutoExport_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/content/autoExport/AutoExport.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js&":
/*!***********************************************************************************!*\
  !*** ./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--1-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./AutoExport.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss&":
/*!********************************************************************************************!*\
  !*** ./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss& ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib??vue-loader-options!./AutoExport.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_3_0_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e&":
/*!*****************************************************************************************!*\
  !*** ./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e& ***!
  \*****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./AutoExport.vue?vue&type=template&id=5ec6478e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/autoExport/AutoExport.vue?vue&type=template&id=5ec6478e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AutoExport_vue_vue_type_template_id_5ec6478e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./src/components/content/autoExport/js/auto_columns.js":
/*!**************************************************************!*\
  !*** ./src/components/content/autoExport/js/auto_columns.js ***!
  \**************************************************************/
/*! exports provided: setHeaders, setColumns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setHeaders", function() { return setHeaders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setColumns", function() { return setColumns; });
/* 表头部分
 */
//设置 列头(公共)
function setHeaders() {
  var header = ['组织', '定时导出', '正常机组导出', '报告模板', '存储位置', '推送人', '邮件推送', '微信openId', 'ftp服务ip', 'ftp服务端口', 'ftp服务用户名', 'ftp服务用户密码'];
  return header;
}
/* 表数据部分
 */
//设置columns（公共）（组织名称、机组名称、测点名称、采集器名称、测点类型、通道名称、是否有效、是否报警）

function setColumns(data) {
  var columns = [{
    data: "tree_name",
    editor: 'select',
    selectOptions: function selectOptions(row) {
      return data[row].t_name_sources;
    },
    readOnly: true
  }, {
    data: "timed_export_val",
    editor: 'select',
    selectOptions: function selectOptions(row) {
      return data[row].timed_export_sources;
    }
  }, {
    data: "mac_export_val",
    editor: 'select',
    selectOptions: function selectOptions(row) {
      return data[row].mac_export_sources;
    }
  }, {
    data: "template_val",
    editor: 'select',
    selectOptions: function selectOptions(row) {
      return data[row].template_sources;
    }
  }, {
    data: 'file_location'
  }, {
    data: "pusher"
  }, {
    data: "email"
  }, {
    data: "wechatOpenId"
  }, {
    data: "ip"
  }, {
    data: "port"
  }, {
    data: "username"
  }, {
    data: "password"
  }];
  return columns;
}

/***/ }),

/***/ "./src/components/content/autoExport/js/auto_hdtable.js":
/*!**************************************************************!*\
  !*** ./src/components/content/autoExport/js/auto_hdtable.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(swal) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return machdtable; });
/* harmony import */ var network_getApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! network/getApi */ "./src/network/getApi.js");
/* harmony import */ var common_hdtable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/hdtable.js */ "./src/common/hdtable.js");
/* harmony import */ var _auto_info_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auto_info.js */ "./src/components/content/autoExport/js/auto_info.js");
/* harmony import */ var _auto_columns_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auto_columns.js */ "./src/components/content/autoExport/js/auto_columns.js");
/* harmony import */ var utils_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! utils/utils */ "./src/utils/utils.js");
/* harmony import */ var _auto_methods__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auto_methods */ "./src/components/content/autoExport/js/auto_methods.js");
/* harmony import */ var _components_content_system_position_table_js_pos_info__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/content/system/position/table/js/pos_info */ "./src/components/content/system/position/table/js/pos_info.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var colWidth = '';
function machdtable(el, property) {
  var data = property.getData(); //创建表格属性的实例

  var tableDataIns = new tableData(property); // 组装振动表格数据

  var vibTable = {
    // 表格右键菜单
    contextMenu: tableDataIns.contextMenu(),
    // 表格显示的数据
    data: data,
    //表格的列
    colHeaders: tableDataIns.colHeaders(),
    //表格的列头自定义
    // nestedHeaders:tableDataIns.nestedHeaders(),
    //数据渲染renderData
    columns: tableDataIns.columns(),
    //单元格属性设置
    cells: tableDataIns.cells(),
    //新建行
    afterCreateRow: tableDataIns.afterCreateRow(),
    beforeChange: tableDataIns.beforeChange(),
    afterChange: tableDataIns.afterChange(),
    //移除行事件
    beforeRemoveRow: tableDataIns.beforeRemoveRow(),
    afterRemoveRow: tableDataIns.afterRemoveRow(),
    //列宽改变
    afterColumnResize: tableDataIns.afterColumnResize()
  };
  /**列宽设置**/
  //默认情况下自适应

  if (data.length === 0) {
    //如果表格没有数据，设置默认宽度，以免表头挤在一起
    vibTable.colWidths = '170';
  } else if (data.length && colWidth !== '') {
    //如果有数据，且拖动表格列宽的情况下，保存为拖动后的列宽
    vibTable.colWidths = colWidth;
  }

  return Object(common_hdtable_js__WEBPACK_IMPORTED_MODULE_1__["default"])(el, vibTable);
}
var deleteArray = []; //删除的信息数组
//表格的方法

var tableData =
/*#__PURE__*/
function () {
  function tableData(property) {
    _classCallCheck(this, tableData);

    this.tids = property.tids;
    this.getData = property.getData;
    this.getHot = property.getHot;
    this.initList = property.initList;
    this.changeList = property.changeList;
    this.router = property.router;
    this.store = property.store;
  }

  _createClass(tableData, [{
    key: "contextMenu",
    value: function contextMenu() {
      var that = this;
      var userType = parseInt(sessionStorage.getItem('userType'));
      return {
        items: {
          "row_above": {
            name: "插入新行"
          },
          "remove_row": {
            name: '删除这行',
            callback: function callback(key, options) {
              swal({
                title: "警告",
                text: "当前信息一经删除，该数据也将不保留。确定删除吗？",
                buttons: {
                  sure: "确认",
                  cancel: "取消"
                },
                dangerMode: true
              }).then(function (willDelete) {
                if (willDelete) {
                  var index = options[0].start.row;
                  var amount = parseInt(options[0].end.row - options[0].start.row) + 1;
                  that.getHot().alter("remove_row", index, amount);
                } else {
                  return false;
                }
              });
            }
          }
        }
      };
    }
    /* 表格的数据渲染 */

  }, {
    key: "colHeaders",
    value: function colHeaders() {
      return Object(_auto_columns_js__WEBPACK_IMPORTED_MODULE_3__["setHeaders"])();
    }
  }, {
    key: "columns",
    value: function columns() {
      return Object(_auto_columns_js__WEBPACK_IMPORTED_MODULE_3__["setColumns"])(this.getData());
    }
    /* 表格的方法渲染 */
    //振动的单元格渲染

  }, {
    key: "cells",
    value: function cells() {
      var that = this;
      return function (row, col, prop) {
        var data = that.getData();
        if (data.length == 0) return;
        var cellProperties = this;

        if (data[row].operate == 1 && col == 0) {
          cellProperties.readOnly = false;
        }

        return cellProperties;
      };
    } //创建测点之后的方法(共用)

  }, {
    key: "afterCreateRow",
    value: function afterCreateRow() {
      var that = this;
      var creatIndex = 0;
      return function (index, amount, source) {
        //添加行事件
        var data = that.getData();
        var addData = that.changeList.addData;
        var reportInfo = Object(_auto_info_js__WEBPACK_IMPORTED_MODULE_2__["createReport"])(that.initList, data.length);
        reportInfo.index = creatIndex;
        data[index] = reportInfo;
        var sendReport = Object(_auto_info_js__WEBPACK_IMPORTED_MODULE_2__["changeReport"])(reportInfo);
        addData[creatIndex++] = sendReport;
      };
    } //删除测点之前的方法,将要删除的方法存到deleteVData（共用）

  }, {
    key: "beforeRemoveRow",
    value: function beforeRemoveRow() {
      var that = this;
      return function (index, amount) {
        var deleteData = that.changeList.deleteData;

        if (index != null) {
          for (var i = 0; i < amount; i++) {
            var cellInfo = that.getPositionByIndex(index + i);
            deleteData.push(cellInfo.id);
            deleteArray.push(cellInfo);
          }
        }
      };
    } //删除测点方法 发送请求（共用）

  }, {
    key: "afterRemoveRow",
    value: function afterRemoveRow() {
      var that = this;
      return function () {
        var deleteData = that.changeList.deleteData;

        if (deleteData.length == 0) {
          swal({
            title: "提示",
            text: "删除信息成功",
            button: "确认"
          });
        }

        if (deleteData.length > 0) {
          network_getApi__WEBPACK_IMPORTED_MODULE_0__["default"].deleteAutoExport(deleteData).then(function (res) {
            deleteData = [];

            if (res.msg == 0) {
              swal({
                title: "提示",
                text: "删除信息成功",
                button: "确认"
              }).then(function (value) {
                that.remove_remake();
              });
            } else if (res.msg == 1) {
              console.log('参数为空！');
            } else if (res.msg == 2) {
              console.log('后台运行错误！');
            }
          })["catch"](function (err) {
            console.log('请求错误', err);
          });
        }
      };
    } //改变数据的时候拼装数据结构（共用）

  }, {
    key: "beforeChange",
    value: function beforeChange() {
      var that = this;
      return function (changes, source) {
        var change_index;
        var change_prop;
        var change_oldVal;
        var change_newVal;
        var flag;
        var hot = that.getHot();
        var data = that.getData();
        var regAdd = /^([a-zA-Z]){1}:(\\[a-zA-Z]+)*(\\)?$/; //地址目录正则

        var regEmail = /^\w+@[a-zA-Z0-9]{2,10}(?:\.[a-z]{2,4}){1,3}$/; //邮箱验证

        for (var i = 0; i < changes.length; i++) {
          var physicalRow = hot.toPhysicalRow(changes[i][0]);
          change_index = changes[i][0];
          change_prop = changes[i][1];
          change_oldVal = changes[i][2];
          change_newVal = changes[i][3];

          if (change_oldVal == change_newVal) {
            continue;
          }

          if (change_newVal == "") {
            return false;
          }

          var cellInfo = that.getPositionByIndex(change_index, that.type); //存储位置

          /*if(change_prop=="file_location"){
              if(!regAdd.test(change_newVal)){
                  swal({
                      title: "提示",
                      text: '请输入正确的文件地址',
                      button: "确认",
                  });
                  return false;
              }
          }*/
          //邮箱验证

          if (change_prop == "email") {
            if (!regEmail.test(change_newVal)) {
              swal({
                title: "提示",
                text: '请输入正确的邮箱地址',
                button: "确认"
              });
              return false;
            }
          }

          if (change_prop == "tree_name") {
            //组织
            flag = Object(utils_utils__WEBPACK_IMPORTED_MODULE_4__["setChangeCellResult"])(cellInfo.t_name_sources, cellInfo.t_name_sources_key, change_newVal, change_index);

            if (flag === false) {
              return false;
            } else {
              cellInfo.tree_id = flag;
            }
          }

          if (change_prop == "timed_export_val") {
            //定时导出
            flag = Object(utils_utils__WEBPACK_IMPORTED_MODULE_4__["setChangeCellResult"])(cellInfo.timed_export_sources, cellInfo.timed_export_sources_key, change_newVal, change_index);

            if (flag === false) {
              return false;
            } else {
              cellInfo.timed_export = flag;
            }
          }

          if (change_prop == "mac_export_val") {
            //正常机组导出
            flag = Object(utils_utils__WEBPACK_IMPORTED_MODULE_4__["setChangeCellResult"])(cellInfo.mac_export_sources, cellInfo.mac_export_sources_key, change_newVal, change_index);

            if (flag === false) {
              return false;
            } else {
              cellInfo.mac_export = flag;
            }
          }

          if (change_prop == "template_val") {
            //报告模板
            flag = Object(utils_utils__WEBPACK_IMPORTED_MODULE_4__["setChangeCellResult"])(cellInfo.template_sources, cellInfo.template_sources_key, change_newVal, change_index);

            if (flag === false) {
              return false;
            } else {
              cellInfo.template = flag;
            }
          }
        }
      };
    } //改变数据后的方法 （共用）

  }, {
    key: "afterChange",
    value: function afterChange() {
      var that = this;
      return function (changes, source) {
        //修改数据事件
        console.log('afterChange');
        var changeData = that.changeList.changeData;
        var addData = that.changeList.addData;

        if (changes) {
          changes.forEach(function (change) {
            var hot = that.getHot();
            var physicalRow = hot.toPhysicalRow(change[0]);
            var reportInfo = that.getPositionByIndex(change[0]);
            var sendReport = Object(_auto_info_js__WEBPACK_IMPORTED_MODULE_2__["changeReport"])(reportInfo);

            if (sendReport.operate) {
              addData[sendReport.index] = sendReport;
            } else {
              changeData[physicalRow] = sendReport;
            }
          });
        }
      };
    } // 列宽被改变后

  }, {
    key: "afterColumnResize",
    value: function afterColumnResize() {
      var that = this;
      return function (condition) {
        var hot = that.getHot();
        colWidth = hot.getColWidth(condition); //修改拖动后的列宽
      };
    }
    /* 根据索引行获取真实数据和物理行 (共用)*/

  }, {
    key: "getPositionByIndex",
    value: function getPositionByIndex(index) {
      var hot = this.getHot();
      var data = this.getData();
      var physicalRow = hot.toPhysicalRow(index);
      var info = data[physicalRow];
      return info;
    } //删除每一条之后更新数据

  }, {
    key: "remove_remake",
    value: function remove_remake() {
      var changeData = this.changeList.changeData;
      var addData = this.changeList.addData;
      var report;
      /* 删除changeData 和addData里面的数据 */

      for (var i = 0; i < deleteArray.length; i++) {
        report = deleteArray[i];

        if (report.operate == 0) {
          //旧信息
          delete changeData[report.index];
        } else if (report.operate == 1) {
          //新建信息
          delete addData[report.index];
        }
      }
    }
  }]);

  return tableData;
}();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! sweetalert */ "./node_modules/sweetalert/dist/sweetalert.min.js")))

/***/ }),

/***/ "./src/components/content/autoExport/js/auto_info.js":
/*!***********************************************************!*\
  !*** ./src/components/content/autoExport/js/auto_info.js ***!
  \***********************************************************/
/*! exports provided: getReportInfo, createReport, changeReport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getReportInfo", function() { return getReportInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReport", function() { return createReport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeReport", function() { return changeReport; });
/* harmony import */ var _auto_methods_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auto_methods.js */ "./src/components/content/autoExport/js/auto_methods.js");

/* 固定参数 */

var mac_export_source = {
  "0": "否",
  "1": "是"
}; //正常机组导出

var template_source = {
  '0': '中自庆安'
}; //报告模板

var timed_export_source = {
  '0': '每天',
  '1': '每周',
  '2': '每月',
  '3': '每季',
  '4': '每年'
}; //定时导出

function getReportInfo(res) {
  var data = [];
  var reportInfo = {};

  if (res === null || res === undefined || res.autoExport === null || res.autoExport === undefined) {
    console.log('数据错误！');
  } else {
    if (res.autoExport.length > 0) {
      res.autoExport.forEach(function (reportItem) {
        reportInfo = {
          id: reportItem.id,
          operate: 0,
          timed_export_val: timed_export_source[reportItem.timed_export],
          //定时导出:0每天，1每周，2每月，3每季度，4每年
          timed_export: reportItem.timed_export,
          timed_export_sources: Object.values(timed_export_source),
          timed_export_sources_key: Object.keys(timed_export_source),
          mac_export_val: mac_export_source[reportItem.mac_export],
          //正常机组导出:0否，1是
          mac_export: reportItem.mac_export,
          //正常机组导出:0否，1是
          mac_export_sources: Object.values(mac_export_source),
          mac_export_sources_key: Object.keys(mac_export_source),
          template_val: template_source[reportItem.template],
          template: reportItem.template,
          //报告模板：0中自庆安
          template_sources: Object.values(template_source),
          template_sources_key: Object.keys(template_source),
          file_location: reportItem.file_location,
          //存储位置
          pusher: reportItem.pusher,
          //推送人
          email: reportItem.email,
          //邮件推送
          wechatOpenId: reportItem.wechatOpenId,
          //微信推送openid
          ftp: reportItem.ftp,
          //ftp推送
          tree_id: reportItem.tree_id,
          tree_name: reportItem.tree_name,
          t_name_sources: [],
          t_name_sources_key: [],
          create_time: reportItem.create_time,
          //创建时间
          update_time: reportItem.update_time,
          //更新时间
          ip: reportItem.ip,
          //ftp服务器ip
          port: reportItem.port,
          //ftp服务器端口
          username: reportItem.username,
          //ftp服务器用户名
          password: reportItem.password //ftp服务器密码

        };
        data.push(reportInfo);
      });
    }
  }

  return data;
}
function createReport(initList, index) {
  var t_tree_source = initList.folderData;
  var tree_source_key = Object.keys(t_tree_source);
  var tree_source = Object.values(t_tree_source);
  var report = {
    operate: 1,
    timed_export_val: '每天',
    //定时导出:0每天，1每周，2每月，3每季度，4每年
    timed_export: '0',
    timed_export_sources: Object.values(timed_export_source),
    timed_export_sources_key: Object.keys(timed_export_source),
    mac_export_val: '否',
    //正常机组导出:0否，1是
    mac_export: '0',
    //正常机组导出:0否，1是
    mac_export_sources: Object.values(mac_export_source),
    mac_export_sources_key: Object.keys(mac_export_source),
    template_val: '中自庆安',
    template: '0',
    //报告模板：0中自庆安
    template_sources: Object.values(template_source),
    template_sources_key: Object.keys(template_source),
    file_location: '\\\\10.100.0.245\\中自庆安共享盘\\诊断报告',
    //存储位置
    pusher: '',
    //推送人
    email: '',
    //邮件推送
    wechatOpenId: '',
    //微信推送openid
    ftp: '',
    //ftp推送
    tree_id: tree_source_key[0],
    tree_name: tree_source[0],
    t_name_sources: tree_source,
    t_name_sources_key: tree_source_key,
    ip: '',
    //ftp服务器ip
    port: '',
    //ftp服务器端口
    username: '',
    //ftp服务器用户名
    password: '' //ftp服务器密码

  };
  return report;
}
function changeReport(oldData) {
  var report = {
    id: oldData.id,
    index: oldData.index,
    operate: oldData.operate,
    timed_export: oldData.timed_export,
    //定时导出:0每天，1每周，2每月，3每季度，4每年
    mac_export: oldData.mac_export,
    //正常机组导出:0否，1是
    template: oldData.template,
    //报告模板：0中自庆安
    file_location: oldData.file_location,
    //存储位置
    pusher: oldData.pusher,
    //推送人
    email: oldData.email,
    //邮件推送
    wechatOpenId: oldData.wechatOpenId,
    //微信推送openid
    ftp: oldData.ftp,
    //ftp推送
    tree_id: oldData.tree_id,
    tree_name: oldData.tree_name,
    ip: oldData.ip,
    //ftp服务器ip
    port: oldData.port,
    //ftp服务器端口
    username: oldData.username,
    //ftp服务器用户名
    password: oldData.password //ftp服务器密码

  };
  return report;
}

/***/ }),

/***/ "./src/components/content/autoExport/js/auto_methods.js":
/*!**************************************************************!*\
  !*** ./src/components/content/autoExport/js/auto_methods.js ***!
  \**************************************************************/
/*! exports provided: dgmType_name, get_data_type, getCodeName, getSpecVal, getSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dgmType_name", function() { return dgmType_name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_data_type", function() { return get_data_type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCodeName", function() { return getCodeName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSpecVal", function() { return getSpecVal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSpec", function() { return getSpec; });
//采集器类型名称转化
function dgmType_name(type) {
  var dgmType_name = '';

  switch (parseInt(type)) {
    case 1:
      dgmType_name = "dgu2000";
      break;

    case 2:
      dgmType_name = "dgu2200";
      break;

    case 3:
      dgmType_name = "dgu2001";
      break;

    case 4:
      dgmType_name = "mhd";
      break;

    case 5:
      dgmType_name = "dgu2600";
      break;
  }

  return dgmType_name;
}
/**
 * *频段类型转换
 * **/

function get_data_type(val) {
  var optfreqTypeVal = "";

  switch (val) {
    case "0":
      optfreqTypeVal = "short型";
      break;

    case "1":
      optfreqTypeVal = "速度值";
      break;
  }

  return optfreqTypeVal;
}
/**
 * 根据code获取特征值字段中文名
 */

function getCodeName(tmpCode, tt_pos_loc) {
  switch (parseInt(tmpCode)) {
    case 0:
      return "时间";
    //

    case 1000:
      return "转速";
    //（振动和包络字段）

    case 2000:
      return "有效值";
    //

    case 3000:
      return "峰值";
    //振动峰值

    case 4000:
      return "峰峰值";
    //振动峰峰值

    case 5000:
      return "包络解调值";
    //包络有效值(解调值)

    case 6000:
      return "包络特征值";
    // 包络特征值

    case 7000:
      return "数字量值";
    //数字量值

    case 8000:
      return "过程量值";
    //过程量值

    case 9000:
      return "有效值";
    //晃度有效值

    case 10000:
      return "峰值";
    //晃度峰值

    case 11000:
      return "峰峰值";
    //晃度峰峰值

    case 12001:
      return "频段1";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12002:
      return "频段2";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12003:
      return "频段3";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12004:
      return "频段4";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12005:
      return "频段5";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12006:
      return "频段6";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12007:
      return "频段7";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 12008:
      return "频段8";
    //可选频段频谱幅值可选频段n 对应code=12001~12008

    case 13001:
      return "频段1";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13002:
      return "频段2因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13003:
      return "频段3因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13004:
      return "频段4因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13005:
      return "频段5因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13006:
      return "频段6因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13007:
      return "频段7因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 13008:
      return "频段8因数";
    //可选频段频谱幅值最大值与频谱幅值的比值可选频段n 对应code=13001~13008

    case 14000:
      return "电压";
    //Gap电压

    case 15000:
      return "峰值因数";
    //峰值因数=振动峰值/振动有效值

    case 16000:
      return "转速测点转速值";
    //转速测点转速值

    case 17000:
      return "测点位置";
    //测点位置（不属于特征值，用于列表显示）

    case 18000:
      return "数字量类型";
    //数字量类型（不属于特征值，用于列表显示）

    case 19000:
      return "能量有效值";
    //能量有效值

    case 20000:
      return "有效值";
    //倾覆有效值

    case 21000:
      return "风速";
    //风速

    case 22000:
      return "功率";
    //功率

    case 23000:
      return "温度值";
    //温度值

    case 24000:
      return "峭度";
    //峭度

    case 25000:
      return "裕度";
    //裕度

    case 26000:
      return "歪度";
    //歪度

    case 27000:
      return "工艺量";
    //工艺量

    case 28000:
      return "转速直流量";
    //转速直流量

    case 29000:
      return "晃度位移值";
    //晃度位移

    case 30000:
      return "峰值";
    //倾覆峰值

    case 31000:
      return "峰峰值";
    //倾覆峰峰值

    case 32000:
      return "位移";
    //倾覆位移值

    case 33000:
      return "有效值";
    //倾角有效值

    case 34000:
      return "峰值";
    //倾角峰值

    case 35000:
      return "峰峰值";
    //倾角峰峰值

    case 36000:
      return "平均值";
    //倾角平均值

    case 37000:
      return "有效值";
    //合成倾角有效值

    case 38000:
      return "峰值";
    //合成倾角峰值

    case 39000:
      return "峰峰值";
    //合成倾角峰峰值

    case 40000:
      return "平均值";
    //合成倾角平均值/沉降角度:塔底的叫沉降；塔顶的叫合成倾角

    case 41000:
      return "平均值相位";
    //（合成）平均值相位

    case 42000:
      return "峰值相位";
    //（合成）峰值相位

    case 43000:
      return "沉降量";
    //（合成）沉降量

    case 44000:
      return "预紧力值";
    //预紧力值

    case 45000:
      return "温度值";
    //温度值（螺栓）

    case 46000:
      return "冲击值";
    //冲击值

    case 47000:
      return "位移";
    //倾角位移值

    case 48000:
      if (tt_pos_loc == 1 || tt_pos_loc == 0) {
        return "位移"; //（合成）倾角位移值:塔底的叫平均值；塔顶的叫位移值
      } else if (tt_pos_loc == 2) {
        return "沉降量"; //（合成）倾角位移值:塔底的叫平均值；塔顶的叫位移值
      }

      break;

    case 49000:
      return "振动一次积分有效值";
    //振动一次积分有效值

    case 50000:
      return "振动二次积分有效值";
    //振动二次积分有效值

    case 51000:
      return "温度值";
    //

    default:
      return "undefined";
  }
} //定义一份特征值列表

/**
 * params {pos_type:测点类型；tt_pos_loc：测点为13时的测点位置}
 *
 * */

function getSpecVal(pos_type, tt_pos_loc) {
  var specValList = [];
  var commonCode1 = [12001, 12002, 12003, 12004, 12005, 12006, 12007, 12008];
  var commonCode2 = [13001, 13002, 13003, 13004, 13005, 13006, 13007, 13008];

  switch (parseInt(pos_type)) {
    case 1:
      //转速
      specValList = [16000, 28000];
      break;

    case 2:
      //过程量测点
      specValList = [8000];
      break;

    case 3:
      //振动测点
      specValList = [1000, 2000, 3000, 4000, 19000, 15000, 14000, 24000, 25000, 26000, 46000].concat(commonCode1, commonCode2);
      break;

    case 4:
      //包络测点
      specValList = [1000, 5000, 6000, 19000, 14000, 46000].concat(commonCode1, commonCode2);
      break;

    case 5:
      //数字量测点
      specValList = [7000];
      break;

    case 6:
      //晃度测点
      specValList = [1000, 9000, 10000, 11000, 29000, 19000, 14000].concat(commonCode1);
      break;

    case 7:
      //温度测点
      specValList = [1000, 9000, 10000, 11000, 29000, 19000, 14000].concat(commonCode1);
      break;

    case 8:
      //振动阶次
      specValList = [1000, 2000, 3000, 4000, 19000, 15000, 14000, 24000, 25000, 26000, 46000].concat(commonCode1, commonCode2);
      break;

    case 9:
      //包络阶次
      specValList = [1000, 5000, 6000, 19000, 14000, 46000].concat(commonCode1, commonCode2);
      break;

    case 10:
      //工艺量测点
      specValList = [27000];
      break;

    case 11:
      //倾覆测点
      specValList = [1000, 20000, 30000, 31000, 32000].concat(commonCode1);
      break;

    case 12:
      //倾角测点
      specValList = [1000, 33000, 34000, 35000, 36000, 47000, 51000].concat(commonCode1);
      break;

    case 13:
      //合成倾角测点
      if (tt_pos_loc && tt_pos_loc == 2) {
        specValList = [1000, 37000, 38000, 39000, 40000, 43000, 41000, 42000, 51000].concat(commonCode1);
      } else {
        specValList = [1000, 37000, 38000, 39000, 40000, 41000, 42000, 48000, 51000].concat(commonCode1);
      }

      break;

    case 14:
      //螺栓测点
      specValList = [44000, 45000];
      break;

    default:
      return "undefined";
  }

  return specValList;
}
function getSpec(tt_pos_loc) {
  var specValList = [
  /**转速测点**/
  {
    "pos_type": 1,
    "valList": [{
      "name": "测点转速值",
      "type_name": "speed_value",
      "check": true,
      "code": 16000
    }, {
      "name": "转速直流量",
      "type_name": "speed_dc",
      "check": false,
      "code": 28000
    }]
  },
  /**过程量测点**/
  {
    "pos_type": 2,
    "valList": [{
      "name": "过程量值",
      "type_name": "value",
      "check": true,
      "code": 8000
    }]
  },
  /**振动测点**/
  {
    "pos_type": 3,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "vib_rms",
      "check": true,
      "code": 2000
    }, {
      "name": "峰值",
      "type_name": "vib_p",
      "check": true,
      "code": 3000
    }, {
      "name": "峰峰值",
      "type_name": "vib_pp",
      "check": true,
      "code": 4000
    }, {
      "name": "能量有效值",
      "type_name": "pow_rms",
      "check": true,
      "code": 19000
    }, {
      "name": "峰值因数",
      "type_name": "vib_pf",
      "check": true,
      "code": 15000
    }, {
      "name": "偏置电压",
      "type_name": "gap",
      "check": true,
      "code": 14000
    }, {
      "name": "峭度",
      "type_name": "vib_k",
      "check": true,
      "code": 24000
    }, {
      "name": "裕度",
      "type_name": "vib_cf",
      "check": true,
      "code": 25000
    }, {
      "name": "歪度",
      "type_name": "vib_sf",
      "check": true,
      "code": 26000
    }, {
      "name": "冲击值",
      "type_name": "sv",
      "check": false,
      "code": 46000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }, {
      "name": "频段因数1",
      "type_name": "vib_vsx1_scale",
      "check": false,
      "code": 13001
    }, {
      "name": "频段因数2",
      "type_name": "vib_vsx2_scale",
      "check": false,
      "code": 13002
    }, {
      "name": "频段因数3",
      "type_name": "vib_vsx3_scale",
      "check": false,
      "code": 13003
    }, {
      "name": "频段因数4",
      "type_name": "vib_vsx4_scale",
      "check": false,
      "code": 13004
    }, {
      "name": "频段因数5",
      "type_name": "vib_vsx5_scale",
      "check": false,
      "code": 13005
    }, {
      "name": "频段因数6",
      "type_name": "vib_vsx6_scale",
      "check": false,
      "code": 13006
    }, {
      "name": "频段因数7",
      "type_name": "vib_vsx7_scale",
      "check": false,
      "code": 13007
    }, {
      "name": "频段因数8",
      "type_name": "vib_vsx8_scale",
      "check": false,
      "code": 13008
    }]
  },
  /**包络测点**/
  {
    "pos_type": 4,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "包络解调值",
      "type_name": "spm_rms",
      "check": true,
      "code": 5000
    }, {
      "name": "包络特征值",
      "type_name": "spm_pp",
      "check": true,
      "code": 6000
    }, {
      "name": "能量有效值",
      "type_name": "pow_rms",
      "check": true,
      "code": 19000
    }, {
      "name": "偏置电压",
      "type_name": "gap",
      "check": true,
      "code": 14000
    }, {
      "name": "冲击值",
      "type_name": "sv",
      "check": false,
      "code": 46000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }, {
      "name": "频段因数1",
      "type_name": "vib_vsx1_scale",
      "check": false,
      "code": 13001
    }, {
      "name": "频段因数2",
      "type_name": "vib_vsx2_scale",
      "check": false,
      "code": 13002
    }, {
      "name": "频段因数3",
      "type_name": "vib_vsx3_scale",
      "check": false,
      "code": 13003
    }, {
      "name": "频段因数4",
      "type_name": "vib_vsx4_scale",
      "check": false,
      "code": 13004
    }, {
      "name": "频段因数5",
      "type_name": "vib_vsx5_scale",
      "check": false,
      "code": 13005
    }, {
      "name": "频段因数6",
      "type_name": "vib_vsx6_scale",
      "check": false,
      "code": 13006
    }, {
      "name": "频段因数7",
      "type_name": "vib_vsx7_scale",
      "check": false,
      "code": 13007
    }, {
      "name": "频段因数8",
      "type_name": "vib_vsx8_scale",
      "check": false,
      "code": 13008
    }]
  },
  /**数字量测点**/
  {
    "pos_type": 5,
    "valList": [{
      "name": "数字量值",
      "type_name": "digital_value",
      "check": true,
      "code": 7000
    }]
  },
  /**晃度测点**/
  {
    "pos_type": 6,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "rock_rms",
      "check": true,
      "code": 9000
    }, {
      "name": "峰值",
      "type_name": "rock_p",
      "check": true,
      "code": 10000
    }, {
      "name": "峰峰值",
      "type_name": "rock_pp",
      "check": true,
      "code": 11000
    }, {
      "name": "晃度位移值",
      "type_name": "rock_s",
      "check": true,
      "code": 29000
    }, {
      "name": "能量有效值",
      "type_name": "pow_rms",
      "check": true,
      "code": 19000
    }, {
      "name": "偏置电压",
      "type_name": "gap",
      "check": true,
      "code": 14000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }]
  },
  /**温度测点**/
  {
    "pos_type": 7,
    "valList": [{
      "name": "温度值",
      "type_name": "value",
      "check": true,
      "code": 23000
    }]
  },
  /**振动阶次测点**/
  {
    "pos_type": 8,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "vib_rms",
      "check": true,
      "code": 2000
    }, {
      "name": "峰值",
      "type_name": "vib_p",
      "check": true,
      "code": 3000
    }, {
      "name": "峰峰值",
      "type_name": "vib_pp",
      "check": true,
      "code": 4000
    }, {
      "name": "能量有效值",
      "type_name": "pow_rms",
      "check": true,
      "code": 19000
    }, {
      "name": "峰值因数",
      "type_name": "vib_pf",
      "check": true,
      "code": 15000
    }, {
      "name": "偏置电压",
      "type_name": "gap",
      "check": true,
      "code": 14000
    }, {
      "name": "峭度",
      "type_name": "vib_k",
      "check": true,
      "code": 24000
    }, {
      "name": "裕度",
      "type_name": "vib_cf",
      "check": true,
      "code": 25000
    }, {
      "name": "歪度",
      "type_name": "vib_sf",
      "check": true,
      "code": 26000
    }, {
      "name": "冲击值",
      "type_name": "sv",
      "check": false,
      "code": 46000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }, {
      "name": "频段因数1",
      "type_name": "vib_vsx1_scale",
      "check": false,
      "code": 13001
    }, {
      "name": "频段因数2",
      "type_name": "vib_vsx2_scale",
      "check": false,
      "code": 13002
    }, {
      "name": "频段因数3",
      "type_name": "vib_vsx3_scale",
      "check": false,
      "code": 13003
    }, {
      "name": "频段因数4",
      "type_name": "vib_vsx4_scale",
      "check": false,
      "code": 13004
    }, {
      "name": "频段因数5",
      "type_name": "vib_vsx5_scale",
      "check": false,
      "code": 13005
    }, {
      "name": "频段因数6",
      "type_name": "vib_vsx6_scale",
      "check": false,
      "code": 13006
    }, {
      "name": "频段因数7",
      "type_name": "vib_vsx7_scale",
      "check": false,
      "code": 13007
    }, {
      "name": "频段因数8",
      "type_name": "vib_vsx8_scale",
      "check": false,
      "code": 13008
    }]
  },
  /**包络阶次测点**/
  {
    "pos_type": 9,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "包络解调值",
      "type_name": "spm_rms",
      "check": true,
      "code": 5000
    }, {
      "name": "包络特征值",
      "type_name": "spm_pp",
      "check": true,
      "code": 6000
    }, {
      "name": "能量有效值",
      "type_name": "pow_rms",
      "check": true,
      "code": 19000
    }, {
      "name": "偏置电压",
      "type_name": "gap",
      "check": true,
      "code": 14000
    }, {
      "name": "冲击值",
      "type_name": "sv",
      "check": false,
      "code": 46000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }, {
      "name": "频段因数1",
      "type_name": "vib_vsx1_scale",
      "check": false,
      "code": 13001
    }, {
      "name": "频段因数2",
      "type_name": "vib_vsx2_scale",
      "check": false,
      "code": 13002
    }, {
      "name": "频段因数3",
      "type_name": "vib_vsx3_scale",
      "check": false,
      "code": 13003
    }, {
      "name": "频段因数4",
      "type_name": "vib_vsx4_scale",
      "check": false,
      "code": 13004
    }, {
      "name": "频段因数5",
      "type_name": "vib_vsx5_scale",
      "check": false,
      "code": 13005
    }, {
      "name": "频段因数6",
      "type_name": "vib_vsx6_scale",
      "check": false,
      "code": 13006
    }, {
      "name": "频段因数7",
      "type_name": "vib_vsx7_scale",
      "check": false,
      "code": 13007
    }, {
      "name": "频段因数8",
      "type_name": "vib_vsx8_scale",
      "check": false,
      "code": 13008
    }]
  },
  /**工艺量测点**/
  {
    "pos_type": 10,
    "valList": [{
      "name": "工艺量",
      "type_name": "value",
      "check": true,
      "code": 27000
    }]
  },
  /**倾覆测点**/
  {
    "pos_type": 11,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "overturn_rms",
      "check": true,
      "code": 20000
    }, {
      "name": "峰值",
      "type_name": "overturn_p",
      "check": true,
      "code": 30000
    }, {
      "name": "峰峰值",
      "type_name": "overturn_pp",
      "check": true,
      "code": 31000
    }, {
      "name": "位移",
      "type_name": "overturn_s",
      "check": true,
      "code": 32000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }]
  },
  /**倾角测点**/
  {
    "pos_type": 12,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "rock_rms",
      "check": true,
      "code": 33000
    }, {
      "name": "峰值",
      "type_name": "rock_p",
      "check": true,
      "code": 34000
    }, {
      "name": "峰峰值",
      "type_name": "rock_pp",
      "check": true,
      "code": 35000
    }, {
      "name": "平均值",
      "type_name": "rock_avg",
      "check": true,
      "code": 36000
    }, {
      "name": "位移",
      "type_name": "rock_s",
      "check": true,
      "code": 47000
    }, {
      "name": "温度值",
      "type_name": "temperature",
      "check": true,
      "code": 51000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }]
  },
  /**合成倾角测点**/
  {
    "pos_type": 13,
    "valList": [{
      "name": "转速",
      "type_name": "speed",
      "check": true,
      "code": 1000
    }, {
      "name": "有效值",
      "type_name": "overturn_rms",
      "check": true,
      "code": 37000
    }, {
      "name": "峰值",
      "type_name": "overturn_p",
      "check": true,
      "code": 38000
    }, {
      "name": "峰峰值",
      "type_name": "overturn_pp",
      "check": true,
      "code": 39000
    }, {
      "name": "平均值",
      "type_name": "rock_avg",
      "check": true,
      "code": 40000
    }, {
      "name": "位移",
      "type_name": "overturn_s",
      "check": true,
      "code": 48000
    }, {
      "name": "平均值方位",
      "type_name": "rock_rms",
      "check": true,
      "code": 41000
    }, {
      "name": "峰值方位",
      "type_name": "rock_p",
      "check": true,
      "code": 42000
    }, {
      "name": "温度值",
      "type_name": "temperature",
      "check": true,
      "code": 51000
    }, {
      "name": "频段1",
      "type_name": "vib_vsx1",
      "check": false,
      "code": 12001
    }, {
      "name": "频段2",
      "type_name": "vib_vsx2",
      "check": false,
      "code": 12002
    }, {
      "name": "频段3",
      "type_name": "vib_vsx3",
      "check": false,
      "code": 12003
    }, {
      "name": "频段4",
      "type_name": "vib_vsx4",
      "check": false,
      "code": 12004
    }, {
      "name": "频段5",
      "type_name": "vib_vsx5",
      "check": false,
      "code": 12005
    }, {
      "name": "频段6",
      "type_name": "vib_vsx6",
      "check": false,
      "code": 12006
    }, {
      "name": "频段7",
      "type_name": "vib_vsx7",
      "check": false,
      "code": 12007
    }, {
      "name": "频段8",
      "type_name": "vib_vsx8",
      "check": false,
      "code": 12008
    }]
  },
  /**螺栓测点**/
  {
    "pos_type": 14,
    "valList": [{
      "name": "预紧力值",
      "type_name": "speed_value",
      "check": true,
      "code": 44000
    }, {
      "name": "温度值",
      "type_name": "speed_dc",
      "check": true,
      "code": 45000
    }]
  }];

  if (tt_pos_loc && tt_pos_loc == 2) {
    specValList[12] = {
      "pos_type": 13,
      "valList": [{
        "name": "转速",
        "type_name": "speed",
        "check": true,
        "code": 1000
      }, {
        "name": "有效值",
        "type_name": "overturn_rms",
        "check": true,
        "code": 37000
      }, {
        "name": "峰值",
        "type_name": "overturn_p",
        "check": true,
        "code": 38000
      }, {
        "name": "峰峰值",
        "type_name": "overturn_pp",
        "check": true,
        "code": 39000
      }, {
        "name": "沉降角度",
        "type_name": "rock_avg",
        "check": true,
        "code": 40000
      }, {
        "name": "沉降量",
        "type_name": "rock_pp",
        "check": true,
        "code": 43000
      }, {
        "name": "平均值方位",
        "type_name": "rock_rms",
        "check": true,
        "code": 41000
      }, {
        "name": "峰值方位",
        "type_name": "rock_p",
        "check": true,
        "code": 42000
      }, {
        "name": "温度值",
        "type_name": "temperature",
        "check": true,
        "code": 51000
      }, {
        "name": "频段1",
        "type_name": "vib_vsx1",
        "check": false,
        "code": 12001
      }, {
        "name": "频段2",
        "type_name": "vib_vsx2",
        "check": false,
        "code": 12002
      }, {
        "name": "频段3",
        "type_name": "vib_vsx3",
        "check": false,
        "code": 12003
      }, {
        "name": "频段4",
        "type_name": "vib_vsx4",
        "check": false,
        "code": 12004
      }, {
        "name": "频段5",
        "type_name": "vib_vsx5",
        "check": false,
        "code": 12005
      }, {
        "name": "频段6",
        "type_name": "vib_vsx6",
        "check": false,
        "code": 12006
      }, {
        "name": "频段7",
        "type_name": "vib_vsx7",
        "check": false,
        "code": 12007
      }, {
        "name": "频段8",
        "type_name": "vib_vsx8",
        "check": false,
        "code": 12008
      }]
    };
  } else {
    specValList[12] = {
      "pos_type": 13,
      "valList": [{
        "name": "转速",
        "type_name": "speed",
        "check": true,
        "code": 1000
      }, {
        "name": "有效值",
        "type_name": "overturn_rms",
        "check": true,
        "code": 37000
      }, {
        "name": "峰值",
        "type_name": "overturn_p",
        "check": true,
        "code": 38000
      }, {
        "name": "峰峰值",
        "type_name": "overturn_pp",
        "check": true,
        "code": 39000
      }, {
        "name": "平均值",
        "type_name": "rock_avg",
        "check": true,
        "code": 40000
      }, {
        "name": "平均值方位",
        "type_name": "rock_rms",
        "check": true,
        "code": 41000
      }, {
        "name": "峰值方位",
        "type_name": "rock_p",
        "check": true,
        "code": 42000
      }, {
        "name": "位移",
        "type_name": "overturn_s",
        "check": true,
        "code": 48000
      }, {
        "name": "温度值",
        "type_name": "temperature",
        "check": true,
        "code": 51000
      }, {
        "name": "频段1",
        "type_name": "vib_vsx1",
        "check": false,
        "code": 12001
      }, {
        "name": "频段2",
        "type_name": "vib_vsx2",
        "check": false,
        "code": 12002
      }, {
        "name": "频段3",
        "type_name": "vib_vsx3",
        "check": false,
        "code": 12003
      }, {
        "name": "频段4",
        "type_name": "vib_vsx4",
        "check": false,
        "code": 12004
      }, {
        "name": "频段5",
        "type_name": "vib_vsx5",
        "check": false,
        "code": 12005
      }, {
        "name": "频段6",
        "type_name": "vib_vsx6",
        "check": false,
        "code": 12006
      }, {
        "name": "频段7",
        "type_name": "vib_vsx7",
        "check": false,
        "code": 12007
      }, {
        "name": "频段8",
        "type_name": "vib_vsx8",
        "check": false,
        "code": 12008
      }]
    };
  }

  return specValList;
}

/***/ }),

/***/ "./src/components/content/autoExport/js/auto_mixin.js":
/*!************************************************************!*\
  !*** ./src/components/content/autoExport/js/auto_mixin.js ***!
  \************************************************************/
/*! exports provided: macMixin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "macMixin", function() { return macMixin; });
/* harmony import */ var _auto_hdtable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auto_hdtable.js */ "./src/components/content/autoExport/js/auto_hdtable.js");
/* harmony import */ var _auto_info_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auto_info.js */ "./src/components/content/autoExport/js/auto_info.js");
/* harmony import */ var _auto_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auto_methods */ "./src/components/content/autoExport/js/auto_methods.js");
/* harmony import */ var network_getApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! network/getApi */ "./src/network/getApi.js");




var macMixin = {
  data: function data() {
    return {
      hot: {},
      //hottable对象
      data: [],
      //hottable的data数据
      initList: {
        folderData: {} //组织信息下拉选项

      },
      changeList: {
        changeData: {},
        //修改报告自动导出的数据
        addData: {},
        //新增报告自动导出数据
        deleteData: [] //删除的数据

      },
      scroll: 0 //滚动距离

    };
  },
  mounted: function mounted() {
    this.getListData();
  },
  methods: {
    getListData: function getListData() {
      var _this = this;

      network_getApi__WEBPACK_IMPORTED_MODULE_3__["default"].selectAutoExport().then(function (res) {
        if (res.treeInfo !== null && res.treeInfo.length > 0) {
          res.treeInfo.forEach(function (folder) {
            _this.initList.folderData[folder.folderId] = folder.folderName;
          });
        }

        var result = Object(_auto_info_js__WEBPACK_IMPORTED_MODULE_1__["getReportInfo"])(res);

        if (_this.initList.folderData.length === 0) {
          _this.isShow = true;
        } else {
          //组织position结构
          _this.data = result; //渲染表格

          _this.isShow = false;

          _this.renderTable();
        }
      });
    },

    /* 渲染表格 */
    renderTable: function renderTable() {
      var _this2 = this;

      var HotTable = null;
      this.hot = null;
      HotTable = document.getElementById('HotTable');
      var property = {
        tids: this.$store.state.tids,
        getData: this.getData,
        getHot: this.getHot,
        initList: this.initList,
        changeList: this.changeList,
        router: this.$router,
        store: this.$store
      }; //创建table

      this.hot = new _auto_hdtable_js__WEBPACK_IMPORTED_MODULE_0__["default"](HotTable, property);
      this.reRenderSelectOption(this.hot, this.data);
      /* 监听滚动事件 */

      var wtHolder = document.getElementsByClassName('wtHolder')[0];
      wtHolder.addEventListener('scroll', function (e) {
        _this2.hot.destroyEditor(); //处理当选择下拉框后拖动滚动条框框会跟着跑的问题

      });
    },
    reRenderSelectOption: function reRenderSelectOption(hot, data) {
      //重新渲染selectOption,让每个option
      var cellMeta = hot.getCellMetaAtRow(0);
      var rows = data.length;
      cellMeta.forEach(function (item) {
        if (item.prop == "tree_name") {
          //组织
          for (var i = 0; i <= rows; i++) {
            hot.setCellMeta(i, item.col, "selectOptions", function (row) {
              return data[hot.toPhysicalRow(row)].t_name_sources;
            });
          }
        }
      });
    },
    //获取data
    getData: function getData() {
      return this.data;
    },

    /* 获取hot实例 */
    getHot: function getHot() {
      return this.hot;
    }
  }
};

/***/ })

}]);
//# sourceMappingURL=30-7cc3521e.js.map