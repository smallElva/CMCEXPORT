{"version":3,"sources":["webpack:///src/components/content/regulate/regulateAll.vue","webpack:///./src/components/content/regulate/regulateAll.vue?69e2","webpack:///./src/components/content/regulate/regulateAll.vue?7c5b","webpack:///./src/components/content/regulate/regulateAll.vue","webpack:///./src/components/content/regulate/regulateAll.vue?11b0","webpack:///./src/components/content/regulate/regulateAll.vue?1185","webpack:///./src/components/content/regulate/regulateAll.vue?d75f"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA,qBADA;AAEA,MAFA,kBAEA;AACA;AACA,qBADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA;AAAA,OAJA,EAKA;AAAA;AAAA;AAAA;AAAA,OALA,CAFA;AASA;AACA,wBADA;AAEA,uBAFA,CAGA;;AAHA,OATA;AAcA;AACA,yBADA;AAEA;AAFA,OAdA;AAkBA;AACA,kBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA;AAJA,OAlBA;AAuBA;AACA,yBAxBA;AAwBA;AACA,iBAzBA;AA0BA,iBA1BA;AA0BA;AACA,uBA3BA;AA4BA,gBA5BA;AA4BA;AACA,sBA7BA;AA6BA;AACA,kBA9BA;AA8BA;AACA,iBA/BA;AA+BA;AACA,gBAhCA,CAgCA;;AAhCA;AAkCA,GArCA;AAsCA,SAtCA,qBAsCA;AACA;AACA,GAxCA;AAyCA;AACA;AACA;AACA;AACA;AACA,GA9CA;AA+CA;AACA;AACA,YAFA,oBAEA,GAFA,EAEA;AAAA;;AAAA;AACA;AACA;AACA,OAFA;AAGA;AACA,wBALA,CAKA;;AACA;AACA,sBADA;AAEA;AAFA;AAIA,yFACA,IADA,CACA;AACA;AACA;;AACA;AACA;AACA,WAFA;;AAGA;AACA;AAEA,OAVA,WAWA;AACA;AACA,OAbA;AAcA,KA1BA;;AA2BA;AACA;AACA;AACA,cA9BA,wBA8BA;AACA;AACA,kBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA;AAJA,QADA,CAMA;;AACA,gCAPA,CAOA;;AACA;AACA,wBATA,CASA;;AACA;AACA,uBAXA,CAWA;;AACA,6BAZA,CAYA;;AACA,yBAbA,CAaA;;AACA,wBAdA,CAcA;;AACA,uBAfA,CAeA;AACA,KA9CA;AA+CA;AACA,aAhDA,uBAgDA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,OARA,MASA;AACA;AACA;AACA,KA9DA;AA+DA;AACA,aAhEA,uBAgEA;AAAA;;AACA;AACA,qCADA;AAEA,yCAFA;AAGA;AAHA;AAKA,gGACA,IADA,CACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,aAVA;AAWA,WAZA,MAaA;AACA;AACA,4CAFA,CAEA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAfA;;AAiBA;AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA,qBAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,OAhEA,WAiEA;AACA;AACA,OAnEA;AAoEA,KA1IA;AA2IA;AACA,UA5IA,oBA4IA;AACA;AACA;AACA,qBADA;AAEA,4BAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA,qBADA;AAEA,kCAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA;AACA,SAFA;AAGA;;AACA;AACA,yBADA;AAEA,+DAFA;AAGA,2BAHA;AAIA,+DAJA;AAKA,oBALA;AAMA,oBANA;AAOA,kBAPA;AAQA;AARA;AAUA;AACA;;AACA;AACA;AACA;AACA,KAjLA;AAkLA;AACA,oBAnLA,4BAmLA,OAnLA,EAmLA,MAnLA,EAmLA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA,2BADA;AAEA,0BAFA;AAGA,yBAHA;AAIA,wBAJA;AAKA;AALA;AAOA,WARA,MASA;AACA;AACA;AACA,2BADA;AAEA,8BAFA;AAGA,8BAHA;AAIA,6BAJA;AAKA,8BALA;AAMA,6BANA;AAOA,6BAPA;AAQA,6BARA;AASA,6BATA;AAUA,4BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,2BAbA;AAcA;AAdA;AAgBA,aAjBA,MAkBA;AACA;AACA,2BADA;AAEA,6BAFA;AAGA,4BAHA;AAIA,4BAJA;AAKA;AALA;AAOA;AACA,WA5BA,MA6BA;AACA;AAAA;AACA;AACA,2BADA;AAEA,4BAFA;AAGA,4BAHA;AAIA;AAJA;AAMA,aAPA,MAQA;AAAA;AACA;AACA,2BADA;AAEA,6BAFA;AAGA,6BAHA;AAIA,4BAJA;AAKA,4BALA;AAMA,4BANA;AAOA,4BAPA;AAQA,4BARA;AASA,4BATA;AAUA,4BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,4BAbA;AAcA,4BAdA;AAeA,4BAfA;AAgBA,4BAhBA;AAiBA,4BAjBA;AAkBA,2BAlBA;AAmBA,2BAnBA;AAoBA,2BApBA;AAqBA,2BArBA;AAsBA,2BAtBA;AAuBA,2BAvBA;AAwBA;AAxBA;AA0BA,aA3BA,MA4BA;AAAA;AACA;AACA,2BADA;AAEA,4BAFA;AAGA,4BAHA;AAIA,2BAJA;AAKA;AALA;AAOA,aARA,MASA;AAAA;AACA;AACA,2BADA;AAEA,6BAFA;AAGA,4BAHA;AAIA,4BAJA;AAKA,4BALA;AAMA,4BANA;AAOA,4BAPA;AAQA,4BARA;AASA,2BATA;AAUA,2BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,4BAbA;AAcA,4BAdA;AAeA,4BAfA;AAgBA,4BAhBA;AAiBA,4BAjBA;AAkBA,4BAlBA;AAmBA,2BAnBA;AAoBA,6BApBA;AAqBA,2BArBA;AAsBA,2BAtBA;AAuBA,8BAvBA;AAwBA,2BAxBA;AAyBA,2BAzBA;AA0BA,+BA1BA;AA2BA,6BA3BA;AA4BA,2BA5BA;AA6BA,6BA7BA;AA8BA,0BA9BA;AA+BA,8BA/BA;AAgCA,4BAhCA;AAiCA,6BAjCA;AAkCA;AAlCA;AAoCA;AACA,WApFA,MAqFA;AACA;AACA;AADA;AAGA;;AACA;;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAFA,MAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA,WAPA,MAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,WAFA,MAGA;AACA;AAAA;AAAA;AACA;;AACA;;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,WAFA,MAGA;AACA;AAAA;AAAA;AAAA;AACA,WAFA,MAGA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;AACA;AACA;AACA;AAhKA;;AAiKA;AACA;AACA,KAzVA;AA0VA;AACA,iBA3VA,yBA2VA,OA3VA,EA2VA;AACA;;AACA;AACA;AAAA;AACA;AACA,uBADA;AAEA;AAFA;AAIA;;AACA;AAAA;AACA;AACA,uBADA;AAEA,wBAFA;AAGA;AAHA;AAKA;;AACA;AAAA;AAAA;AACA;AACA,uBADA;AAEA,wBAFA;AAGA;AAHA;AAKA;;AACA;AAAA;AACA;AACA,uBADA;AAEA;AAFA;AAIA;;AACA;AACA;AACA;AA7BA;;AA8BA;AACA;AACA,KA7XA;AA8XA;AACA,gBA/XA,wBA+XA,IA/XA,EA+XA;AACA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;;AACA;AACA;AACA,KA3YA;AA4YA;AACA,mBA7YA,2BA6YA,IA7YA,EA6YA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA,SAHA;;AAIA;AACA;AACA,uBADA;AAEA,4BAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,KAtaA;AAuaA;AACA,aAxaA,qBAwaA,KAxaA,EAwaA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SANA;AAOA;;AACA;AACA,KAvbA;AAwbA;AACA,YAzbA,oBAybA,IAzbA,EAybA;AACA;AACA;AACA,OAFA;AAGA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA,KArcA;AAscA;AACA,aAvcA,qBAucA,GAvcA,EAucA;AACA;AACA;AACA,OAFA;AAGA;AACA,2BALA,CAMA;;AACA,gCAPA,CAOA;;AACA;AACA,uBATA,CASA;;AACA,6BAVA,CAUA;;AACA,yBAXA,CAWA;;AACA,wBAZA,CAYA;;AACA,uBAbA,CAaA;;AACA;AACA,KAtdA;AAudA;AACA,iBAxdA,2BAwdA;AACA;AACA;AACA;;AACA;AACA;AACA,qBADA;AAEA,4BAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA,qBADA;AAEA,wBAFA;AAGA;AAHA;AAKA;AACA,OAPA,MAQA;AACA;AACA,qBADA;AAEA,6BAFA;AAGA;AAHA;AAKA;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACA,6CADA;AACA;AACA,qCAFA;AAEA;AACA,yCAHA;AAGA;AACA,yCAJA;AAIA;AACA,0CALA,CAKA;;AALA;AAOA,8EACA,IADA,CACA;AACA;AACA;AACA,SAFA,EAEA,IAFA;AAGA,OALA,WAMA;AACA;AACA,OARA;AAUA,KAzgBA;;AA0gBA;AACA;AACA;AACA,WA7gBA,qBA6gBA;AACA;AACA;AACA,qBADA;AAEA,4BAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OANA;AAOA;AACA;AACA;AACA,KAjiBA;;AAmiBA;AACA;AACA;AACA,cAtiBA,wBAsiBA;AACA;AACA,KAxiBA;;AAyiBA;AACA;AACA;AACA,cA5iBA,wBA4iBA;AACA;AACA,KA9iBA;;AA+iBA;AACA;AACA;AACA,gBAljBA,0BAkjBA;AACA;AACA;AACA;AACA;AACA,KAvjBA;;AAwjBA;AACA;AACA;AACA,cA3jBA,wBA2jBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAHA,MAIA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,WAHA,MAIA;AACA;AACA;AACA;AACA,OAnBA;AAoBA;AACA,KAtlBA;;AAulBA;AACA;AACA;AACA,QA1lBA,kBA0lBA;AAAA;;AACA;AACA;AACA;AACA;AACA,iDADA;AAEA,yCAFA;AAGA,6CAHA;AAIA,yBAJA;AAKA,6BALA;AAMA,mCANA;AAOA;AAPA;AASA;AACA,OAXA;AAYA,iGACA,IADA,CACA;AACA;AACA;AACA,uBADA;AAEA,wBAFA;AAGA;AAHA;AAKA,SANA,MAOA;AACA;AACA,uBADA;AAEA,wBAFA;AAGA;AAHA;AAKA;AACA,OAhBA,WAiBA;AACA;AACA,OAnBA;AAoBA,KA7nBA;;AA8nBA;AACA,aA/nBA,qBA+nBA,CA/nBA,EA+nBA;AACA,0BADA,CACA;AACA;;AACA;AACA;;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,OAPA;;AAQA;AACA;AACA;AACA,OAHA;AAIA,KAhpBA;AAipBA,UAjpBA,oBAipBA;AAAA;AACA;AACA;;AACA;AACA;AACA,0BADA;AAEA,wBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AACA,OAXA,MAYA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AACA,KA3qBA;AA4qBA,WA5qBA,qBA4qBA;AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA,OAVA,MAWA;AACA;AACA,qBADA;AAEA,4BAFA;AAGA;AAHA;AAKA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA,wBAFA,CAGA;;AAHA;AAKA,OAhBA,MAiBA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AAEA,KAztBA;AA0tBA,yBA1tBA,mCA0tBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AAruBA;AA/CA,G;;;;;;;;;;;;ACrHA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAiC,gBAAgB,EAAE;AAClE,iBAAiB,SAAS,qBAAqB,EAAE;AACjD,mBAAmB,gCAAgC;AACnD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC;AACrD,uBAAuB,6BAA6B;AACpD,yBAAyB,wBAAwB;AACjD,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC,YAAY,aAAa,EAAE;AAC5D;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC,YAAY,aAAa,EAAE;AAC5D;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,yBAAyB,wBAAwB;AACjD,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrlBA;AAAA;AAAA;AAAA;AAAA;AAAsG;AACvC;AACL;AACqC;;;AAG/F;AACmH;AACnH,gBAAgB,6HAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,kGAAM;AACR,EAAE,2GAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAAwO,CAAgB,4RAAG,EAAC,C;;;;;;;;;;;;ACA5P;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"js/20-d201c415.js","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"myTable\" class=\"myTable\">\r\n            <div id=\"tableContent\">\r\n                <div class=\"regulate-block\">\r\n                    <div class=\"regulate-left\">\r\n                        <div class=\"search\" @click.stop>\r\n                            <input class=\"over-search-input\" type=\"text\" placeholder=\"搜索\" ref=\"searchInput\">\r\n                            <i class=\"iconfont icon-zhongzi-sousuo search-icon\" @click=\"searchDgm\"></i>\r\n                        </div>\r\n                        <ul class=\"search-result\">\r\n                            <li class=\"search-li\" v-for=\"dgm in searchDgmList\" @click=\"chooseDgm(dgm)\" :class=\"dgm.active?'active':''\">{{dgm.dgm_id}}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"regulate-right\">\r\n                        <div class=\"setRegulate\">\r\n                            <div class=\"header\">\r\n                                <div class=\"header-text\">\r\n                                    校正系数设置 - {{selectDgm.dgm_id}}\r\n                                </div>\r\n                                <div class=\"regulate-btn\">\r\n                                    <button class=\"btn\" @click=\"addRow()\">新建行</button>\r\n                                    <button class=\"btn\" @click=\"startRealData()\" :disabled=\"chooseChList===undefined || chooseChList.length===0\">开始</button>\r\n                                    <button class=\"btn\" @click=\"onReset()\" :disabled=\"chooseChList===undefined || chooseChList.length===0\">重置</button>\r\n                                </div>\r\n                            </div>\r\n                            <table class=\"regulate-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th class=\"indexNum\">序号</th>\r\n                                    <th>通道类型</th>\r\n                                    <th>量程</th>\r\n                                    <th>输入1(mV)</th>\r\n                                    <th>输入2(mV)</th>\r\n                                    <th>误差范围(%)</th>\r\n                                    <th>操作</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr v-for=\"(item,index) in rowList\" @click=\"addClass(item)\" :class=\"item.active===1?'active':''\">\r\n                                    <td class=\"indexNum\">{{Number(index+1)}}</td>\r\n                                    <td>\r\n                                        <select class=\"rangeSelect\" v-model=\"item.selectChType\" @change=\"changeChType(item)\">\r\n                                            <option v-for=\"(value,key) in item.chTypeList\" :value=\"key\">{{value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class=\"rangeSelect\" v-model=\"item.selectRangeType\" @change=\"changeRangeType(item)\">\r\n                                            <option v-for=\"(value,key) in item.rangeTypeList\" :value=\"key\">{{value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input class=\"table-input\" v-model=\"item.input1\"></td>\r\n                                    <td><input class=\"table-input\" v-model=\"item.input2\"></td>\r\n                                    <td><input class=\"table-input\" v-model=\"item.range\"></td>\r\n                                    <td><button class=\"deleteBtn\" @click.stop=\"deleteRow(index)\">删除</button></td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div class=\"setRegulate\">\r\n                            <div class=\"header\">\r\n                                <div class=\"header-text\">\r\n                                    校正系数计算 - {{selectChTypeVal}}\r\n                                </div>\r\n                                <div class=\"regulate-btn\">\r\n                                    <button class=\"btn\" :disabled=\"data_step!=1\" @click=\"fixOutput1()\">保存输出1</button>\r\n                                    <button class=\"btn\" :disabled=\"data_step!=2\" @click=\"fixOutput2()\">保存输出2</button>\r\n                                    <button class=\"btn\" :disabled=\"data_step!=3\" @click=\"calCorrect()\">计算</button>\r\n                                    <button class=\"btn\" :disabled=\"data_step!=4\" @click=\"save()\">保存</button>\r\n                                    <button class=\"btn\" :disabled=\"data_step!=6\" @click=\"fixC_output2()\">校正输出2</button>\r\n                                </div>\r\n                            </div>\r\n                            <table class=\"regulate-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>通道名称</th>\r\n                                    <th>输出1</th>\r\n                                    <th>输出2</th>\r\n                                    <th>交流校正系数</th>\r\n                                    <th>零点漂移</th>\r\n                                    <th>校正输出2</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr v-for=\"ch in chooseChList\">\r\n                                    <td>{{ch.ch_name}}</td>\r\n                                    <td>\r\n                                        {{ch.output1}}\r\n                                    </td>\r\n                                    <td>{{ch.output2}}</td>\r\n                                    <td><input class=\"table-input\" v-model=\"ch.ac_corr\"></td>\r\n                                    <td><input class=\"table-input\" v-model=\"ch.null_shift\"></td>\r\n                                    <td :class=\"ch.error?'error':''\">{{ch.c_output2}}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"controls-btn\">\r\n                <div class=\"push-controls\">\r\n                    <a :class=\"leftClass\" @click=\"toLeft()\"> < </a>\r\n                    <a :class=\"rightClass\" @click=\"toRight()\"> > </a>\r\n                </div>\r\n                <div class=\"btn-content\" @mousedown=\"mouseMove($event)\">\r\n                    <button v-for=\"(btn,index) in btnData\" :key=\"index\"  @click=\"getTable(btn)\" class=\"con-dgm-btn\" :class=\"btn.active?'active':''\"> {{btn.textBtn}}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import getApi from 'network/getApi'\r\n    import {debounce,round} from 'utils/utils'\r\n    import { ConvertPinyin } from 'assets/lib/pinyin.js'\r\n    export default {\r\n        name: \"regulateAll\",\r\n        data(){\r\n            return{\r\n                title:'校正系数计算',\r\n                btnData: [//按钮初始化\r\n                    {type:1,textBtn:\"DGU2000V1校正系数\",active:true},\r\n                    {type:3,textBtn:\"DGU2000V2校正系数\",active:false},\r\n                    {type:2,textBtn:\"DGU2200校正系数\",active:false},\r\n                    {type:7,textBtn:\"TMU2000校正系数\",active:false},\r\n                    {type:9,textBtn:\"DGU2000E校正系数\",active:false},\r\n                ],\r\n                leftClass: {\r\n                    \"left-btn\": true,\r\n                    \"active\": false,\r\n                    // \"disable\" : true,\r\n                },\r\n                rightClass: {\r\n                    \"right-btn\": true,\r\n                    \"active\": false,\r\n                },\r\n                selectDgm:{\r\n                    dgm_id: '',\r\n                    dgm_type: '',\r\n                    dgm_name: \"\",\r\n                    machine_id: \"\",\r\n                },//所选中的dgm\r\n                selectChTypeVal:'',//所选中的通道类型\r\n                rowList:[],\r\n                dgmList:[],//采集器列表\r\n                searchDgmList:[],\r\n                chList:{},//初始通道信息\r\n                chooseChList:[],//所选通道类型下的通道信息\r\n                data_step:0,//按钮的执行步骤，0初始状态，实时关闭，\r\n                timer:null,//定时器\r\n                curObj:{},//当前所选择的通道信息\r\n            }\r\n        },\r\n        mounted(){\r\n            this.getTable(this.btnData[0]);\r\n        },\r\n        destroyed:function () {\r\n            this.data_step = 0;\r\n            var that = this;\r\n            clearInterval(that.timer);\r\n            that.timer = null;\r\n        },\r\n        methods: {\r\n            // 获取采集器信息\r\n            getTable(btn) { //点击下标签的时候改变active，改变路由，刷新之后路由不变，active不变，点击左边测点设置 active会有问题\r\n                this.btnData.forEach(btn=>{\r\n                    btn.active = false;\r\n                });\r\n                btn.active = true;\r\n                this.initParams();//切换采集器类型按钮，则初始化数据\r\n                let params = {\r\n                    type:btn.type,\r\n                    t_ids:this.$store.state.tids,\r\n                }\r\n                getApi.getCorrectionFactor(params)\r\n                    .then(res => {\r\n                        if(res && res.length){\r\n                            this.dgmList = res;\r\n                            this.dgmList.forEach(dgm=>{\r\n                                dgm.active = false;\r\n                            })\r\n                            this.searchDgmList=this.dgmList.concat();\r\n                        }\r\n\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误' ,err)\r\n                    })\r\n            },\r\n            /**\r\n             * 初始化\r\n             */\r\n            initParams(){\r\n                this.selectDgm={\r\n                    dgm_id: '',\r\n                    dgm_type: '',\r\n                    dgm_name: \"\",\r\n                    machine_id: \"\",\r\n                };//所选中的dgm\r\n                this.selectChTypeVal='';//所选中的通道类型\r\n                this.rowList=[];\r\n                this.dgmList=[];//采集器列表\r\n                this.searchDgmList=[];\r\n                this.chList={};//初始通道信息\r\n                this.chooseChList=[];//所选通道类型下的通道信息\r\n                this.data_step=0;//按钮的执行步骤，0初始状态，实时关闭，\r\n                this.timer=null;//定时器\r\n                this.curObj={};//当前所选择的通道信息\r\n            },\r\n            // 过滤采集器\r\n            searchDgm(){\r\n                let search_text = this.$refs.searchInput.value;\r\n                if(search_text.length>0){\r\n                    let test_atr = new RegExp(search_text);\r\n                    this.searchDgmList=[];\r\n                    for(let i=0;i<this.dgmList.length;i++){\r\n                        if(test_atr.test(this.dgmList[i].dgm_id) || ConvertPinyin(this.dgmList[i].dgm_id).indexOf(search_text)>=0){\r\n                            this.searchDgmList.push(this.dgmList[i]);\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    this.searchDgmList=this.dgmList.concat();\r\n                }\r\n            },\r\n            //获取采集器通道信息\r\n            getChList(){\r\n                let params = {\r\n                    dgm_id: this.selectDgm.dgm_id,\r\n                    dgm_type: this.selectDgm.dgm_type,\r\n                    machine_id: this.selectDgm.machine_id,\r\n                };\r\n                getApi.getCorrectionFactorByDgmId(params)\r\n                    .then(res => {\r\n                        let list = res.list;\r\n                        if(list && list.length){\r\n                            if(this.data_step===0){\r\n                                list.forEach(item=>{\r\n                                    if(!this.chList[item.ch_type]){\r\n                                        this.chList[item.ch_type]=[];\r\n                                    }\r\n                                    item.output1= '';\r\n                                    item.output2= '';\r\n                                    item.c_output2= '';\r\n                                    item.ac_corr= '';\r\n                                    item.null_shift= '';\r\n                                    this.chList[item.ch_type].push(item);\r\n                                })\r\n                            }\r\n                            else{\r\n                                let prop = \"\";\r\n                                let list2 = this.chooseChList;//显示的通道数据\r\n                                switch(Number(this.data_step)){\r\n                                    case 1:\r\n                                        prop = \"output1\";\r\n                                        break;\r\n                                    case 2:\r\n                                        prop = \"output2\";\r\n                                        break;\r\n                                    case 5:\r\n                                        prop = \"c_output1\";\r\n                                        break;\r\n                                    case 6:\r\n                                        prop = \"c_output2\";\r\n                                        break;\r\n                                    default:\r\n                                        prop = \"start\";\r\n                                        break;\r\n                                }\r\n                                for(let i=0;i<list.length;i++){//请求得到的数据\r\n                                    for(let j=0;j<list2.length;j++){\r\n                                        if(list2[j].ch_id == list[i].ch_id && list2[j].ch_type == list[i].ch_type){\r\n                                            let item = list2[j];\r\n                                            item[prop] = list[i].outValue;\r\n                                            if(Number(this.data_step)===6){\r\n                                                let input2 = Number(this.curObj.input2);\r\n                                                let c_output2 = Number(item.outValue);\r\n                                                let errorNum = Math.abs(c_output2 - input2);\r\n                                                let rangeValue = Number(this.curObj.range);\r\n                                                /*let errorMin = Number(this.curObj.range.split('-')[0]);\r\n                                                let errorMax = Number(this.curObj.range.split('-')[1]);*/\r\n                                                let errorMin = input2 - Number(rangeValue*input2/100);\r\n                                                let errorMax = Number(input2 + Number(rangeValue*input2/100));\r\n                                                if(errorNum<errorMin || errorNum>errorMax){\r\n                                                    item.error = true;\r\n                                                }\r\n                                                else{\r\n                                                    item.error = false;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误' ,err)\r\n                    })\r\n            },\r\n            //新建行\r\n            addRow(){\r\n                if($.isEmptyObject(this.chList)){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '该采集器下没有建测点',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                if(this.selectDgm.dgm_id==''){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '请先选择需要设置校正系数的采集器',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                if(this.rowList.length){\r\n                    this.rowList.forEach(item=>{\r\n                        item.active = 0;\r\n                    })\r\n                }\r\n                let obj = {\r\n                    selectChType:'0',\r\n                    chTypeList: this.getChTypeList(this.selectDgm.dgm_type),\r\n                    selectRangeType:'',\r\n                    rangeTypeList:this.getRangeTypeList(this.selectDgm,0),\r\n                    input1: '10',\r\n                    input2: '20',\r\n                    range: '1',\r\n                    active: 1,\r\n                };\r\n                this.rowList.push(obj);\r\n                this.curObj = obj;\r\n                if(this.chList[obj.selectChType]){\r\n                    this.chooseChList = this.chList[obj.selectChType];\r\n                }\r\n            },\r\n            //量程下拉选项\r\n            getRangeTypeList(dgmInfo,chType){\r\n                let obj = {};\r\n                let dgmType = Number(dgmInfo.dgm_type);\r\n                switch(Number(chType)){\r\n                    case 0://振动通道\r\n                        if(dgmType===1){\r\n                            obj={\r\n                                '2':'10000g',\r\n                                '3':'2000g',\r\n                                '4':'400g',\r\n                                '5':'80g',\r\n                                '6':'50000g'\r\n                            };\r\n                        }\r\n                        else if(dgmType===2){\r\n                            if(dgmInfo.hw_db_ver==100){\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '50':'40000g',\r\n                                    '51':'32000g',\r\n                                    '1':'25600g',\r\n                                    '52':'16000g',\r\n                                    '53':'8000g',\r\n                                    '54':'4000g',\r\n                                    '55':'2000g',\r\n                                    '56':'1000g',\r\n                                    '57':'500g',\r\n                                    '58':'250g',\r\n                                    '59':'125g',\r\n                                    '11':'25g',\r\n                                    '42':'5g'\r\n                                };\r\n                            }\r\n                            else{\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '1':'20000g',\r\n                                    '9':'2000g',\r\n                                    '25':'250g',\r\n                                    '29':'25g',\r\n                                };\r\n                            }\r\n                        }\r\n                        else if(dgmType===3 || dgmType===9){\r\n                            if(parseInt(dgmInfo.hw_db_ver)<=100 && dgmInfo.hw_range_type==0){//group1=0 group2=0\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '1':'8000g',\r\n                                    '2':'1600g',\r\n                                    '3':'320g',\r\n                                };\r\n                            }\r\n                            else if(parseInt(dgmInfo.hw_db_ver)<=100 && dgmInfo.hw_range_type!=0){//group1=0 group2=1\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '1':'25600g',\r\n                                    '2':'12800g',\r\n                                    '3':'8000g',\r\n                                    '4':'6400g',\r\n                                    '5':'5120g',\r\n                                    '6':'3200g',\r\n                                    '7':'2560g',\r\n                                    '8':'1600g',\r\n                                    '9':'1280g',\r\n                                    '10':'800g',\r\n                                    '11':'640g',\r\n                                    '12':'400g',\r\n                                    '13':'320g',\r\n                                    '14':'200g',\r\n                                    '15':'160g',\r\n                                    '16':'100g',\r\n                                    '17':'80g',\r\n                                    '18':'50g',\r\n                                    '19':'40g',\r\n                                    '20':'25g',\r\n                                    '21':'20g',\r\n                                    '22':'10g',\r\n                                    '23':'5g',\r\n                                };\r\n                            }\r\n                            else if(parseInt(dgmInfo.hw_db_ver)>100 && dgmInfo.hw_range_type==0){//group1=1 group2=0\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '1':'8000g',\r\n                                    '2':'1600g',\r\n                                    '3':'320g',\r\n                                    '4':'64g',\r\n                                };\r\n                            }\r\n                            else if(parseInt(dgmInfo.hw_db_ver)>100 && dgmInfo.hw_range_type!=0){//group1=1 group2=1\r\n                                obj={\r\n                                    '0':'自动量程',\r\n                                    '1':'16000g',\r\n                                    '2':'8000g',\r\n                                    '3':'4000g',\r\n                                    '4':'3200g',\r\n                                    '5':'2000g',\r\n                                    '6':'1600g',\r\n                                    '7':'1000g',\r\n                                    '8':'800g',\r\n                                    '9':'640g',\r\n                                    '10':'500g',\r\n                                    '11':'400g',\r\n                                    '12':'320g',\r\n                                    '13':'250g',\r\n                                    '14':'200g',\r\n                                    '15':'160g',\r\n                                    '16':'125g',\r\n                                    '17':'100g',\r\n                                    '18':'80g',\r\n                                    '19':'62.5g',\r\n                                    '20':'50g',\r\n                                    '21':'40g',\r\n                                    '22':'31.25g',\r\n                                    '23':'25g',\r\n                                    '24':'20g',\r\n                                    '25':'15.625g',\r\n                                    '26':'12.5g',\r\n                                    '27':'10g',\r\n                                    '28':'6.25g',\r\n                                    '29':'5g',\r\n                                    '30':'3.125g',\r\n                                    '31':'2.5g',\r\n                                    '32':'1.25g',\r\n                                    '33':'0.625g',\r\n                                };\r\n                            }\r\n                        }\r\n                        else if(dgmType===7){\r\n                            obj={\r\n                                '255':'固定量程',\r\n                            };\r\n                        }\r\n                        break;\r\n                    case 4://温度通道\r\n                        if(dgmType===2){\r\n                            if(dgmInfo.hw_db_ver==0){\r\n                                obj={\"0\":\"4000mV\",\"1\":\"20000mV\",\"2\":\"2000mV\",\"3\":\"1000mV\"}\r\n                            }\r\n                            else{\r\n                                obj={\"0\":\"2000mV\",\"1\":\"20000mV\"};\r\n                            }\r\n                        }\r\n                        else if(dgmType===3 || dgmType===9){\r\n                            obj={\"0\":\"16000mV\",\"1\":\"8000mV\",\"2\":\"4000mV\"};\r\n                        }\r\n                        else if(dgmType==7){\r\n                            obj={\"255\":\"固定量程\"};\r\n                        }\r\n                        break;\r\n                    case 1://过程量通道\r\n                        if(dgmType===1){\r\n                            obj={'0':'1~5V','1':'-20~20V','2':'4~20mA'};\r\n                        }\r\n                        else if(dgmType===2){\r\n                            obj={'2':'4~20mA','3':'-10~10V'};\r\n                        }\r\n                        else{\r\n                            obj={'1':'-20~20V','2':'4~20mA'}\r\n                        }\r\n                        break;\r\n                    default:\r\n                        console.log('数据错误')\r\n                        break;\r\n                };\r\n                return obj;\r\n            },\r\n            //通道类型下拉\r\n            getChTypeList(dgmType){\r\n                let obj = {};\r\n                switch(Number(dgmType)){\r\n                    case 1://dgu2000v1\r\n                        obj={\r\n                            '0':'振动通道',\r\n                            '1':'过程量通道',\r\n                        };\r\n                        break;\r\n                    case 2://dgu2200\r\n                        obj={\r\n                            '0':'振动通道',\r\n                            '1':'过程量通道',\r\n                            '4':'温度通道'\r\n                        };\r\n                        break;\r\n                    case 3:  case 9://dgu2000v2,DGU2000E\r\n                        obj={\r\n                            '0':'振动通道',\r\n                            '1':'过程量通道',\r\n                            '4':'温度通道'\r\n                        };\r\n                        break;\r\n                    case 7://tmu2000\r\n                        obj={\r\n                            '0':'振动通道',\r\n                            '4':'温度通道'\r\n                        };\r\n                        break;\r\n                    default:\r\n                        console.log('数据错误')\r\n                        break;\r\n                };\r\n                return obj;\r\n            },\r\n            //修改通道类型，更改量程下拉选项\r\n            changeChType(item){\r\n                let chType = Number(item.selectChType);\r\n                item.rangeTypeList = this.getRangeTypeList(this.selectDgm,chType);\r\n                item.selectRangeType = '';\r\n                if(this.chList[item.selectChType]){\r\n                    this.chooseChList = this.chList[item.selectChType];\r\n                }\r\n                else{\r\n                    this.chooseChList = [];\r\n                }\r\n                this.selectChTypeVal = item.chTypeList[item.selectChType];\r\n                this.onReset();\r\n            },\r\n            // 修改量程\r\n            changeRangeType(item){\r\n                let rangeTypeList = [];\r\n                this.selectChTypeVal = '';\r\n                let counts = (arr, value) => arr.reduce((a, v) => v === value ? a + 1 : a + 0, 0);\r\n                if(this.rowList.length){\r\n                    this.rowList.forEach(obj=>{\r\n                        let ch_range = obj.selectChType +'_'+ obj.selectRangeType;\r\n                        rangeTypeList.push(ch_range);\r\n                    });\r\n                    if(counts(rangeTypeList,item.selectChType +'_'+item.selectRangeType)>1){\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: '量程类型不得重复',\r\n                            button: \"确认\",\r\n                        });\r\n                        item.selectRangeType = '';\r\n                        return;\r\n                    }\r\n                }\r\n                if(item.selectRangeType!==undefined){\r\n                    this.selectChTypeVal = item.chTypeList[item.selectChType] + item.rangeTypeList[item.selectRangeType];\r\n                }\r\n                else{\r\n                    this.selectChTypeVal = item.chTypeList[item.selectChType];\r\n                }\r\n            },\r\n            // 删除行\r\n            deleteRow(index){\r\n                this.rowList.splice(index,1);\r\n                this.selectChTypeVal = '';\r\n                this.chooseChList = [];\r\n                if(this.chList[this.curObj.selectChType]){\r\n                    let chList = this.chList[this.curObj.selectChType];\r\n                    chList.forEach(item=>{\r\n                        item.output1= '';\r\n                        item.output2= '';\r\n                        item.c_output2= '';\r\n                        item.ac_corr= '';\r\n                        item.null_shift= '';\r\n                    });\r\n                }\r\n                this.curObj = {};\r\n            },\r\n            // 点击表格效果\r\n            addClass(item){\r\n                this.rowList.forEach(item=>{\r\n                    item.active = 0;\r\n                })\r\n                item.active = 1;\r\n                if(item.chTypeList[item.selectChType] && item.rangeTypeList[item.selectRangeType]){\r\n                    this.selectChTypeVal = item.chTypeList[item.selectChType] + item.rangeTypeList[item.selectRangeType];\r\n                }\r\n                this.curObj = item;\r\n                if(this.chList[item.selectChType]){\r\n                    this.chooseChList = this.chList[item.selectChType];\r\n                }\r\n            },\r\n            // 选择采集器\r\n            chooseDgm(dgm){\r\n                this.searchDgmList.forEach(dgm=>{\r\n                    dgm.active = false;\r\n                })\r\n                dgm.active = true;\r\n                this.selectDgm = dgm;\r\n                //重新选择采集器，需要初始化一些信息\r\n                this.selectChTypeVal='';//所选中的通道类型\r\n                this.rowList=[];\r\n                this.chList={};//初始通道信息\r\n                this.chooseChList=[];//所选通道类型下的通道信息\r\n                this.data_step=0;//按钮的执行步骤，0初始状态，实时关闭，\r\n                this.timer=null;//定时器\r\n                this.curObj={};//当前所选择的通道信息\r\n                this.getChList();\r\n            },\r\n            // 开始获取实时数据\r\n            startRealData(){\r\n                var that = this;\r\n                that.timer !== null && clearInterval(that.timer);\r\n                that.timer = null;\r\n                if(this.chooseChList===undefined || this.chooseChList.length===0){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '该通道类型下未建测点',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                if(this.curObj.selectRangeType==='' || this.curObj.selectRangeType===undefined){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '量程不得为空',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                else if(this.curObj.input1=='' || this.curObj.input2==''){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '输入1和输入2不得为空',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                this.data_step=1;\r\n                if(this.chList[this.curObj.selectChType]){\r\n                    this.chooseChList = this.chList[this.curObj.selectChType];\r\n                }\r\n                let params = {\r\n                    machine_id:this.selectDgm.machine_id,//机组id,\r\n                    dgm_id:this.selectDgm.dgm_id,//采集器id,\r\n                    dgm_type:this.selectDgm.dgm_type,//采集器类型,\r\n                    ch_type:this.curObj.selectChType,//通道类型,\r\n                    range:this.curObj.selectRangeType,//量程信息\r\n                }\r\n                getApi.saveRang(params)\r\n                    .then(res => {\r\n                        that.timer = setInterval(function(){\r\n                            debounce(that.getChList(),3000);\r\n                        },3000);\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误' ,err)\r\n                    })\r\n\r\n            },\r\n            /**\r\n             * 重置\r\n             */\r\n            onReset(){\r\n                if(this.chooseChList === undefined || this.chooseChList.length===0){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '该通道类型下未建测点',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                this.data_step = 0;\r\n                this.chooseChList.forEach(item=>{\r\n                    item.output1= '';\r\n                    item.output2= '';\r\n                    item.c_output2= '';\r\n                    item.ac_corr= '';\r\n                    item.null_shift= '';\r\n                });\r\n                var that = this;\r\n                clearInterval(that.timer);\r\n                that.timer = null;\r\n            },\r\n\r\n            /**\r\n             * 固定输出1\r\n             */\r\n            fixOutput1(){\r\n                this.data_step = 2;\r\n            },\r\n            /**\r\n             * 固定输出2\r\n             */\r\n            fixOutput2(){\r\n                this.data_step = 3;\r\n            },\r\n            /**\r\n             * 固定校正输出2\r\n             */\r\n            fixC_output2(){\r\n                this.data_step = 0;\r\n                var that = this;\r\n                clearInterval(that.timer);\r\n                that.timer = null;\r\n            },\r\n            /**\r\n             * 计算校正系数\r\n             */\r\n            calCorrect(){\r\n                let ch_type = Number(this.curObj.selectChType);\r\n                let input1 = Number(this.curObj.input1);\r\n                let input2 = Number(this.curObj.input2);\r\n                let output1;\r\n                let output2;\r\n                this.chooseChList.forEach(obj=>{\r\n                    output1 = Number(obj.output1);\r\n                    output2 = Number(obj.output2);\r\n                    if(obj.output1==\"\" || obj.output2==\"\" || output1==0 || output2==0){\r\n                        obj.ac_corr = 1;\r\n                        obj.null_shift = 0;\r\n                    }\r\n                    else{\r\n                        let k_a = input1*output1+input2*output2;\r\n                        let k_b = output1*output1+output2*output2;\r\n                        obj.ac_corr = round(k_a/k_b,4);\r\n                        if(ch_type==2){\r\n                            let null_shift = (k_a/k_b)*output1-input1;\r\n                            obj.null_shift = round(null_shift,4);\r\n                        }\r\n                        else{\r\n                            obj.null_shift = 0;\r\n                        }\r\n                    }\r\n                })\r\n                this.data_step = 4;\r\n            },\r\n            /**\r\n             * 保存矫正系数\r\n             */\r\n            save(){\r\n                this.data_step = 6;\r\n                let params = [];\r\n                this.chooseChList.forEach(ch=>{\r\n                    let obj = {\r\n                        machine_id: this.selectDgm.machine_id,\r\n                        dgm_id:this.selectDgm.dgm_id,\r\n                        dgm_type:this.selectDgm.dgm_type,\r\n                        ch_id:ch.ch_id,\r\n                        ch_type:ch.ch_type,\r\n                        null_shift:ch.null_shift,\r\n                        corr:ch.ac_corr,\r\n                    };\r\n                    params.push(obj);\r\n                });\r\n                getApi.saveCorrectionFactorByDgmId(params)\r\n                    .then(res => {\r\n                        if(res.state===0){\r\n                            swal({\r\n                                title: \"提示\",\r\n                                text: '保存成功',\r\n                                button: \"确认\",\r\n                            });\r\n                        }\r\n                        else{\r\n                            swal({\r\n                                title: \"提示\",\r\n                                text: '保存失败',\r\n                                button: \"确认\",\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log('请求错误' ,err)\r\n                    })\r\n            },\r\n            /* 左右拖动 */\r\n            mouseMove(e){\r\n                let odiv = e.target;        //获取目标元素\r\n                //算出鼠标相对元素的位置\r\n                let disX = e.clientX - odiv.offsetLeft\r\n                let maxWidth = document.getElementsByClassName('controls-btn')[0].offsetWidth - 120;\r\n                document.onmousemove = (e)=>{       //鼠标按下并移动的事件\r\n                    //用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\r\n                    let left = e.clientX - disX;\r\n                    if(left < 120 && left > - maxWidth){\r\n                        //移动当前元素\r\n                        odiv.style.left = left + 'px';\r\n                    }\r\n                };\r\n                document.onmouseup = (e) => {\r\n                    document.onmousemove = null;\r\n                    document.onmouseup = null;\r\n                };\r\n            },\r\n            toLeft(){//向左移动\r\n                let btnContent = $('.btn-content').position();\r\n                let leftVal = btnContent.left;\r\n                if(leftVal<100){\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": true,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": false,\r\n                    };\r\n                    $('.btn-content').css('left',leftVal+50)\r\n                }\r\n                else{\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : true,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": false,\r\n                    };\r\n                }\r\n            },\r\n            toRight(){//向右移动\r\n                let btnContent = $('.btn-content').position();\r\n                let btnConWidth = $('.btn-content').width();\r\n                let leftVal = btnContent.left;\r\n                $('.btn-content').css('left',leftVal-50);\r\n                if(leftVal>=100){\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : true,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                    };\r\n                }\r\n                else if(Math.abs(leftVal)>btnConWidth-150){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '没有更多校正系数设置',\r\n                        button: \"确认\"\r\n                    })\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                        // \"disable\" : true,\r\n                    };\r\n                }\r\n                else{\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                    };\r\n                }\r\n\r\n            },\r\n            setBtnContentPosition(){\r\n                let num;\r\n                let that = this;\r\n                let btnContent = $('.btn-content').position();\r\n                let leftVal = btnContent.left;\r\n                this.btnData.forEach((item,index)=>{\r\n                    if(item.name ==that.name ){\r\n                        num = index\r\n                    }\r\n                })\r\n                $('.btn-content').css('left',leftVal-50*num);\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #myTable{\r\n        height: calc(100% - 40px);\r\n    }\r\n</style>\r\n","// extracted by mini-css-extract-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"myTable\", attrs: { id: \"myTable\" } }, [\n      _c(\"div\", { attrs: { id: \"tableContent\" } }, [\n        _c(\"div\", { staticClass: \"regulate-block\" }, [\n          _c(\"div\", { staticClass: \"regulate-left\" }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"search\",\n                on: {\n                  click: function($event) {\n                    $event.stopPropagation()\n                  }\n                }\n              },\n              [\n                _c(\"input\", {\n                  ref: \"searchInput\",\n                  staticClass: \"over-search-input\",\n                  attrs: { type: \"text\", placeholder: \"搜索\" }\n                }),\n                _vm._v(\" \"),\n                _c(\"i\", {\n                  staticClass: \"iconfont icon-zhongzi-sousuo search-icon\",\n                  on: { click: _vm.searchDgm }\n                })\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              { staticClass: \"search-result\" },\n              _vm._l(_vm.searchDgmList, function(dgm) {\n                return _c(\n                  \"li\",\n                  {\n                    staticClass: \"search-li\",\n                    class: dgm.active ? \"active\" : \"\",\n                    on: {\n                      click: function($event) {\n                        return _vm.chooseDgm(dgm)\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(dgm.dgm_id))]\n                )\n              }),\n              0\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"regulate-right\" }, [\n            _c(\"div\", { staticClass: \"setRegulate\" }, [\n              _c(\"div\", { staticClass: \"header\" }, [\n                _c(\"div\", { staticClass: \"header-text\" }, [\n                  _vm._v(\n                    \"\\n                                校正系数设置 - \" +\n                      _vm._s(_vm.selectDgm.dgm_id) +\n                      \"\\n                            \"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"regulate-btn\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      on: {\n                        click: function($event) {\n                          return _vm.addRow()\n                        }\n                      }\n                    },\n                    [_vm._v(\"新建行\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: {\n                        disabled:\n                          _vm.chooseChList === undefined ||\n                          _vm.chooseChList.length === 0\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.startRealData()\n                        }\n                      }\n                    },\n                    [_vm._v(\"开始\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: {\n                        disabled:\n                          _vm.chooseChList === undefined ||\n                          _vm.chooseChList.length === 0\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.onReset()\n                        }\n                      }\n                    },\n                    [_vm._v(\"重置\")]\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"table\", { staticClass: \"regulate-table\" }, [\n                _vm._m(0),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  _vm._l(_vm.rowList, function(item, index) {\n                    return _c(\n                      \"tr\",\n                      {\n                        class: item.active === 1 ? \"active\" : \"\",\n                        on: {\n                          click: function($event) {\n                            return _vm.addClass(item)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"td\", { staticClass: \"indexNum\" }, [\n                          _vm._v(_vm._s(Number(index + 1)))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: item.selectChType,\n                                  expression: \"item.selectChType\"\n                                }\n                              ],\n                              staticClass: \"rangeSelect\",\n                              on: {\n                                change: [\n                                  function($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call($event.target.options, function(o) {\n                                        return o.selected\n                                      })\n                                      .map(function(o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      item,\n                                      \"selectChType\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function($event) {\n                                    return _vm.changeChType(item)\n                                  }\n                                ]\n                              }\n                            },\n                            _vm._l(item.chTypeList, function(value, key) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: key } },\n                                [_vm._v(_vm._s(value))]\n                              )\n                            }),\n                            0\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: item.selectRangeType,\n                                  expression: \"item.selectRangeType\"\n                                }\n                              ],\n                              staticClass: \"rangeSelect\",\n                              on: {\n                                change: [\n                                  function($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call($event.target.options, function(o) {\n                                        return o.selected\n                                      })\n                                      .map(function(o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      item,\n                                      \"selectRangeType\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function($event) {\n                                    return _vm.changeRangeType(item)\n                                  }\n                                ]\n                              }\n                            },\n                            _vm._l(item.rangeTypeList, function(value, key) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: key } },\n                                [_vm._v(_vm._s(value))]\n                              )\n                            }),\n                            0\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: item.input1,\n                                expression: \"item.input1\"\n                              }\n                            ],\n                            staticClass: \"table-input\",\n                            domProps: { value: item.input1 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(item, \"input1\", $event.target.value)\n                              }\n                            }\n                          })\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: item.input2,\n                                expression: \"item.input2\"\n                              }\n                            ],\n                            staticClass: \"table-input\",\n                            domProps: { value: item.input2 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(item, \"input2\", $event.target.value)\n                              }\n                            }\n                          })\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: item.range,\n                                expression: \"item.range\"\n                              }\n                            ],\n                            staticClass: \"table-input\",\n                            domProps: { value: item.range },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(item, \"range\", $event.target.value)\n                              }\n                            }\n                          })\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"deleteBtn\",\n                              on: {\n                                click: function($event) {\n                                  $event.stopPropagation()\n                                  return _vm.deleteRow(index)\n                                }\n                              }\n                            },\n                            [_vm._v(\"删除\")]\n                          )\n                        ])\n                      ]\n                    )\n                  }),\n                  0\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"setRegulate\" }, [\n              _c(\"div\", { staticClass: \"header\" }, [\n                _c(\"div\", { staticClass: \"header-text\" }, [\n                  _vm._v(\n                    \"\\n                                校正系数计算 - \" +\n                      _vm._s(_vm.selectChTypeVal) +\n                      \"\\n                            \"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"regulate-btn\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: { disabled: _vm.data_step != 1 },\n                      on: {\n                        click: function($event) {\n                          return _vm.fixOutput1()\n                        }\n                      }\n                    },\n                    [_vm._v(\"保存输出1\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: { disabled: _vm.data_step != 2 },\n                      on: {\n                        click: function($event) {\n                          return _vm.fixOutput2()\n                        }\n                      }\n                    },\n                    [_vm._v(\"保存输出2\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: { disabled: _vm.data_step != 3 },\n                      on: {\n                        click: function($event) {\n                          return _vm.calCorrect()\n                        }\n                      }\n                    },\n                    [_vm._v(\"计算\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: { disabled: _vm.data_step != 4 },\n                      on: {\n                        click: function($event) {\n                          return _vm.save()\n                        }\n                      }\n                    },\n                    [_vm._v(\"保存\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn\",\n                      attrs: { disabled: _vm.data_step != 6 },\n                      on: {\n                        click: function($event) {\n                          return _vm.fixC_output2()\n                        }\n                      }\n                    },\n                    [_vm._v(\"校正输出2\")]\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"table\", { staticClass: \"regulate-table\" }, [\n                _vm._m(1),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  _vm._l(_vm.chooseChList, function(ch) {\n                    return _c(\"tr\", [\n                      _c(\"td\", [_vm._v(_vm._s(ch.ch_name))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(\n                          \"\\n                                    \" +\n                            _vm._s(ch.output1) +\n                            \"\\n                                \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(ch.output2))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: ch.ac_corr,\n                              expression: \"ch.ac_corr\"\n                            }\n                          ],\n                          staticClass: \"table-input\",\n                          domProps: { value: ch.ac_corr },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(ch, \"ac_corr\", $event.target.value)\n                            }\n                          }\n                        })\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: ch.null_shift,\n                              expression: \"ch.null_shift\"\n                            }\n                          ],\n                          staticClass: \"table-input\",\n                          domProps: { value: ch.null_shift },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(ch, \"null_shift\", $event.target.value)\n                            }\n                          }\n                        })\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { class: ch.error ? \"error\" : \"\" }, [\n                        _vm._v(_vm._s(ch.c_output2))\n                      ])\n                    ])\n                  }),\n                  0\n                )\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"controls-btn\" }, [\n        _c(\"div\", { staticClass: \"push-controls\" }, [\n          _c(\n            \"a\",\n            {\n              class: _vm.leftClass,\n              on: {\n                click: function($event) {\n                  return _vm.toLeft()\n                }\n              }\n            },\n            [_vm._v(\" < \")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"a\",\n            {\n              class: _vm.rightClass,\n              on: {\n                click: function($event) {\n                  return _vm.toRight()\n                }\n              }\n            },\n            [_vm._v(\" > \")]\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"btn-content\",\n            on: {\n              mousedown: function($event) {\n                return _vm.mouseMove($event)\n              }\n            }\n          },\n          _vm._l(_vm.btnData, function(btn, index) {\n            return _c(\n              \"button\",\n              {\n                key: index,\n                staticClass: \"con-dgm-btn\",\n                class: btn.active ? \"active\" : \"\",\n                on: {\n                  click: function($event) {\n                    return _vm.getTable(btn)\n                  }\n                }\n              },\n              [_vm._v(\" \" + _vm._s(btn.textBtn))]\n            )\n          }),\n          0\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", { staticClass: \"indexNum\" }, [_vm._v(\"序号\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"通道类型\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"量程\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"输入1(mV)\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"输入2(mV)\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"误差范围(%)\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"操作\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"通道名称\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"输出1\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"输出2\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"交流校正系数\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"零点漂移\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"校正输出2\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./regulateAll.vue?vue&type=template&id=332969f8&scoped=true&\"\nimport script from \"./regulateAll.vue?vue&type=script&lang=js&\"\nexport * from \"./regulateAll.vue?vue&type=script&lang=js&\"\nimport style0 from \"./regulateAll.vue?vue&type=style&index=0&id=332969f8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"332969f8\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\工作\\\\CCCCCCCCCC\\\\node_modules\\\\_vue-hot-reload-api@2.3.4@vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('332969f8')) {\n      api.createRecord('332969f8', component.options)\n    } else {\n      api.reload('332969f8', component.options)\n    }\n    module.hot.accept(\"./regulateAll.vue?vue&type=template&id=332969f8&scoped=true&\", function () {\n      api.rerender('332969f8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/content/regulate/regulateAll.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./regulateAll.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--1-0!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./regulateAll.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.8.2@mini-css-extract-plugin/dist/loader.js??ref--2-0!../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./regulateAll.vue?vue&type=style&index=0&id=332969f8&scoped=true&lang=css&\"","export * from \"-!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!./regulateAll.vue?vue&type=template&id=332969f8&scoped=true&\""],"sourceRoot":""}