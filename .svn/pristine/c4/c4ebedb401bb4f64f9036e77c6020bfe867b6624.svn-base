{"version":3,"sources":["webpack:///src/components/content/system/machine/MachineTable.vue","webpack:///./src/components/content/system/machine/MachineTable.vue?f123","webpack:///./src/components/content/system/machine/MachineTable.vue?2466","webpack:///./src/components/content/system/machine/MachineTable.vue","webpack:///./src/components/content/system/machine/MachineTable.vue?7855","webpack:///./src/components/content/system/machine/MachineTable.vue?3847","webpack:///./src/components/content/system/machine/MachineTable.vue?c5f1","webpack:///./src/components/content/system/machine/table/js/mac_methods.js"],"names":["dgmType_name","type","t_root","parseInt","optfreq_type","val","optfreqTypeVal","filterFolder","folderData","folderDataObj","key","Number","split","MacTypeBtn","PumpTypeBtn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AAEA;AACA,sBADA;AAEA,oBAFA;AAGA,MAHA,kBAGA;AACA;AACA,mBADA;AAEA,wBAFA;AAGA,aAHA;AAGA;AACA,oBAJA;AAKA,kBALA;AAMA,mBANA;AAOA,sBAPA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA,OALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA,OANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA,OARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA,OATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVA,CARA;AAoBA;AACA,wBADA;AAEA,uBAFA,CAGA;;AAHA,OApBA;AAyBA;AACA,yBADA;AAEA;AAFA,OAzBA;AA6BA;AACA,kBADA;AAEA,kBAFA;AAGA,mBAHA;AAIA;AAJA,OA7BA;AAmCA,yBAnCA,CAmCA;;AAnCA;AAqCA,GAzCA;AA0CA,SA1CA,qBA0CA;AACA;AACA,GA5CA;AA6CA,SA7CA,qBA6CA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,KAJA;AAKA,iCAPA,CAOA;;AACA;AACA;AACA,GAvDA;AAwDA;AACA,YADA,sBACA;AACA,kEADA,CACA;;AACA,2BAFA,CAEA;;AACA,iCAHA,CAGA;;AACA,kCAJA,CAIA;;AACA,2BALA,CAKA;;AACA,+BANA,CAMA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAhBA;AAiBA,OAlBA,MAmBA;AACA;AACA;AACA,SAFA;AAGA;AACA,KAhCA;AAiCA,YAjCA,oBAiCA,IAjCA,EAiCA;AAAA;AACA,yBADA,CACA;;AACA;AACA,kBADA;AAEA;AAFA;AAIA,2BANA,CAOA;AACA,KAzCA;AA0CA,OA1CA,iBA0CA;AACA;AACA,KA5CA;AA6CA,QA7CA,kBA6CA;AAAA;;AACA;AACA;AAAA;AACA;AACA,qBADA;AAEA,uBAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,qBADA;AAEA,sBAFA;AAGA;AAHA;AAKA,OANA,MAOA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAfA;;AAiBA;AACA,uBADA;AAEA,sBAFA;AAGA;AAHA;AAKA;AACA;;AACA;AACA;;AACA;AAAA;AACA;;AACA;AACA;AACA,uCAFA,CAEA;;AACA,gGACA,IADA,CACA;AACA,0CADA,CACA;;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA,qBAKA,IALA,CAKA;AACA;AACA;AACA,mBARA;AAUA,iBAXA,MAWA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAOA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAOA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA;AACA,eApCA,WAqCA;AACA,0CADA,CACA;;AACA;AACA,eAxCA;AAyCA;AACA,WA/CA,MAgDA;AAAA;AACA;AAAA;AACA;AACA,aAFA,MAGA;AACA;AACA;;AACA;AACA,uCADA,CACA;;AACA,6FACA,IADA,CACA;AACA,0CADA,CACA;;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA,qBAKA,IALA,CAKA;AACA;AACA,mBAPA;AASA,iBAVA,MAWA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAQA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAQA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA;AACA,eAtCA,WAuCA;AACA,0CADA,CACA;;AACA;AACA,eA1CA;AA2CA;AACA,WArDA,MAsDA;AAAA;AACA;;AACA;AACA,uCADA,CACA;;AACA,6FACA,IADA,CACA;AACA,0CADA,CACA;;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA,qBAKA,IALA,CAKA;AACA;AACA,mBAPA;AASA,iBAVA,MAWA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAQA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA,iBAPA,MAQA;AACA;AACA;AACA,+BADA;AAEA,gCAFA;AAGA;AAHA;AAKA;AACA,eAtCA,WAuCA;AACA,0CADA,CACA;;AACA;AACA,eA1CA;AA2CA;AACA;AACA,SApLA,CAqLA;;;AACA;AACA;;AACA;AACA,qCADA,CACA;;AACA,kGACA,IADA,CACA;AACA,wCADA,CACA;;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA,mBAKA,IALA,CAKA;AACA;AACA,iBAPA;AASA,eAVA,MAWA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA,eAPA,MAQA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA,eAPA,MAQA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA;AACA,aAtCA,WAuCA;AACA,wCADA,CACA;;AACA;AACA,aA1CA;AA2CA;AACA,SAtOA,CAuOA;;;AACA;AACA;;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA;;AACA;AACA;AACA,qCAFA,CAEA;;AACA,wFACA,IADA,CACA;AACA,wCADA,CACA;;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA,mBAKA,IALA,CAKA;AACA;AACA,iBAPA;AAQA,eATA,MASA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA,eAPA,MAOA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA,eAPA,MAOA;AACA;AACA;AACA,6BADA;AAEA,8BAFA;AAGA;AAHA;AAKA;AACA,aAlCA,WAmCA;AACA,wCADA,CACA;;AACA;AACA,aAtCA;AAuCA;AACA;AACA;AAEA,KAjWA;AAkWA,gBAlWA,wBAkWA,KAlWA,EAkWA;AACA;AACA,KApWA;AAqWA,SArWA,iBAqWA,QArWA,EAqWA;AACA;AACA;AACA;AACA,uBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA;AACA;;AACA;AACA,KAjXA;AAkXA;AACA,iBAnXA,yBAmXA,QAnXA,EAmXA,IAnXA,EAmXA;AACA;AACA;AACA;AACA;AACA,yBADA;AAEA,iHAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,uBADA;AAEA,sIAFA;AAGA;AAHA;AAKA;AACA;AACA;;AACA;AACA,KA3YA;AA4YA;AACA,kBA7YA,0BA6YA,OA7YA,EA6YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,6BADA;AAEA,2GAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA,SAtBA,MAuBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,6BADA;AAEA,2GAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA,SAlBA,MAmBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,6BADA;AAEA,2GAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,KAxdA;AAydA;AACA,kBA1dA,0BA0dA,OA1dA,EA0dA;AACA;AACA;AACA;AACA,uBADA;AAEA,oEAFA;AAGA;AAHA;AAKA;AACA;AACA;;AACA;AACA,KAteA;AAueA;AACA,kBAxeA,4BAweA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAfA,EAHA,CAmBA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA;;AACA;AACA;AACA,uBADA;AAEA,sGAFA;AAGA;AAHA;AAKA;AACA;AACA;;AACA;AACA,KAhhBA;AAihBA;AACA,aAlhBA,qBAkhBA,IAlhBA,EAkhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAvCA;;AAyCA;AACA,KA7jBA;AA8jBA;AACA,aA/jBA,qBA+jBA,IA/jBA,EA+jBA;AACA;AACA,+BAFA,CAEA;;AACA,8BAHA,CAGA;;AACA,yBAJA,CAIA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAPA;;AAQA;AACA;AACA;AACA;AACA;AACA,OAdA,MAeA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAPA;;AAQA;AACA;AACA;AACA,OAZA,MAaA;AACA;AACA;AACA;AACA;AACA,SAJA;AAKA;AACA;AACA,KA1mBA;AA2mBA;AACA,YA5mBA,oBA4mBA,GA5mBA,EA4mBA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,KArnBA;;AAsnBA;AACA,aAvnBA,qBAunBA,CAvnBA,EAunBA;AACA,0BADA,CACA;AACA;;AACA;AACA;;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,OAPA;;AAQA;AACA;AACA;AACA,OAHA;AAIA,KAxoBA;AAyoBA,UAzoBA,oBAyoBA;AAAA;AACA;AACA;;AACA;AACA;AACA,0BADA;AAEA,wBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AACA,OAXA,MAYA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AACA,KAnqBA;AAoqBA,WApqBA,qBAoqBA;AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA,OAVA,MAWA;AACA;AACA,qBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA,wBAFA,CAGA;;AAHA;AAKA,OAhBA,MAiBA;AACA;AACA,0BADA;AAEA,yBAFA,CAGA;;AAHA;AAKA;AACA,2BADA;AAEA;AAFA;AAIA;AAEA,KAjtBA;AAktBA,yBAltBA,mCAktBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;AACA;AA7tBA;AAxDA,G;;;;;;;;;;;;AC/BA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAiC,gBAAgB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C,eAAe;AACf,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C,kBAAkB,6BAA6B;AAC/C,eAAe;AACf,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,qBAAqB,EAAE;AACzC;AACA;AACA;AACA,iBAAiB;AACjB,WAAW;AACX;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"js/17-a05267b8.js","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"myTable\" class=\"myTable\">\r\n            <button class=\"my-btn btn-active white-btn btn1 \" @click=\"add\" v-show=\"!isShow && !isAdd\" :class=\"{btn2:!obj.treeBtn}\">{{addBtnName}}</button>\r\n            <button class=\"my-btn btn-active btn2\" @click=\"save\" :class=\"{toRight:!obj.treeBtn}\" :disabled=\"saveDisabled\">保存设置</button>\r\n            <div id=\"tableContent\">\r\n                <!-- <keep-alive> -->\r\n                <router-view ref='child' @child-msg='updateIsShow' ></router-view>\r\n                <!-- </keep-alive> -->\r\n                <div class=\"noData\" v-if=\"isShow\">系统中没有可建该类型机组的设备!</div>\r\n            </div>\r\n            <div class=\"controls-btn\">\r\n                <div class=\"push-controls\">\r\n                    <a :class=\"leftClass\" @click=\"toLeft()\"> < </a>\r\n                    <a :class=\"rightClass\" @click=\"toRight()\"> > </a>\r\n                </div>\r\n                <div class=\"btn-content\" @mousedown=\"mouseMove($event)\">\r\n                    <router-link v-for=\"(btn,index) in btnData\" :key=\"index\" :to=\"{path:btn.name}\"  @click.native=\"getTable(btn.name,btn.type)\" class=\"con-dgm-btn\" v-show=\"btn.isShow\"> {{btn.textBtn}}</router-link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    import getApi from 'network/getApi'\r\n    import {addRows} from 'utils/utils'\r\n    import {MacTypeBtn,PumpTypeBtn} from './table/js/mac_methods.js'\r\n\r\n    export default {\r\n        name: \"machinetable\",\r\n        inject: ['reload'],\r\n        data(){\r\n            return{\r\n                title:'机组设置',\r\n                addBtnName: '新建机组',\r\n                ins:'',//切换按钮active\r\n                name:'VibMac',\r\n                isAdd:false,\r\n                isShow:false,\r\n                btnName:\"切换树状图\",\r\n                btnData: [//按钮初始化\r\n                    {type:1,textBtn:\"基本设置-风电\",name:'VibMac',isShow: false},\r\n                    {type:5,textBtn:\"基本设置-水泥\",name:'CementMac',isShow: false},\r\n                    {type:6,textBtn:\"基本设置-走行部\",name:'RailMac',isShow: false},\r\n                    {type:7,textBtn:\"基本设置-油气井\",name:'OilMac',isShow: false},\r\n                    {type:9,textBtn:\"基本设置-通用\",name:'CommonMac',isShow: false},\r\n                    {type:2,textBtn:\"工况设置\",name:'Condition',isShow: true},\r\n                    {type:3,textBtn:\"机泵设置\",name:'Pump',isShow: false},\r\n                    {type:8,textBtn:\"车厢设置\",name:'Car',isShow: false},\r\n                    {type:10,textBtn:\"通用子级设置\",name:'ComsonMac',isShow: false},\r\n                    {type:4,textBtn:\"线路设置\",name:'RailLine',isShow: false},\r\n                ],\r\n                leftClass: {\r\n                    \"left-btn\": true,\r\n                    \"active\": false,\r\n                    // \"disable\" : true,\r\n                },\r\n                rightClass: {\r\n                    \"right-btn\": true,\r\n                    \"active\": false,\r\n                },\r\n                obj:{\r\n                    name:name,\r\n                    chName:'',\r\n                    flag:false,\r\n                    treeBtn: false,\r\n                },\r\n                saveDisabled:false,//保存按钮是否可点击\r\n            }\r\n        },\r\n        created(){\r\n            this.btnName = this.$route.name == 'machinetree' ?'切换至表格':'切换树状图'\r\n        },\r\n        mounted(){\r\n            // 在点击标题的时候放大并重新渲染表格\r\n            this.$bus.$on('reloadtable',()=>{\r\n                if(this.$refs.child){\r\n                    this.$refs.child.hot.render()\r\n                }\r\n            })\r\n            this.name = this.$route.name //刷新的时候让button 的active 正确\r\n            this.statePage(this.name);\r\n            this.getTroot();\r\n        },\r\n        methods:{\r\n            getTroot(){\r\n                let tRoot = JSON.parse(sessionStorage.getItem('tRootList'));//组织类型集合，用来判断机组设置界面显示哪些内容，以及默认打开什么界面;\r\n                let vibType = [1,2];//风电系统\r\n                let cementType = [5,2,3];//水泥系统\r\n                let RailType = [6,2,8,4];//轨交系统\r\n                let OilType = [7,2];//油气井系统\r\n                let ComType = [2,9,10];//通用系统\r\n                if(tRoot && tRoot.length){\r\n                    this.btnData.forEach(btn=>{\r\n                        if(tRoot.includes(0) && vibType.includes(btn.type)){\r\n                            btn.isShow = true;\r\n                        }\r\n                        if(tRoot.includes(1) && cementType.includes(btn.type)){\r\n                            btn.isShow = true;\r\n                        }\r\n                        if(tRoot.includes(2) && RailType.includes(btn.type)){\r\n                            btn.isShow = true;\r\n                        }\r\n                        if(tRoot.includes(3) && OilType.includes(btn.type)){\r\n                            btn.isShow = true;\r\n                        }\r\n                        if(tRoot.includes(-1) && ComType.includes(btn.type)){\r\n                            btn.isShow = true;\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    this.btnData.forEach(btn=>{\r\n                        btn.isShow = true;\r\n                    })\r\n                }\r\n            },\r\n            getTable(name){ //点击下标签的时候改变active，改变路由，刷新之后路由不变，active不变，点击左边测点设置 active会有问题\r\n                this.isAdd = false //工况设置不可以添加\r\n                this.obj={\r\n                    name:name,\r\n                    flag:false\r\n                };\r\n                this.statePage(name);\r\n                // this.$refs.child.$store.commit('setTreeMac', []);\r\n            },\r\n            add(){\r\n                return addRows(this.$refs.child.hot,this.$refs.child.data,-1);\r\n            },\r\n            save(){\r\n                /* 保存按钮 */\r\n                if(!this.$refs.child.changeList.isValidResult){//单元格验证错误\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '格式不正确',\r\n                        button: \"确认\",\r\n                    });\r\n                    return;\r\n                }\r\n                let changeData = this.$refs.child.changeList.changeData;\r\n                let changeConData = this.$refs.child.changeList.changeConData;\r\n                let addData = this.$refs.child.changeList.addData;\r\n                let type = this.$refs.child.type;\r\n                let that = this;\r\n                if($.isEmptyObject(changeData) && $.isEmptyObject(addData) && changeConData.length==0){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '保存成功',\r\n                        button: \"确认\",\r\n                    });\r\n                }\r\n                else {\r\n                    if(that.checkName(type)){\r\n                        let text='存在同一组织下机组名重复';\r\n                        switch (Number(type)) {\r\n                            case 1: case 5: case 6: case 7: case 9:\r\n                                text='存在同一组织下机组名重复';\r\n                                break;\r\n                            case 3:\r\n                                text='存在同一组织下机泵名重复';\r\n                                break;\r\n                            case 8:\r\n                                text='存在同一机组下车厢名重复';\r\n                                break;\r\n                            case 10:\r\n                                text='存在同一机组下子级名重复';\r\n                                break;\r\n                            case 4:\r\n                                text='存在线路名称重复';\r\n                                break;\r\n                        }\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: text,\r\n                            button: \"确认\",\r\n                        });\r\n                        return;\r\n                    }\r\n                    if(!$.isEmptyObject(changeData)){\r\n                        let flag;\r\n                        if(MacTypeBtn.includes(Number(type))){//新建和修改机组信息\r\n                            flag = this.check(changeData);\r\n                            if(flag) {\r\n                                changeData.t_ids = this.$store.state.tids\r\n                                this.saveDisabled = true;//发送请求前按钮不可点击\r\n                                getApi.saveNewMachine(changeData)\r\n                                    .then(res => {\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        if (res.msg == 0) {\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存成功',\r\n                                                button: \"确认\",\r\n                                            })\r\n                                                .then((value) => {\r\n                                                    // this.$router.go(0)\r\n                                                    this.reload()\r\n                                                });\r\n\r\n                                        } else if (res.msg == 1) {\r\n                                            console.log('参数为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        } else if (res.msg == 2) {\r\n                                            console.log('后台运行错误！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        } else if (res.msg == 3) {\r\n                                            console.log('获取json数据时为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                    })\r\n                                    .catch(err=>{\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        console.log('请求错误' ,err)\r\n                                    })\r\n                            }\r\n                        }\r\n                        else if(PumpTypeBtn.includes(Number(type))){//修改机泵信息\r\n                            if(type===8){//车厢\r\n                                flag = this.checkIfHeadEnd() && this.checkPumpName(changeData,type);\r\n                            }\r\n                            else{\r\n                                flag = this.checkPumpName(changeData);\r\n                            }\r\n                            if(flag) {\r\n                                this.saveDisabled = true;//发送请求前按钮不可点击\r\n                                getApi.updatePumps(changeData)\r\n                                    .then(res=>{\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        if(res.msg==0){\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存成功',\r\n                                                button: \"确认\",\r\n                                            })\r\n                                                .then((value) => {\r\n                                                    this.$router.go(0)\r\n                                                });\r\n\r\n                                        }\r\n                                        else if(res.msg==1){\r\n                                            console.log('参数为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                        else if(res.msg==2){\r\n                                            console.log('后台运行错误！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                        else if(res.msg==3){\r\n                                            console.log('获取json数据时为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                    })\r\n                                    .catch(err=>{\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        console.log('请求错误' ,err)\r\n                                    })\r\n                            }\r\n                        }\r\n                        else if(Number(type)===4){//修改线路信息\r\n                            flag = this.checkLinesName(changeData);\r\n                            if(flag) {\r\n                                this.saveDisabled = true;//发送请求前按钮不可点击\r\n                                getApi.createLines(changeData)\r\n                                    .then(res=>{\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        if(res.msg==0){\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存成功',\r\n                                                button: \"确认\",\r\n                                            })\r\n                                                .then((value) => {\r\n                                                    this.$router.go(0)\r\n                                                });\r\n\r\n                                        }\r\n                                        else if(res.msg==1){\r\n                                            console.log('参数为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                        else if(res.msg==2){\r\n                                            console.log('后台运行错误！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                        else if(res.msg==3){\r\n                                            console.log('获取json数据时为空！');\r\n                                            swal({\r\n                                                title: \"提示\",\r\n                                                text: '保存失败',\r\n                                                button: \"确认\",\r\n                                            });\r\n                                        }\r\n                                    })\r\n                                    .catch(err=>{\r\n                                        that.saveDisabled = false;//按钮恢复可点击状态\r\n                                        console.log('请求错误' ,err)\r\n                                    })\r\n                            }\r\n                        }\r\n                    }\r\n                    //修改工况信息\r\n                    if(changeConData.length>0){\r\n                        let flag = this.checkCondition(changeConData);\r\n                        if(flag){\r\n                            this.saveDisabled = true;//发送请求前按钮不可点击\r\n                            getApi.updateCondition(changeConData)\r\n                                .then(res=>{\r\n                                    that.saveDisabled = false;//按钮恢复可点击状态\r\n                                    if(res.msg==0){\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存成功',\r\n                                            button: \"确认\",\r\n                                        })\r\n                                            .then((value) => {\r\n                                                this.$router.go(0)\r\n                                            });\r\n\r\n                                    }\r\n                                    else if(res.msg==1){\r\n                                        console.log('参数为空！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        });\r\n                                    }\r\n                                    else if(res.msg==2){\r\n                                        console.log('后台运行错误！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        });\r\n                                    }\r\n                                    else if(res.msg==3){\r\n                                        console.log('获取json数据时为空！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(err=>{\r\n                                    that.saveDisabled = false;//按钮恢复可点击状态\r\n                                    console.log('请求错误' ,err)\r\n                                })\r\n                        }\r\n                    }\r\n                    //新增机泵信息\r\n                    if(!$.isEmptyObject(addData) &&  PumpTypeBtn.includes(Number(type))){\r\n                        let flag = true;\r\n                        if(type===8){\r\n                            flag = this.checkIfHeadEnd() && this.checkPumpName(addData,type);\r\n                        }\r\n                        else{\r\n                            flag = this.checkPumpName(addData);\r\n                        }\r\n                        if(flag) {\r\n                            addData.t_ids = this.$store.state.tids;\r\n                            this.saveDisabled = true;//发送请求前按钮不可点击\r\n                            getApi.createPumps(addData)\r\n                                .then(res => {\r\n                                    that.saveDisabled = false;//按钮恢复可点击状态\r\n                                    if (res.msg == 0) {\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存成功',\r\n                                            button: \"确认\",\r\n                                        })\r\n                                            .then((value) => {\r\n                                                this.$router.go(0)\r\n                                            });\r\n                                    } else if (res.msg == 1) {\r\n                                        console.log('参数为空！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        })\r\n                                    } else if (res.msg == 2) {\r\n                                        console.log('后台运行错误！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        })\r\n                                    } else if (res.msg == 3) {\r\n                                        console.log('获取json数据时为空！');\r\n                                        swal({\r\n                                            title: \"提示\",\r\n                                            text: '保存失败',\r\n                                            button: \"确认\",\r\n                                        })\r\n                                    }\r\n                                })\r\n                                .catch(err=>{\r\n                                    that.saveDisabled = false;//按钮恢复可点击状态\r\n                                    console.log('请求错误' ,err)\r\n                                })\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n            updateIsShow(value){\r\n                this.isShow = value\r\n            },\r\n            check(mac_list){\r\n                for(let key in mac_list ){\r\n                    if( !mac_list[key].mac_me && key !=\"t_ids\"){\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: '未设置机组名',\r\n                            button: \"确认\",\r\n                        });\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            //验证机泵名是否为空\r\n            checkPumpName(pumpList,type){\r\n                if(type==8){\r\n                    for(let key in pumpList ){\r\n                        if( !pumpList[key].pump.baseInfo.car_wheel_d){\r\n                            swal({\r\n                                title: \"提示\",\r\n                                text: `车厢'${pumpList[key].pump.pump_name}'轮径不能为空`,\r\n                                button: \"确认\",\r\n                            });\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                for(let key in pumpList ){\r\n                    if( !pumpList[key].pump.pump_name){\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: `机组'${pumpList[key].machine_name}'下有子级未设置子级名`,\r\n                            button: \"确认\",\r\n                        });\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            //验证工况上下限的方法\r\n            checkCondition(conList){\r\n                var a1;\r\n                var b1;\r\n                var c1;\r\n                var d1;\r\n                var a2;\r\n                var b2;\r\n                var c2;\r\n                var d2;\r\n                for(let m=0;m<conList.length;m++){\r\n                    let condition = conList[m].condition;\r\n                    let mac_me = conList[m].mac_me;\r\n                    if(Number(condition.pos_type1)>0 && Number(condition.pos_type2)>0){//参考1+参考2\r\n                        for(let i=1; i<=3; i++){\r\n                            for(let j=i+1; j<=4; j++){\r\n                                a1 = Number(condition[\"conditionL_1_\"+i]);\r\n                                b1 = Number(condition[\"conditionH_1_\"+i]);\r\n                                c1 = Number(condition[\"conditionL_2_\"+i]);\r\n                                d1 = Number(condition[\"conditionH_2_\"+i]);\r\n                                a2 = Number(condition[\"conditionL_1_\"+j]);\r\n                                b2 = Number(condition[\"conditionH_1_\"+j]);\r\n                                c2 = Number(condition[\"conditionL_2_\"+j]);\r\n                                d2 = Number(condition[\"conditionH_2_\"+j]);\r\n                                if(!(a1>=b2 || a2>=b1 || c1>=d2 || c2>=d1)){\r\n                                    swal({\r\n                                        title: \"提示\",\r\n                                        text: `机组'${mac_me}'的工况区间有交叉`,\r\n                                        button: \"确认\",\r\n                                    });\r\n                                    return false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(Number(condition.pos_type1)>0){//参考1\r\n                        for(let i=1; i<=3; i++){\r\n                            for(let j=i+1; j<=4; j++){\r\n                                a1 = Number(condition[\"conditionL_1_\"+i]);\r\n                                b1 = Number(condition[\"conditionH_1_\"+i]);\r\n                                a2 = Number(condition[\"conditionL_1_\"+j]);\r\n                                b2 = Number(condition[\"conditionH_1_\"+j]);\r\n                                if(!(a1>=b2 || a2>=b1)){\r\n                                    swal({\r\n                                        title: \"提示\",\r\n                                        text: `机组'${mac_me}'的工况区间有交叉`,\r\n                                        button: \"确认\",\r\n                                    });\r\n                                    return false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(Number(condition.pos_type2)>0){//参考2\r\n                        for(let i=1; i<=3; i++){\r\n                            for(let j=i+1; j<=4; j++){\r\n                                a1 = Number(condition[\"conditionL_2_\"+i]);\r\n                                b1 = Number(condition[\"conditionH_2_\"+i]);\r\n                                a2 = Number(condition[\"conditionL_2_\"+j]);\r\n                                b2 = Number(condition[\"conditionH_2_\"+j]);\r\n                                if(!(a1>=b2 || a2>=b1)){\r\n                                    swal({\r\n                                        title: \"提示\",\r\n                                        text: `机组'${mac_me}'的工况区间有交叉`,\r\n                                        button: \"确认\",\r\n                                    });\r\n                                    return false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            //验证线路名称不能重复\r\n            checkLinesName(tmsList){\r\n                for(let key in tmsList ){\r\n                    if( !tmsList[key].line_name){\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: `线路名称不能为空`,\r\n                            button: \"确认\",\r\n                        });\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            //验证同一机组下只能有一个车厢为机头或者机尾\r\n            checkIfHeadEnd(){\r\n                let data = this.$refs.child.data;\r\n                let headPumps = {};\r\n                data.forEach(item=>{\r\n                    if(!headPumps[`${item.pump.mac_id}_0`]){\r\n                        headPumps[`${item.pump.mac_id}_0`]=[];\r\n                    }\r\n                    if(!headPumps[`${item.pump.mac_id}_1`]){\r\n                        headPumps[`${item.pump.mac_id}_1`]=[];\r\n                    }\r\n                    let ifHead = item.pump.baseInfo.if_head;\r\n                    let ifEnd = item.pump.baseInfo.if_end;\r\n                    if(ifHead && Number(ifHead) === 1){\r\n                        headPumps[`${item.pump.mac_id}_0`].push(item.pump.machine_name)\r\n                    }\r\n                    if(ifEnd && Number(ifEnd) === 1){\r\n                        headPumps[`${item.pump.mac_id}_1`].push(item.pump.machine_name)\r\n                    }\r\n                });\r\n                // console.log(headPumps)\r\n                for(let key in headPumps){\r\n                    if(headPumps[key].length>1){\r\n                        let m = key.split('_')[1];\r\n                        let text = '上行车头';\r\n                        if(m==='0'){\r\n                            text = '上行车头';\r\n                        }\r\n                        else{\r\n                            text = '下行车头';\r\n                        }\r\n                        let macName = headPumps[key][0];\r\n                        swal({\r\n                            title: \"提示\",\r\n                            text: `机组${macName}存在2个车厢为${text}`,\r\n                            button: \"确认\",\r\n                        });\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            //页面状态\r\n            statePage(name){\r\n                switch(name){\r\n                    case \"Condition\":\r\n                        this.isAdd = true;\r\n                        this.obj.flag = true;\r\n                        this.obj.treeBtn = false;\r\n                        this.obj.chName = \"工况设置\";\r\n                        this.title='工况设置';\r\n                        break;\r\n                    case \"VibMac\": case \"CementMac\": case \"RailMac\": case \"OilMac\": case \"CommonMac\":\r\n                        this.obj.chName = \"机组设置\";\r\n                        this.obj.treeBtn = true;\r\n                        this.title='机组设置';\r\n                        this.addBtnName = '新建机组';\r\n                        break;\r\n                    case 'Pump':\r\n                        this.obj.chName = \"机泵设置\";\r\n                        this.obj.treeBtn = true;\r\n                        this.title='机泵设置';\r\n                        this.addBtnName = '新建机泵';\r\n                        break;\r\n                    case 'Car':\r\n                        this.obj.chName = \"车厢设置\";\r\n                        this.obj.treeBtn = true;\r\n                        this.title='车厢设置';\r\n                        this.addBtnName = '新建车厢';\r\n                        break;\r\n                    case 'RailLine':\r\n                        this.obj.treeBtn = true;\r\n                        this.obj.chName = \"线路设置\";\r\n                        this.title='线路设置';\r\n                        this.addBtnName = '新建线路';\r\n                        break;\r\n                    case 'ComsonMac':\r\n                        this.obj.treeBtn = true;\r\n                        this.obj.chName = \"通用子级设置\";\r\n                        this.title='子级设置';\r\n                        this.addBtnName = '新建子级';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.$emit('listenToChildEvent',this.obj);\r\n            },\r\n            //验证统一组织下的机组名不能重复\r\n            checkName(type){\r\n                type = Number(type);\r\n                let folder_pumpName = {};//不同组织下的机泵名集合\r\n                let folder_macName = {};//不同组织下的机组名集合\r\n                let linesName = [];//线路名集合\r\n                // let sameName = this.changeList.sameName;//机组重名列表\r\n                let data = this.$refs.child.data;\r\n                if(MacTypeBtn.includes(type)){\r\n                    data.forEach(item=>{\r\n                        if(!folder_macName[item.machine.t_id]){\r\n                            folder_macName[item.machine.t_id]=[];\r\n                        }\r\n                        if(item.machine.mac_me){\r\n                            folder_macName[item.machine.t_id].push(item.machine.mac_me)\r\n                        }\r\n                    });\r\n                    for(let key in folder_macName){\r\n                        if(this.isRepeat(folder_macName[key])) {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n                else if(PumpTypeBtn.includes(type)){\r\n                    data.forEach(item => {\r\n                        if (!folder_pumpName[item.pump.folder_id]) {\r\n                            folder_pumpName[item.pump.folder_id] = [];\r\n                        }\r\n                        if (item.pump.pump_name) {\r\n                            folder_pumpName[item.pump.folder_id].push(item.pump.pump_name)\r\n                        }\r\n                    });\r\n                    for (let key in folder_pumpName) {\r\n                        if (this.isRepeat(folder_pumpName[key])) return true;\r\n                    }\r\n                }\r\n                else if(type===4){\r\n                    data.forEach(item => {\r\n                        if (item.tms.line_name) {\r\n                            linesName.push(item.tms.line_name)\r\n                        }\r\n                    });\r\n                    if (this.isRepeat(linesName)) return true;\r\n                }\r\n            },\r\n            //数组元素是否重复\r\n            isRepeat(arr) {\r\n                var hash = {};\r\n                for (var i in arr) {\r\n                    if (hash[arr[i]]){\r\n                        return true;\r\n                    }\r\n                    hash[arr[i]] = true;\r\n                }\r\n                return false;\r\n            },\r\n            /* 左右拖动 */\r\n            mouseMove(e){\r\n                let odiv = e.target;        //获取目标元素\r\n                //算出鼠标相对元素的位置\r\n                let disX = e.clientX - odiv.offsetLeft\r\n                let maxWidth = document.getElementsByClassName('controls-btn')[0].offsetWidth - 120;\r\n                document.onmousemove = (e)=>{       //鼠标按下并移动的事件\r\n                    //用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\r\n                    let left = e.clientX - disX;\r\n                    if(left < 120 && left > - maxWidth){\r\n                        //移动当前元素\r\n                        odiv.style.left = left + 'px';\r\n                    }\r\n                };\r\n                document.onmouseup = (e) => {\r\n                    document.onmousemove = null;\r\n                    document.onmouseup = null;\r\n                };\r\n            },\r\n            toLeft(){//向左移动\r\n                let btnContent = $('.btn-content').position();\r\n                let leftVal = btnContent.left;\r\n                if(leftVal<100){\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": true,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": false,\r\n                    };\r\n                    $('.btn-content').css('left',leftVal+50)\r\n                }\r\n                else{\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : true,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": false,\r\n                    };\r\n                }\r\n            },\r\n            toRight(){//向右移动\r\n                let btnContent = $('.btn-content').position();\r\n                let btnConWidth = $('.btn-content').width();\r\n                let leftVal = btnContent.left;\r\n                $('.btn-content').css('left',leftVal-50);\r\n                if(leftVal>=100){\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : true,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                    };\r\n                }\r\n                else if(Math.abs(leftVal)>btnConWidth-150){\r\n                    swal({\r\n                        title: \"提示\",\r\n                        text: '没有更多机组设置',\r\n                        button: \"确认\"\r\n                    })\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                        // \"disable\" : true,\r\n                    };\r\n                }\r\n                else{\r\n                    this.leftClass={\r\n                        \"left-btn\": true,\r\n                        \"active\": false,\r\n                        // \"disable\" : false,\r\n                    };\r\n                    this.rightClass= {\r\n                        \"right-btn\": true,\r\n                        \"active\": true,\r\n                    };\r\n                }\r\n\r\n            },\r\n            setBtnContentPosition(){\r\n                let num;\r\n                let that = this;\r\n                let btnContent = $('.btn-content').position();\r\n                let leftVal = btnContent.left;\r\n                this.btnData.forEach((item,index)=>{\r\n                    if(item.name ==that.name ){\r\n                        num = index\r\n                    }\r\n                })\r\n                $('.btn-content').css('left',leftVal-50*num);\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .add{\r\n        display:none\r\n    }\r\n    .toRight{\r\n        right: 15px;\r\n    }\r\n</style>\r\n","// extracted by mini-css-extract-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"myTable\", attrs: { id: \"myTable\" } }, [\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: !_vm.isShow && !_vm.isAdd,\n              expression: \"!isShow && !isAdd\"\n            }\n          ],\n          staticClass: \"my-btn btn-active white-btn btn1 \",\n          class: { btn2: !_vm.obj.treeBtn },\n          on: { click: _vm.add }\n        },\n        [_vm._v(_vm._s(_vm.addBtnName))]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"my-btn btn-active btn2\",\n          class: { toRight: !_vm.obj.treeBtn },\n          attrs: { disabled: _vm.saveDisabled },\n          on: { click: _vm.save }\n        },\n        [_vm._v(\"保存设置\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { attrs: { id: \"tableContent\" } },\n        [\n          _c(\"router-view\", {\n            ref: \"child\",\n            on: { \"child-msg\": _vm.updateIsShow }\n          }),\n          _vm._v(\" \"),\n          _vm.isShow\n            ? _c(\"div\", { staticClass: \"noData\" }, [\n                _vm._v(\"系统中没有可建该类型机组的设备!\")\n              ])\n            : _vm._e()\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"controls-btn\" }, [\n        _c(\"div\", { staticClass: \"push-controls\" }, [\n          _c(\n            \"a\",\n            {\n              class: _vm.leftClass,\n              on: {\n                click: function($event) {\n                  return _vm.toLeft()\n                }\n              }\n            },\n            [_vm._v(\" < \")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"a\",\n            {\n              class: _vm.rightClass,\n              on: {\n                click: function($event) {\n                  return _vm.toRight()\n                }\n              }\n            },\n            [_vm._v(\" > \")]\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"btn-content\",\n            on: {\n              mousedown: function($event) {\n                return _vm.mouseMove($event)\n              }\n            }\n          },\n          _vm._l(_vm.btnData, function(btn, index) {\n            return _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: btn.isShow,\n                    expression: \"btn.isShow\"\n                  }\n                ],\n                key: index,\n                staticClass: \"con-dgm-btn\",\n                attrs: { to: { path: btn.name } },\n                nativeOn: {\n                  click: function($event) {\n                    return _vm.getTable(btn.name, btn.type)\n                  }\n                }\n              },\n              [_vm._v(\" \" + _vm._s(btn.textBtn))]\n            )\n          }),\n          1\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./MachineTable.vue?vue&type=template&id=093c74ce&scoped=true&\"\nimport script from \"./MachineTable.vue?vue&type=script&lang=js&\"\nexport * from \"./MachineTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MachineTable.vue?vue&type=style&index=0&id=093c74ce&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"093c74ce\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\工作\\\\CCCCCCCCCC\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('093c74ce')) {\n      api.createRecord('093c74ce', component.options)\n    } else {\n      api.reload('093c74ce', component.options)\n    }\n    module.hot.accept(\"./MachineTable.vue?vue&type=template&id=093c74ce&scoped=true&\", function () {\n      api.rerender('093c74ce', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/content/system/machine/MachineTable.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MachineTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MachineTable.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MachineTable.vue?vue&type=style&index=0&id=093c74ce&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MachineTable.vue?vue&type=style&index=0&id=093c74ce&scoped=true&lang=scss&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MachineTable.vue?vue&type=template&id=093c74ce&scoped=true&\"","\r\n//采集器类型名称转化\r\nexport function dgmType_name(type,t_root){\r\n    let dgmType_name = '';\r\n    switch(parseInt(type)){\r\n        case 1:\r\n            dgmType_name = \"DGU2000V1\";\r\n            break;\r\n        case 2:\r\n            dgmType_name =\"DGU2200\";\r\n            break;\r\n        case 3:\r\n            dgmType_name =\"DGU2000V2\";\r\n            break;\r\n        case 4:\r\n            if(parseInt(t_root)===1){\r\n                dgmType_name =\"DGU2100E\";\r\n            }\r\n            else{\r\n                dgmType_name =\"MHD\";\r\n            }\r\n            break;\r\n        case 5:\r\n            dgmType_name =\"DGU2600\";\r\n            break;\r\n        case 6:\r\n            dgmType_name =\"E821\";\r\n            break;\r\n        case 7:\r\n            dgmType_name =\"TMU2000\";\r\n            break;\r\n        case 9:\r\n            dgmType_name =\"DGU2000E\";\r\n            break;\r\n        case 10:\r\n            dgmType_name =\"WL9100\";\r\n            break;\r\n    }\r\n    return dgmType_name\r\n}\r\n\r\n\r\n/**\r\n * *频段类型转换\r\n * **/\r\nexport function optfreq_type(val) {\r\n    let optfreqTypeVal=\"\";\r\n    switch (val) {\r\n        case \"0\":\r\n            optfreqTypeVal = \"能量有效值\";\r\n            break;\r\n        case \"1\":\r\n            optfreqTypeVal = \"速度值\";\r\n            break;\r\n        case \"2\":\r\n            optfreqTypeVal = \"加速度值\";\r\n            break;\r\n    }\r\n    return optfreqTypeVal;\r\n}\r\n/**\r\n * *组织过滤\r\n * **/\r\nexport function filterFolder(folderData,type) {\r\n    let folderDataObj={};\r\n    let t_root;\r\n    for(let key in folderData){\r\n        t_root = Number(key.split('_')[1]);\r\n        switch (Number(type)) {\r\n            case 1:\r\n                if(t_root===0){\r\n                    folderDataObj[key] = folderData[key];\r\n                }\r\n                break;\r\n            case 5: case 3:\r\n                if(t_root===1){\r\n                    folderDataObj[key] = folderData[key];\r\n                }\r\n                break;\r\n            case 6: case 8:\r\n                if(t_root===2){\r\n                    folderDataObj[key] = folderData[key];\r\n                }\r\n                break;\r\n            case 7:\r\n                if(t_root===3){\r\n                    folderDataObj[key] = folderData[key];\r\n                }\r\n                break;\r\n            case 9: case 10:\r\n                if(t_root===-1){\r\n                    folderDataObj[key] = folderData[key];\r\n                }\r\n                break;\r\n\r\n        }\r\n    }\r\n    return folderDataObj;\r\n}\r\n/**\r\n * *不同组织类型的机组级别类型\r\n * **/\r\nexport const MacTypeBtn = [1,5,6,7,9];\r\n/**\r\n * *不同组织类型的机泵级别类型\r\n * **/\r\nexport const PumpTypeBtn = [3,8,10];\r\n"],"sourceRoot":""}