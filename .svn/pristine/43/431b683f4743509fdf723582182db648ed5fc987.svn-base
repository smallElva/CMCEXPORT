(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[80],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($, swal) {/* harmony import */ var assets_lib_jsMind_jsmind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! assets/lib/jsMind/jsmind.js */ "./src/assets/lib/jsMind/jsmind.js");
/* harmony import */ var assets_lib_jsMind_jsmind_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(assets_lib_jsMind_jsmind_js__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  name: "FolderTree",
  data: function data() {
    return {
      data: [],
      parentFolder: [],
      //获取的组织列表数据
      jm: null,
      chooseTid: "",
      mind: {},
      options: {},
      addTreeData: [],
      //添加的数据
      changeTreeData: {},
      //修改的数据（新增的+修改的）
      editTreeData: [],
      //修改的数据
      deleteTreeData: [],
      //删除的数据
      editTreeList: [],
      //修改的组织的id集合
      isBtnShow: false,
      //添加节点按钮是否展示
      isRightClick: false,
      //是否点击右键事件
      scrollTree: 0 //滚动距离

    };
  },
  mounted: function mounted() {
    var that = this;
    var containerTree = document.getElementById('jsmind_container');
    that.isRightClick = false;

    containerTree.oncontextmenu = function (e) {
      if (e.target.nodeName == "JMNODE") {
        var e = event || window.event;
        that.isRightClick = true;
        that.$refs.wrapper.style.left = e.clientX - 185 + 'px';
        that.$refs.wrapper.style.top = e.clientY - 100 + 'px';
        return false; //取消右键点击的默认事件
      }
    };

    containerTree.onclick = function (e) {
      that.isRightClick = false;
      that.checkSelect();

      if (e.target.localName == "jmexpander") {
        that.isBtnShow = false;
      }
    };

    this.chooseTid = this.$store.state.treeTid;
    this.getAllFolder();
  },
  beforeRouteLeave: function beforeRouteLeave(to, from, next) {
    this.getThisData();
    var changeData = this.changeTreeData;

    if (!$.isEmptyObject(changeData)) {
      swal({
        title: "警告",
        text: "正在离开本页面，本页面内所有未保存数据都会丢失。",
        buttons: {
          sure: "确认",
          cancel: "取消"
        },
        dangerMode: true
      }).then(function (willDelete) {
        if (willDelete) {
          next();
        } else {
          window.history.go(1);
        }
      });
    } else {
      next();
    }
  },
  methods: {
    getAllFolder: function getAllFolder() {
      var that = this;
      this.$getApi.queryAllFolder(this.$store.state.tids).then(function (res) {
        if (res != undefined) {
          if (res.length > 0) {
            that.parentFolder = that.dendrongram(res);
          }

          that.load_jsmind();
        } else {
          console.log('数据错误！');
        }
      })["catch"](function (err) {
        console.log('请求错误', err);
      });
    },
    // 树状图排列显示
    dendrongram: function dendrongram(data) {
      var first = this.firstStage(data);
      var arr = [];

      for (var i = 0; i < 9; i++) {
        i ? arr[i] = this.childStage(data, arr[i - 1], i) : arr[i] = this.childStage(data, first, i);

        if (!arr[i].length) {
          arr.splice(i, 1);
          break;
        }
      }

      for (var _i = arr.length - 2; _i >= 0; _i--) {
        for (var j = 0, len = arr[_i + 1].length; j < len; j++) {
          for (var k = 0, length = arr[_i].length; k < length; k++) {
            var child = arr[_i + 1][j],
                parent = arr[_i][k];

            if (child.t_pid === parent.id) {
              parent['children'].push(child);
            }
          }
        }
      }

      if (arr.length > 0) {
        var children = arr[0];

        for (var _i2 = 0, l = children.length; _i2 < l; _i2++) {
          for (var _j = 0, _len = first.length; _j < _len; _j++) {
            if (children[_i2].t_pid === first[_j].id) {
              first[_j].children.push(children[_i2]);
            }
          }
        }
      }

      return first;
    },
    // 第一层级别
    firstStage: function firstStage(res) {
      var arr = [];
      var tids = [];

      for (var i = 0, l = res.length; i < l; i++) {
        tids.push(res[i].t_id);
      } // console.log(tids);


      for (var _i3 = 0, _l = res.length; _i3 < _l; _i3++) {
        // res[i].t_pid ||
        arr.push({
          name: res[_i3].t_name,
          topic: res[_i3].t_name,
          id: res[_i3].t_id,
          t_pid: res[_i3].t_pid,
          t_pName: res[_i3].t_pName,
          t_root: res[_i3].t_root,
          baseInfo: res[_i3].baseInfo,
          cids: res[_i3].cids,
          count: res[_i3].count,
          t_id: res[_i3].t_id,
          t_name: res[_i3].t_name,
          updateTime: res[_i3].updateTime,
          index: 1,
          children: []
        });
      }

      return arr;
    },
    // 除第一层后面所有级别
    childStage: function childStage(res, parents, index) {
      var arr = [];

      for (var i = 0, l = res.length; i < l; i++) {
        for (var j = 0, len = parents.length; j < len; j++) {
          if (res[i].t_pid === parents[j].id) {
            arr.push({
              name: res[i].t_name,
              topic: res[i].t_name,
              id: res[i].t_id,
              t_pid: res[i].t_pid,
              t_pName: res[i].t_pName,
              t_root: res[i].t_root,
              baseInfo: res[i].baseInfo,
              cids: res[i].cids,
              count: res[i].count,
              t_id: res[i].t_id,
              t_name: res[i].t_name,
              updateTime: res[i].updateTime,
              index: index + 2
            });
            break;
          }
        }
      }

      for (var _i4 = 0, _l2 = arr.length; _i4 < _l2; _i4++) {
        arr[_i4]['children'] = [];
      }

      return arr;
    },
    load_jsmind: function load_jsmind() {
      $('#jsmind_container').empty();
      this.data = [];
      var dataResult = [];

      if (this.parentFolder.length > 0) {
        for (var i = 0; i < this.parentFolder.length; i++) {
          if (this.chooseTid == "" || this.chooseTid == undefined) {
            if (this.parentFolder[0].t_pid == 0 || this.parentFolder[0].t_pid == null) {
              this.parentFolder[0].t_pid = "-1";
              this.parentFolder[0].t_pName = "顶级组织";
            }

            dataResult.push(this.parentFolder[0]);
            this.data = {
              "id": this.parentFolder[0].t_pid,
              "isroot": true,
              direction: "right",
              "topic": this.parentFolder[0].t_pName,
              "children": dataResult
            };
            break;
          } else if (this.chooseTid != "" && this.parentFolder[i].t_id == this.chooseTid) {
            if (this.parentFolder[i].t_pid == 0 || this.parentFolder[i].t_pid == null) {
              this.parentFolder[i].t_pid = "-1";
              this.parentFolder[i].t_pName = "顶级组织";
            }

            dataResult.push(this.parentFolder[i]);
            this.data = {
              "id": this.parentFolder[i].t_pid,
              "isroot": true,
              direction: "right",
              "topic": this.parentFolder[i].t_pName,
              "children": dataResult
            };
            break;
          }
        }
      } else {
        this.data = {
          "id": '-1',
          "isroot": true,
          direction: "right",
          "topic": '顶级组织',
          "t_root": 0,
          "children": []
        };
      }

      if (this.data.length === 0) {
        this.data = {
          "id": '-1',
          "isroot": true,
          direction: "right",
          "topic": '顶级组织',
          "t_root": 0,
          "children": []
        };
      }

      this.mind = {
        "meta": {
          "name": "demo",
          "author": "hizzgdev@163.com",
          "version": "0.2"
        },
        "format": "node_tree",
        "data": this.data
      };
      this.options = {
        container: 'jsmind_container',
        editable: true,
        theme: 'default',
        mode: "side",
        view: {
          hmargin: 20,
          // 思维导图距容器外框的最小水平距离
          vmargin: 20,
          // 思维导图距容器外框的最小垂直距离
          line_width: 1,
          // 思维导图线条的粗细
          line_color: '#000' // 思维导图线条的颜色

        },
        layout: {
          hspace: 50,
          // 节点之间的水平间距
          vspace: 20,
          // 节点之间的垂直间距
          pspace: 24 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）

        }
      };
      this.jm = new assets_lib_jsMind_jsmind_js__WEBPACK_IMPORTED_MODULE_0___default.a(this.options); // 让 jm 显示这个 mind 即可

      this.jm.show(this.mind);
      var that = this;
      $('jmnodes jmnode').on("click", function () {
        var node = that.jm.get_selected_node();
        that.addBtn(node);
      });
      $('jmnodes jmnode').on("dblclick", function (e) {
        var node = that.jm.get_selected_node();

        if (!node.isroot) {
          var folderType;

          if (parseInt(node.data.t_root) === 0 || parseInt(node.data.t_root) === 3) {
            //风电、油田
            folderType = 1;
          } else if (parseInt(node.data.t_root) === 1 || parseInt(node.data.t_root) === 2) {
            //水泥、走行部
            folderType = 3;
          }

          var linkObj = [node.id, node.topic, folderType];
          that.$store.commit('setTreeMac', linkObj);
          that.$router.push({
            name: "machinetree"
          });
        }
      });
      $('#jsmind_container').on('dragend', function (event) {
        var node = that.jm.get_selected_node();
        var data = that.jm.get_data('node_array');

        if (node) {
          for (var _i5 = 0; _i5 < data.data.length; _i5++) {
            if (that.editTreeList.indexOf(node.id) == -1 && data.data[_i5].id == node.id) {
              that.editTreeList.push(node.id);
            }
          }
        }
      });
      that.checkSelect();
      $('.jsmind-inner').on('scroll', function () {
        that.isBtnShow = false;
      });
    },
    checkSelect: function checkSelect() {
      var selectNode = this.jm.get_selected_node();

      if (selectNode != null || selectNode != undefined) {
        this.isBtnShow = true;
      } else {
        this.isBtnShow = false;
      }
    },

    /*获取数据*/
    getThisData: function getThisData() {
      this.changeTreeData = {};
      var treeData = this.jm.get_data("node_array");
      var folderNameList = []; //组织名集合

      for (var i = 0; i < treeData.data.length; i++) {
        folderNameList.push(treeData.data[i].topic);
      }

      var arr = this.staticNumber(folderNameList);

      for (var _i6 = 0; _i6 < treeData.data.length; _i6++) {
        if (treeData.data[_i6].id == -1 || treeData.data[_i6].isroot) {
          continue;
        }

        var folderObj = {};
        folderObj.updateTime = "0";
        folderObj.t_id = treeData.data[_i6].id.toString();
        folderObj.t_name = treeData.data[_i6].topic;
        folderObj.t_pid = treeData.data[_i6].parentid.toString();
        folderObj.t_pName = treeData.data[_i6].t_pName;
        folderObj.t_root = treeData.data[_i6].t_root.toString();
        folderObj.baseInfo = {};

        if (treeData.data[_i6].topic == "") {
          swal({
            title: "提示",
            text: "\u7EC4\u7EC7\u540D\u4E0D\u80FD\u4E3A\u7A7A\uFF01",
            button: "确认"
          });
          return false;
        } else if (arr[treeData.data[_i6].topic] >= 2) {
          swal({
            title: "提示",
            text: "".concat(treeData.data[_i6].topic, "\uFF1A\u7EC4\u7EC7\u540D\u4E0D\u80FD\u91CD\u590D\uFF01"),
            button: "确认"
          });
          return false;
        } else {
          if (treeData.data[_i6].operate == 1 || treeData.data[_i6].operate == 2) {
            this.changeTreeData[_i6] = folderObj;
          }
        }
      }
    },
    keepData: function keepData() {
      this.getThisData();
      var that = this;

      if (!$.isEmptyObject(that.changeTreeData)) {
        //添加组织和修改组织
        that.changeTreeData.t_ids = this.$store.state.tids;
        this.$axios.post('saveNewFolder', that.changeTreeData).then(function (res) {
          that.changeTreeData = {};

          if (res.msg == 0) {
            swal({
              title: "提示",
              text: "\u4FDD\u5B58\u6210\u529F",
              button: "确认"
            });
          } else if (res.msg == 1) {
            console.log('参数为空！');
            swal({
              title: "提示",
              text: "\u4FDD\u5B58\u5931\u8D25",
              button: "确认"
            });
          } else if (res.msg == 2) {
            console.log('后台程序运行错误！');
            swal({
              title: "提示",
              text: "\u4FDD\u5B58\u5931\u8D25",
              button: "确认"
            });
          }
        })["catch"](function (err) {
          console.log('请求错误', err);
        });
      } else {
        swal({
          title: "提示",
          text: '保存成功',
          button: "确认"
        });
      }
    },

    /*向前添加兄弟元素*/
    addBroBefore: function addBroBefore() {
      var node = this.jm.get_selected_node();

      if (node && node.id == "-1") {
        swal({
          title: "提示",
          text: "\u5DF2\u662F\u7B2C\u4E00\u7EA7\uFF01",
          button: "确认"
        });
      } else if (node && node.id != "-1") {
        this.jm.insert_node_before(node, Math.ceil(Math.random() * 10000) + "A", "+", {
          "operate": 1,
          't_root': node.data.t_root,
          't_pName': node.parent.topic
        }); // $('#control_btn').css('display','block');

        this.isBtnShow = true;
        this.addBtn(node);
        $('jmnodes jmnode').off("click");
        var that = this;
        $('jmnodes jmnode').click(function () {
          var node = that.jm.get_selected_node();
          that.addBtn(node);
        });
      }
    },

    /*向后添加兄弟元素*/
    addBroAfter: function addBroAfter() {
      var node = this.jm.get_selected_node();

      if (node && node.id == "-1") {
        swal({
          title: "提示",
          text: "\u5DF2\u662F\u7B2C\u4E00\u7EA7\uFF01",
          button: "确认"
        });
      } else if (node && node.id != "-1") {
        this.jm.insert_node_after(node, Math.ceil(Math.random() * 10000) + "A", "+", {
          "operate": 1,
          't_root': node.data.t_root,
          't_pName': node.parent.topic
        });
        $('#control_btn').css('display', 'block');
        this.addBtn(node);
        $('jmnodes jmnode').off("click");
        var that = this;
        $('jmnodes jmnode').click(function () {
          var node = that.jm.get_selected_node();
          that.addBtn(node);
        });
      }
    },
    addBtn: function addBtn(node) {
      this.isBtnShow = true;
      var scrollTopVal = $('.jsmind-inner').scrollTop();
      var lay_width = parseInt(node._data.view.width + 2);
      var lay_height = parseInt(node._data.view.height);
      var lay_left_up = parseInt(node._data.view.abs_x);
      var lay_top_up = parseInt(node._data.view.abs_y + 32 - scrollTopVal);
      var lay_left_down = parseInt(node._data.view.abs_x + node._data.view.width / 2);
      var lay_top_down = parseInt(node._data.view.abs_y + node._data.view.height + 48 - scrollTopVal);
      var lay_left_left = parseInt(node._data.view.abs_x - 40);
      var lay_top_left = parseInt(node._data.view.abs_y + node._data.view.height);
      var lay_left_right = parseInt(node._data.view.abs_x + node._data.view.width);
      var lay_top_right = parseInt(node._data.view.abs_y + node._data.view.height + 16 - scrollTopVal);

      if (node.id == this.chooseTid || this.chooseTid == "" || this.chooseTid == undefined && node.children.length == 0) {
        $('.right').css({
          "height": lay_height,
          "position": "absolute",
          "z-index": 9,
          "left": lay_left_right,
          "top": lay_top_right
        });
        $('.up').css({
          "z-index": -1
        });
        $('.down').css({
          "z-index": -1
        });
      } else if (node.isroot) {
        $('.right').css({
          "z-index": -1
        });
        $('.up').css({
          "z-index": -1
        });
        $('.down').css({
          "z-index": -1
        });
      } else {
        $('.up').css({
          "width": lay_width,
          "position": "absolute",
          "z-index": 9,
          "left": lay_left_up,
          "top": lay_top_up
        });
        $('.down').css({
          "width": lay_width,
          "position": "absolute",
          "z-index": 9,
          "left": lay_left_up,
          "top": lay_top_down
        }); // $('.left').css({"position":"absolute","z-index":9,"left":lay_left_left,"top":lay_top_left});

        $('.right').css({
          "height": lay_height,
          "position": "absolute",
          "z-index": 9,
          "left": lay_left_right,
          "top": lay_top_right
        });
      }
    },

    /*添加子元素*/
    addSon: function addSon() {
      var node = this.jm.get_selected_node();
      var treeData = this.jm.get_data("node_array");

      if (node) {
        this.jm.add_node(node.id, Math.ceil(Math.random() * 10000) + "A", "+", {
          "operate": 1,
          't_root': node.data.t_root,
          't_pName': node.topic
        });
        $('#control_btn').css('display', 'block');
        this.addBtn(node);
        var that = this;
        $('jmnodes jmnode').off("click");
        $('jmnodes jmnode').click(function () {
          var node = that.jm.get_selected_node();
          that.addBtn(node);
        });
        $("#clickExpandBtn").trigger('click');
      }
    },

    /*删除选中节点*/
    deleteItem: function deleteItem() {
      var _this = this;

      var node = this.jm.get_selected_node();
      var data = this.jm.get_data("node_array");

      if (node) {
        if (node.data.cids && node.data.cids.length > 0) {
          swal({
            title: "提示",
            text: "\u8BE5\u7EC4\u7EC7\u6709\u4E0B\u7EA7\u7EC4\u7EC7\u4E0D\u53EF\u5220",
            button: "确认"
          });
          $('#wrapper').css('display', 'none');
          return false;
        } else if (node.data.count == 1) {
          swal({
            title: "提示",
            text: "\u8BE5\u7EC4\u7EC7\u6709\u6240\u5C5E\u673A\u7EC4\u4E0D\u53EF\u5220",
            button: "确认"
          });
          $('#wrapper').css('display', 'none');
          return false;
        } else if (node.id == "-1") {
          swal({
            title: "提示",
            text: "\u9876\u7EA7\u7EC4\u7EC7\u4E0D\u53EF\u5220\u9664",
            button: "确认"
          });
          $('#wrapper').css('display', 'none');
          return false;
        }

        this.deleteTreeData.push(node.id);
        var that = this;
        swal({
          title: "警告",
          text: "一旦删除，该组织数据将不保留！！！确定删除吗?",
          buttons: {
            sure: "确认",
            cancel: "取消"
          },
          dangerMode: true
        }).then(function (willDelete) {
          if (willDelete) {
            _this.jm.remove_node(node.id);

            var paramObj = null;
            paramObj = {
              json: _this.deleteTreeData,
              t_ids: _this.$store.state.tids
            };

            _this.$axios.post('deleteFolder', paramObj).then(function (res) {
              that.deleteTreeData = []; //请求过后将删除列表置空

              if (res.msg == 0) {
                swal({
                  title: "提示",
                  text: "\u5220\u9664\u6210\u529F\uFF01",
                  button: "确认"
                });
              } else if (res.msg == 1) {
                console.log('参数为空！');
              } else if (res.msg == 2) {
                console.log('后台运行错误！');
              }
            })["catch"](function (err) {
              console.log('请求错误', err);
            });

            $('#control_btn').css('display', 'none');
            $('#clickBtn').trigger("click");
          } else {
            return false;
          }
        });
      } else {
        swal({
          title: "提示",
          text: "\u8BF7\u5148\u9009\u62E9\u60F3\u8981\u5220\u9664\u7684\u8282\u70B9",
          button: "确认"
        });
      }

      $('#wrapper').css('display', 'none');
    },
    bindClick: function bindClick() {
      $('jmnodes jmnode').click(function () {
        $('#control_btn').css('display', 'block');
      });
    },
    clickExpand: function clickExpand() {
      $('jmnodes jmexpander').click(function () {
        $('#control_btn').css('display', 'none');
      });
    },
    //数组中元素的个数
    staticNumber: function staticNumber(arr) {
      return arr.reduce(function (prev, next) {
        prev[next] = prev[next] + 1 || 1;
        return prev;
      }, {});
    },

    /*编辑选中节点*/
    editItem: function editItem() {
      var node = this.jm.get_selected_node();
      var data = this.jm.get_data('node_array');

      if (node) {
        if (node.id == "-1") {
          swal({
            title: "提示",
            text: "\u9876\u7EA7\u7EC4\u7EC7\u540D\u4E0D\u53EF\u7F16\u8F91",
            button: "确认"
          });
        } else {
          this.jm.begin_edit(node.id);
          node.data.operate = 2;
        }
      } else {
        swal({
          title: "提示",
          text: "\u8BF7\u5148\u9009\u62E9\u60F3\u8981\u7F16\u8F91\u7684\u8282\u70B9",
          button: "确认"
        });
      }

      $('#wrapper').css('display', 'none');
    }
  },
  watch: {
    data: function data() {
      if (this.data.length > 0) {
        this.$nextTick(function () {
          var that = this;
          $('jmnodes jmnode').off("click");
          $('jmnodes jmnode').click(function () {
            $('#control_btn').css('display', 'block');
            var node = that.jm.get_selected_node();
            that.addBtn(node);
            that.checkSelect();
          });
        });
      }
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! sweetalert */ "./node_modules/sweetalert/dist/sweetalert.min.js")))

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& ***!
  \**************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "myTree", attrs: { id: "myTree" } }, [
    _c(
      "button",
      {
        staticClass: "my-btn btn-active btn2",
        on: {
          click: function($event) {
            return _vm.keepData()
          }
        }
      },
      [_vm._v("保存设置")]
    ),
    _vm._v(" "),
    _c(
      "button",
      {
        staticStyle: { display: "none" },
        attrs: { id: "clickBtn" },
        on: {
          click: function($event) {
            return _vm.bindClick()
          }
        }
      },
      [_vm._v("点击")]
    ),
    _vm._v(" "),
    _c(
      "button",
      {
        staticStyle: { display: "none" },
        attrs: { id: "clickExpandBtn" },
        on: {
          click: function($event) {
            return _vm.clickExpand()
          }
        }
      },
      [_vm._v("点击")]
    ),
    _vm._v(" "),
    _c("div", { attrs: { id: "jsmind_container" } }),
    _vm._v(" "),
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.isBtnShow,
            expression: "isBtnShow"
          }
        ],
        attrs: { id: "control_btn" }
      },
      [
        _c(
          "div",
          {
            staticClass: "up",
            attrs: { title: "向上添加节点" },
            on: {
              click: function($event) {
                return _vm.addBroBefore()
              }
            }
          },
          [_c("span", { staticClass: "up_angle" })]
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "down",
            attrs: { title: "向下添加节点" },
            on: {
              click: function($event) {
                return _vm.addBroAfter()
              }
            }
          },
          [_c("span", { staticClass: "down_angle" })]
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "right",
            attrs: { title: "添加子节点" },
            on: {
              click: function($event) {
                return _vm.addSon()
              }
            }
          },
          [_c("span", { staticClass: "right_angle" })]
        )
      ]
    ),
    _vm._v(" "),
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.isRightClick,
            expression: "isRightClick"
          }
        ],
        ref: "wrapper",
        staticClass: "right-click",
        attrs: { id: "wrapper" }
      },
      [
        _c(
          "a",
          {
            staticClass: "right-click-btn",
            on: {
              click: function($event) {
                return _vm.deleteItem()
              }
            }
          },
          [_vm._v("删除选中节点")]
        ),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "right-click-btn",
            on: {
              click: function($event) {
                return _vm.editItem()
              }
            }
          },
          [_vm._v("编辑选中节点")]
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./src/components/content/system/folder/FolderTree.vue":
/*!*************************************************************!*\
  !*** ./src/components/content/system/folder/FolderTree.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& */ "./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&");
/* harmony import */ var _FolderTree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FolderTree.vue?vue&type=script&lang=js& */ "./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _FolderTree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"],
  _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  "aa356dda",
  null
  
)

/* hot reload */
if (true) {
  var api = __webpack_require__(/*! ./node_modules/vue-hot-reload-api/dist/index.js */ "./node_modules/vue-hot-reload-api/dist/index.js")
  api.install(__webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.esm.js"))
  if (api.compatible) {
    module.hot.accept()
    if (!api.isRecorded('aa356dda')) {
      api.createRecord('aa356dda', component.options)
    } else {
      api.reload('aa356dda', component.options)
    }
    module.hot.accept(/*! ./FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& */ "./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& */ "./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&");
(function () {
      api.rerender('aa356dda', {
        render: _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"],
        staticRenderFns: _FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]
      })
    })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))
  }
}
component.options.__file = "src/components/content/system/folder/FolderTree.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FolderTree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--1-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./FolderTree.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/system/folder/FolderTree.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_1_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FolderTree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&":
/*!********************************************************************************************************!*\
  !*** ./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& ***!
  \********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./FolderTree.vue?vue&type=template&id=aa356dda&scoped=true& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/content/system/folder/FolderTree.vue?vue&type=template&id=aa356dda&scoped=true&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_FolderTree_vue_vue_type_template_id_aa356dda_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);
//# sourceMappingURL=80-9d88d1f28ba3314a8fa6.js.map